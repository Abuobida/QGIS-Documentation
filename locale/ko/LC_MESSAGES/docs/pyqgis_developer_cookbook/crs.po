# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGISDoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Richard Duivenvoorde <richard@duif.net>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGISDoc 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-16 19:29+0100\n"
"PO-Revision-Date: 2020-03-16 19:23+0000\n"
"Last-Translator: Richard Duivenvoorde <richard@duif.net>, 2020\n"
"Language-Team: Korean (https://www.transifex.com/qgis/teams/6144/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../docs/pyqgis_developer_cookbook/crs.rst:5
msgid "Projections Support"
msgstr "투영 지원"

#: ../../docs/pyqgis_developer_cookbook/crs.rst:10
msgid ""
"If you're outside the pyqgis console, the code snippets on this page need "
"the following imports:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:24
msgid "Coordinate reference systems"
msgstr "좌표계"

#: ../../docs/pyqgis_developer_cookbook/crs.rst:26
msgid ""
"Coordinate reference systems (CRS) are encapsulated by the "
":class:`QgsCoordinateReferenceSystem "
"<qgis.core.QgsCoordinateReferenceSystem>` class. Instances of this class can"
" be created in several different ways:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:30
msgid "specify CRS by its ID"
msgstr "좌표계의 ID로 CRS 설정"

#: ../../docs/pyqgis_developer_cookbook/crs.rst:38
msgid "QGIS uses three different IDs for every reference system:"
msgstr "QGIS는 모든 좌표계를 3가지 형태의 ID로 식별할 수 있습니다."

#: ../../docs/pyqgis_developer_cookbook/crs.rst:40
msgid ""
":attr:`InternalCrsId <qgis.core.QgsCoordinateReferenceSystem.InternalCrsId>`"
" --- ID used in the internal QGIS database."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:41
msgid ""
":attr:`PostgisCrsId <qgis.core.QgsCoordinateReferenceSystem.PostgisCrsId>` "
"--- ID used in PostGIS databases."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:42
msgid ""
":attr:`EpsgCrsId <qgis.core.QgsCoordinateReferenceSystem.EpsgCrsId>` --- ID "
"assigned by the EPSG organization."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:44
msgid ""
"If not specified otherwise with the second parameter, PostGIS SRID is used "
"by default."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:46
msgid "specify CRS by its well-known text (WKT)"
msgstr "WKT(well-known text)로 CRS 설정"

#: ../../docs/pyqgis_developer_cookbook/crs.rst:56
msgid ""
"create an invalid CRS and then use one of the ``create*`` functions to "
"initialize it. In the following example we use a Proj string to initialize "
"the projection."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:66
msgid ""
"It's wise to check whether creation (i.e. lookup in the database) of the CRS"
" has been successful: :meth:`isValid() "
"<qgis.core.QgsCoordinateReferenceSystem.isValid>` must return ``True``."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:70
msgid ""
"Note that for initialization of spatial reference systems QGIS needs to look"
" up appropriate values in its internal database :file:`srs.db`. Thus in case"
" you create an independent application you need to set paths correctly with "
":meth:`QgsApplication.setPrefixPath() "
"<qgis.core.QgsApplication.setPrefixPath>`, otherwise it will fail to find "
"the database. If you are running the commands from the QGIS Python console "
"or developing a plugin you do not care: everything is already set up for "
"you."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:78
msgid "Accessing spatial reference system information:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:95
#: ../../docs/pyqgis_developer_cookbook/crs.rst:136
msgid "Output:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:111
msgid "CRS Transformation"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/crs.rst:113
msgid ""
"You can do transformation between different spatial reference systems by "
"using the :class:`QgsCoordinateTransform <qgis.core.QgsCoordinateTransform>`"
" class. The easiest way to use it is to create a source and destination CRS "
"and construct a :class:`QgsCoordinateTransform "
"<qgis.core.QgsCoordinateTransform>` instance with them and the current "
"project. Then just repeatedly call :meth:`transform() "
"<qgis.core.QgsCoordinateTransform.transform>` function to do the "
"transformation. By default it does forward transformation, but it is capable"
" to do also inverse transformation."
msgstr ""
