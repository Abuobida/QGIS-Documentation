# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
# 
# Translators:
# Xinfeng Chen <xinfeng.chen@nokia-sbell.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-06 11:48+0100\n"
"PO-Revision-Date: 2017-08-09 06:40+0000\n"
"Last-Translator: Xinfeng Chen <xinfeng.chen@nokia-sbell.com>, 2018\n"
"Language-Team: Chinese Simplified (https://www.transifex.com/qgis/teams/6144/zh-Hans/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"
"Language: zh-Hans\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/docs/developers_guide/git.rst:8
msgid "GIT Access"
msgstr "GIT访问"

#: ../../source/docs/developers_guide/git.rst:13
msgid ""
"This section describes how to get started using the QGIS GIT repository. "
"Before you can do this, you need to first have a git client installed on "
"your system."
msgstr "本章节描述了如何从头开始使用QGIS的git库。在此之前，你机器上需要先安装git客户端，你才能使用git库。"

#: ../../source/docs/developers_guide/git.rst:18
msgid "Installation"
msgstr "安装"

#: ../../source/docs/developers_guide/git.rst:21
msgid "Install git for GNU/Linux"
msgstr "在GNU/Linux下安装git"

#: ../../source/docs/developers_guide/git.rst:23
msgid "Debian based distro users can do:"
msgstr "基于Debian版本的用户可以："

#: ../../source/docs/developers_guide/git.rst:31
msgid "Install git for Windows"
msgstr "在Windows下安装git"

#: ../../source/docs/developers_guide/git.rst:33
msgid ""
"Windows users can obtain `msys git <https://gitforwindows.org/>`_ or use git"
" distributed with `cygwin <https://cygwin.com>`_."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:38
msgid "Install git for OSX"
msgstr "在OSX下安装git"

#: ../../source/docs/developers_guide/git.rst:40
msgid ""
"The `git project <https://git-scm.com/>`_ has a downloadable build of git. "
"Make sure to get the package matching your processor (x86_64 most likely, "
"only the first Intel Macs need the i386 package)."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:44
msgid "Once downloaded open the disk image and run the installer."
msgstr "下载完后，点击安装包开始安装。"

#: ../../source/docs/developers_guide/git.rst:46
msgid "PPC/source note"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:48
msgid ""
"The git site does not offer PPC builds. If you need a PPC build, or you just"
" want a little more control over the installation, you need to compile it "
"yourself."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:51
msgid ""
"Download the source from https://git-scm.com/. Unzip it, and in a Terminal "
"cd to the source folder, then:"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:59
msgid ""
"If you don't need any of the extras, Perl, Python or TclTk (GUI), you can "
"disable them before running make with:"
msgstr "如果你不需要任何附加库，比如Perl，Python或者TclTk（GUI），你可以用以下参数进行make，从而禁止这些功能："

#: ../../source/docs/developers_guide/git.rst:70
msgid "Accessing the Repository"
msgstr "访问代码库"

#: ../../source/docs/developers_guide/git.rst:73
msgid "To clone QGIS master:"
msgstr "克隆QGIS的主版本库："

#: ../../source/docs/developers_guide/git.rst:81
msgid "Check out a branch"
msgstr "导出一个分支库"

#: ../../source/docs/developers_guide/git.rst:83
msgid "To check out a branch, for example the release 2.6.1 branch do:"
msgstr "为了导出一个分支库，比如2.6.1的版本分支库，需要："

#: ../../source/docs/developers_guide/git.rst:92
msgid "To check out the master branch:"
msgstr "导出主版本库："

#: ../../source/docs/developers_guide/git.rst:99
msgid ""
"In QGIS we keep our most stable code in the current release branch. Master "
"contains code for the so called 'unstable' release series. Periodically we "
"will branch a release off master, and then continue stabilisation and "
"selective incorporation of new features into master."
msgstr ""
"在QGIS里，我们把最稳定的代码放在当前版本的分支库上。主版本库包含了一些不稳定版本的代码。我们会定期的从主版本库拉一个分支版本库出来，持续稳定化，并选择某些新功能加入主版本库。"

#: ../../source/docs/developers_guide/git.rst:104
msgid ""
"See the INSTALL file in the source tree for specific instructions on "
"building development versions."
msgstr "如果需要编译开发版本，请查看代码库里INSTALL文件里的相关说明。"

#: ../../source/docs/developers_guide/git.rst:109
msgid "QGIS documentation sources"
msgstr "QGIS文档库"

#: ../../source/docs/developers_guide/git.rst:111
msgid "If you're interested in checking out QGIS documentation sources:"
msgstr "如果你有兴趣导出QGIS的文档库："

#: ../../source/docs/developers_guide/git.rst:117
msgid ""
"You can also take a look at the readme included with the documentation repo "
"for more information."
msgstr "你也可以查看文档库里的readme文件，获取更多信息。"

#: ../../source/docs/developers_guide/git.rst:122
msgid "QGIS website sources"
msgstr "QGIS网页库"

#: ../../source/docs/developers_guide/git.rst:124
msgid "If you're interested in checking out QGIS website sources:"
msgstr "如果你有兴趣导出QGIS的网页库："

#: ../../source/docs/developers_guide/git.rst:130
msgid ""
"You can also take a look at the readme included with the website repo for "
"more information."
msgstr "你也可以查看网页库里的readme文件，获取更多信息。"

#: ../../source/docs/developers_guide/git.rst:135
msgid "GIT Documentation"
msgstr "git文档"

#: ../../source/docs/developers_guide/git.rst:138
msgid "See the following sites for information on becoming a GIT master."
msgstr "获取更多git相关信息，请查看下面的网站："

#: ../../source/docs/developers_guide/git.rst:140
msgid "https://services.github.com/"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:141
msgid "https://progit.org"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:142
msgid "http://gitready.com"
msgstr "http://gitready.com"

#: ../../source/docs/developers_guide/git.rst:146
msgid "Development in branches"
msgstr "在分支库上开发"

#: ../../source/docs/developers_guide/git.rst:149
msgid "Purpose"
msgstr "目标"

#: ../../source/docs/developers_guide/git.rst:151
msgid ""
"The complexity of the QGIS source code has increased considerably during the"
" last years. Therefore it is hard to anticipate the side effects that the "
"addition of a feature will have. In the past, the QGIS project had very long"
" release cycles because it was a lot of work to reestablish the stability of"
" the software system after new features were added. To overcome these "
"problems, QGIS switched to a development model where new features are coded "
"in GIT branches first and merged to master (the main branch) when they are "
"finished and stable. This section describes the procedure for branching and "
"merging in the QGIS project."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:163
msgid "Procedure"
msgstr "步骤"

#: ../../source/docs/developers_guide/git.rst:170
msgid "Initial announcement on mailing list:"
msgstr "先在邮件列表中声明"

#: ../../source/docs/developers_guide/git.rst:166
msgid ""
"Before starting, make an announcement on the developer mailing list to see "
"if another developer is already working on the same feature. Also contact "
"the technical advisor of the project steering committee (PSC). If the new "
"feature requires any changes to the QGIS architecture, a request for comment"
" (RFC) is needed."
msgstr ""
"在开始之前，需要在开发邮件列表里声明一下，看是否有其他开发人员已经在做同样的功能了。同时联系项目控制委员会（project steering "
"committee， PSC）的技术顾问。如果一个新功能需要改动QGIS的架构，还需要提一个记录（request for comment，RFC）。"

#: ../../source/docs/developers_guide/git.rst:172
msgid ""
"Create a branch: Create a new GIT branch for the development of the new "
"feature."
msgstr "创建一个分支库：为了开发一个新的功能，需要创建一个新的git分支库。"

#: ../../source/docs/developers_guide/git.rst:179
msgid ""
"Now you can start developing. If you plan to do extensive on that branch, "
"would like to share the work with other developers, and have write access to"
" the upstream repo, you can push your repo up to the QGIS official repo by "
"doing:"
msgstr ""
"终于，你可以开始功能开发了。如果你计划跟其他开发者共享你的开发分支库，需要把代码上传，你可以通过以下方式把你的代码库上传到QGIS的官方代码库："

#: ../../source/docs/developers_guide/git.rst:188
msgid "If the branch already exists your changes will be pushed into it."
msgstr "如果分支库已经存在，你的改动会更新上去。"

#: ../../source/docs/developers_guide/git.rst:190
msgid ""
"Rebase to master regularly: It is recommended to rebase to incorporate the "
"changes in master to the branch on a regular basis. This makes it easier to "
"merge the branch back to master later. After a rebase you need to ``git push"
" -f`` to your forked repo."
msgstr ""
"定期从主版本库更新代码：强烈建议你定期从主版本库更新代码到你的分支库，以便拿到主版本库里最新的改动。这样可以使你的分支库再合并回主版本库的时候，变得简单一些。更新完代码后，你需要在你的分支库上执行“git"
" push -f”。"

#: ../../source/docs/developers_guide/git.rst:195
msgid ""
"Never ``git push -f`` to the origin repository! Only use this for your "
"working branch."
msgstr "注意：千万不要在源库里执行“git push -f”！只能在你的开发分支库里执行。"

#: ../../source/docs/developers_guide/git.rst:203
msgid "Testing before merging back to master"
msgstr "合并回主版本库之前的测试"

#: ../../source/docs/developers_guide/git.rst:205
msgid ""
"When you are finished with the new feature and happy with the stability, "
"make an announcement on the developer list. Before merging back, the changes"
" will be tested by developers and users."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:212
msgid "Submitting Patches and Pull Requests"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:215
msgid ""
"There are a few guidelines that will help you to get your patches and pull "
"requests into QGIS easily, and help us deal with the patches that are sent "
"to use easily."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:221
msgid "Pull Requests"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:224
msgid ""
"In general it is easier for developers if you submit GitHub pull requests. "
"We do not describe Pull Requests here, but rather refer you to the `GitHub "
"pull request documentation <https://help.github.com/articles/using-pull-"
"requests>`_."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:228
msgid ""
"If you make a pull request we ask that you please merge master to your PR "
"branch regularly so that your PR is always mergeable to the upstream master "
"branch."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:232
msgid ""
"If you are a developer and wish to evaluate the pull request queue, there is"
" a very nice `tool that lets you do this from the command line "
"<https://changelog.com/posts/git-pulls-command-line-tool-for-github-pull-"
"requests>`_"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:236
msgid ""
"Please see the section below on 'getting your patch noticed'. In general "
"when you submit a PR you should take the responsibility to follow it through"
" to completion - respond to queries posted by other developers, seek out a "
"'champion' for your feature and give them a gentle reminder occasionally if "
"you see that your PR is not being acted on. Please bear in mind that the "
"QGIS project is driven by volunteer effort and people may not be able to "
"attend to your PR instantaneously. If you feel the PR is not receiving the "
"attention it deserves your options to accelerate it should be (in order of "
"priority):"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:245
msgid ""
"Send a message to the mailing list 'marketing' your PR and how wonderful it "
"will be to have it included in the code base."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:247
msgid ""
"Send a message to the person your PR has been assigned to in the PR queue."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:248
msgid "Send a message to Marco Hugentobler (who manages the PR queue)."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:249
msgid ""
"Send a message to the project steering committee asking them to help see "
"your PR incorporated into the code base."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:254
msgid "Best practice for creating a pull request"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:257
msgid "Always start a feature branch from current master."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:258
msgid ""
"If you are coding a feature branch, don't \"merge\" anything into that "
"branch, rather rebase as described in the next point to keep your history "
"clean."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:260
msgid ""
"Before you create a pull request do ``git fetch origin`` and ``git rebase "
"origin/master`` (given origin is the remote for upstream   and not your own "
"remote, check your ``.git/config`` or do ``git remote -v | grep "
"github.com/qgis``)."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:264
msgid ""
"You may do a git rebase like in the last line repeatedly without doing any "
"damage (as long as the only purpose of your branch is to get merged into "
"master)."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:267
msgid ""
"Attention: After a rebase you need to ``git push -f`` to your forked repo. "
"**CORE DEVS: DO NOT DO THIS ON THE QGIS PUBLIC REPOSITORY!**"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:271
msgid "Special labels to notify documentors"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:273
msgid ""
"Besides common tags you can add to classify your PR, there are special ones "
"you can use to automatically generate issue reports in QGIS-Documentation "
"repository as soon as your pull request is merged:"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:277
msgid ""
"``[needs-docs]`` to instruct doc writers to please add some extra "
"documentation after a fix or addition to an already existing functionality."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:279
msgid ""
"``[feature]`` in case of new functionality. Filling a good description in "
"your PR will be a good start."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:282
msgid ""
"Please devs use these labels (case insensitive) so doc writers have issues "
"to work on and have an overview of things to do. BUT please also take time "
"to add some text: either in the commit OR in the docs itself."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:287
msgid "For merging a pull request"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:289
msgid "Option A:"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:291
msgid "click the merge button (Creates a non-fast-forward merge)"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:293
msgid "Option B:"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:295
msgid ""
"`Checkout the pull request <https://gist.github.com/piscisaureus/3342247>`_"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:296
msgid "Test (Also required for option A, obviously)"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:297
msgid "checkout master, git merge pr/1234"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:298
msgid ""
"Optional: ``git pull --rebase``: Creates a fast-forward, no \"merge commit\""
" is made. Cleaner history, but it is harder to revert the merge."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:300
msgid "``git push`` (NEVER EVER use the -f option here)"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:304
msgid "Patch file naming"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:306
msgid ""
"If the patch is a fix for a specific bug, please name the file with the bug "
"number in it e.g. bug777fix.patch, and attach it to the `original bug report"
" in GitHub <https://github.com/qgis/QGIS/issues>`_."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:310
msgid ""
"If the bug is an enhancement or new feature, it's usually a good idea to "
"create a `ticket in GitHub <https://github.com/qgis/QGIS/issues>`_ first and"
" then attach your patch."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:316
msgid "Create your patch in the top level QGIS source dir"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:318
msgid ""
"This makes it easier for us to apply the patches since we don't need to "
"navigate to a specific place in the source tree to apply the patch. Also "
"when I receive patches I usually evaluate them using merge, and having the "
"patch from the top level dir makes this much easier. Below is an example of "
"how you can include multiple changed files into your patch from the top "
"level directory:"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:333
msgid ""
"This will make sure your master branch is in sync with the upstream "
"repository, and then generate a patch which contains the delta between your "
"feature branch and what is in the master branch."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:339
msgid "Getting your patch noticed"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:341
msgid ""
"QGIS developers are busy folk. We do scan the incoming patches on bug "
"reports but sometimes we miss things. Don't be offended or alarmed. Try to "
"identify a developer to help you and contact them asking them if they can "
"look at your patch. If you don't get any response, you can escalate your "
"query to one of the Project Steering Committee members (contact details also"
" available in the Technical Resources)."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:350
msgid "Due Diligence"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:352
msgid ""
"QGIS is licensed under the GPL. You should make every effort to ensure you "
"only submit patches which are unencumbered by conflicting intellectual "
"property rights. Also do not submit code that you are not happy to have made"
" available under the GPL."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:359
msgid "Obtaining GIT Write Access"
msgstr ""

#: ../../source/docs/developers_guide/git.rst:361
msgid ""
"Write access to QGIS source tree is by invitation. Typically when a person "
"submits several (there is no fixed number here) substantial patches that "
"demonstrate basic competence and understanding of C++ and QGIS coding "
"conventions, one of the PSC members or other existing developers can "
"nominate that person to the PSC for granting of write access. The nominator "
"should give a basic promotional paragraph of why they think that person "
"should gain write access. In some cases we will grant write access to non "
"C++ developers e.g. for translators and documentors. In these cases, the "
"person should still have demonstrated ability to submit patches and should "
"ideally have submitted several substantial patches that demonstrate their "
"understanding of modifying the code base without breaking things, etc."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:373
msgid ""
"Since moving to GIT, we are less likely to grant write access to new "
"developers since it is trivial to share code within github by forking QGIS "
"and then issuing pull requests."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:377
msgid ""
"Always check that everything compiles before making any commits / pull "
"requests. Try to be aware of possible breakages your commits may cause for "
"people building on other platforms and with older / newer versions of "
"libraries."
msgstr ""

#: ../../source/docs/developers_guide/git.rst:382
msgid ""
"When making a commit, your editor (as defined in $EDITOR environment "
"variable) will appear and you should make a comment at the top of the file "
"(above the area that says 'don't change this'). Put a descriptive comment "
"and rather do several small commits if the changes across a number of files "
"are unrelated. Conversely we prefer you to group related changes into a "
"single commit."
msgstr ""

#~ msgid ""
#~ "Windows users can obtain `msys git <http://code.google.com/p/msysgit/>`_ or "
#~ "use git distributed with `cygwin <http://cygwin.com>`_."
#~ msgstr ""
#~ "Windows用户可以用msys git <http://code.google.com/p/msysgit/>或cygwin "
#~ "<http://cygwin.com> 里发布的git"

#~ msgid ""
#~ "The `git project <http://git-scm.com/>`_ has a downloadable build of git. "
#~ "Make sure to get the package matching your processor (x86_64 most likely, "
#~ "only the first Intel Macs need the i386 package)."
#~ msgstr ""
#~ "去git项目主页（http://git-"
#~ "scm.com/）下载git包，注意匹配你机器的CPU架构（大部分情况下x86_64就够了，只有第一代基于Interl "
#~ "CPU的Macs需要i386的包）"

#~ msgid ""
#~ "Download the source from http://git-scm.com/. Unzip it, and in a Terminal cd"
#~ " to the source folder, then:"
#~ msgstr "从http://git-scm.com/下载源代码，在命令行里进入源代码所在文件夹，然后："

#~ msgid "http://gitref.org"
#~ msgstr "http://gitref.org"

#~ msgid "http://progit.org"
#~ msgstr "http://progit.org"

#~ msgid "Documentation on wiki"
#~ msgstr "wiki上的文档"

#~ msgid ""
#~ "It is also recommended to document the intended changes and the current "
#~ "status of the work on a wiki page."
#~ msgstr ""

#~ msgid ""
#~ "If you are a developer and wish to evaluate the pull request queue, there is"
#~ " a very nice `tool that lets you do this from the command line "
#~ "<http://thechangelog.com/git-pulls-command-line-tool-for-github-pull-"
#~ "requests/>`_"
#~ msgstr ""

#~ msgid ""
#~ "If the patch is a fix for a specific bug, please name the file with the bug "
#~ "number in it e.g. bug777fix.patch, and attach it to the `original bug report"
#~ " in trac <http://hub.qgis.org/projects/quantum-gis>`_."
#~ msgstr ""

#~ msgid ""
#~ "If the bug is an enhancement or new feature, its usually a good idea to "
#~ "create a `ticket in trac <http://hub.qgis.org/projects/quantum-gis>`_ first "
#~ "and then attach your patch."
#~ msgstr ""

#~ msgid ""
#~ "QGIS developers are busy folk. We do scan the incoming patches on bug "
#~ "reports but sometimes we miss things. Don't be offended or alarmed. Try to "
#~ "identify a developer to help you - using the `Technical Resources "
#~ "<http://qgis.org/en/site/getinvolved/governance/organisation/governance.html"
#~ "#community-resources>`_ and contact them asking them if they can look at "
#~ "your patch. If you don't get any response, you can escalate your query to "
#~ "one of the Project Steering Committee members (contact details also "
#~ "available in the Technical Resources)."
#~ msgstr ""

#~ msgid ""
#~ "If the patch is a fix for a specific bug, please name the file with the bug "
#~ "number in it e.g. bug777fix.patch, and attach it to the `original bug report"
#~ " in trac <https://issues.qgis.org/projects/qgis>`_."
#~ msgstr ""

#~ msgid ""
#~ "If the bug is an enhancement or new feature, its usually a good idea to "
#~ "create a `ticket in trac <https://issues.qgis.org/projects/qgis>`_ first and"
#~ " then attach your patch."
#~ msgstr ""

#~ msgid ""
#~ "QGIS developers are busy folk. We do scan the incoming patches on bug "
#~ "reports but sometimes we miss things. Don't be offended or alarmed. Try to "
#~ "identify a developer to help you - using the `Technical Resources "
#~ "<https://qgis.org/en/site/getinvolved/governance/governance.html#technical-"
#~ "resources>`_ and contact them asking them if they can look at your patch. If"
#~ " you don't get any response, you can escalate your query to one of the "
#~ "Project Steering Committee members (contact details also available in the "
#~ "Technical Resources)."
#~ msgstr ""

#~ msgid ""
#~ "The complexity of the QGIS source code has increased considerably during the"
#~ " last years. Therefore it is hard to anticipate the side effects that the "
#~ "addition of a feature will have. In the past, the QGIS project had very long"
#~ " release cycles because it was a lot of work to reetablish the stability of "
#~ "the software system after new features were added. To overcome these "
#~ "problems, QGIS switched to a development model where new features are coded "
#~ "in GIT branches first and merged to master (the main branch) when they are "
#~ "finished and stable. This section describes the procedure for branching and "
#~ "merging in the QGIS project."
#~ msgstr ""
#~ "在过去的几年里，QGIS的源代码已经变的相当复杂。因此，已经很难评估增加一个新功能会给其他部分带来多大的影响。在过去，QGIS项目每发布一个新的版本都需要很长的时间，因为新功能加入后重建软件系统的稳定性，这里面有大量的工作要做。为了解决这些问题，QGIS换了一种开发模式，也就是新功能先在git的分支库上开发，等开发完并且稳定后，才会被合并到主版本库里。这个章节描述了如何建立QGIS的分支库，以及如何合并到主版本库的步骤。"

#~ msgid ""
#~ "If you make a pull request we ask that you please merge master to your PR "
#~ "branch regularly so that your PR is always mergable to the upstream master "
#~ "branch."
#~ msgstr ""

#~ msgid ""
#~ "``[feature]`` in case of new functionnality. Filling a good description in "
#~ "your PR will be a good start."
#~ msgstr ""
