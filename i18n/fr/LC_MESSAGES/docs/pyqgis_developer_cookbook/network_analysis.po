# 
# Translators:
# Benoît de Cabissole, 2015
# Médéric RIBREUX <mederic.ribreux@medspx.fr>, 2014-2015
# Sant-anna <delazj@gmail.com>, 2014,2016
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-05 22:35\n"
"PO-Revision-Date: 2016-08-04 10:39+0000\n"
"Last-Translator: Sant-anna <delazj@gmail.com>\n"
"Language-Team: French (http://www.transifex.com/qgis/qgis-documentation/language/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:9
msgid "Network analysis library"
msgstr "Bibliothèque d'analyse de réseau"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:18
msgid ""
"creates mathematical graph from geographical data (polyline vector layers)"
msgstr "créé un graphe mathématique à partir de données géographiques (couches vecteurs de polylignes)"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:27
msgid "General information"
msgstr "Information générale"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:31
msgid "create graph from geodata (usually polyline vector layer)"
msgstr "créer un graphe depuis les données géographiques (en utilisant une couche vecteur de polylignes)"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:32
msgid "run graph analysis"
msgstr "lancer une analyse de graphe"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:33
msgid "use analysis results (for example, visualize them)"
msgstr "utiliser les résultats d'analyse (pour les visualiser par exemple)"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:142
msgid "crs --- coordinate reference system to use. Mandatory argument."
msgstr "crs --- système de coordonnées de référence à utiliser. Argument obligatoire."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:143
msgid ""
"otfEnabled --- use \"on the fly\" reprojection or no. By default "
"const:`True` (use OTF)."
msgstr "otfEnabled --- utiliser ou non la projection \"à la volée\". La valeur par défaut est const:`True` (oui, utiliser OTF)."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:145
msgid "topologyTolerance --- topological tolerance. Default value is 0."
msgstr "topologyTolerance --- la tolérance topologique. La valeur par défaut est 0."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:146
msgid "ellipsoidID --- ellipsoid to use. By default \"WGS84\"."
msgstr "ellipsoidID --- ellipsoïde à utiliser. Par défaut \"WGS84\"."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:185
msgid "Graph analysis"
msgstr "Analyse de graphe"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:212
msgid "source --- input graph"
msgstr "source --- graphe en entrée"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:213
msgid ""
"startVertexIdx --- index of the point on the tree (the root of the tree)"
msgstr "startVertexIdx --- index du point sur l'arbre (la racine de l'arbre)"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:214
msgid "criterionNum --- number of edge property to use (started from 0)."
msgstr "criterionNum --- nombre de propriétés d'arc à utiliser (en partant de 0)."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:220
msgid ""
"The :func:`dijkstra` method has the same arguments, but returns two arrays. "
"In the first array element i contains index of the incoming edge or -1 if "
"there are no incoming edges. In the second array element i contains distance"
" from the root of the tree to vertex i or DOUBLE_MAX if vertex i is "
"unreachable from the root."
msgstr "La méthode :func:`dijkstra` dispose des mêmes arguments mais retourne deux tableaux. Dans le premier, l'élément i contient l'index de l'arc à suivre ou -1 s'il n'y a pas d'arc à suivre. Dans le second tableau, l'élément i contient la distance depuis la racine de l'arbre jusqu'au sommet i ou la valeur DOUBLE_MAX si le sommet est inaccessible depuis la racine."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:14
msgid ""
"Starting from revision `ee19294562 "
"<https://github.com/qgis/QGIS/commit/ee19294562b00c6ce957945f14c1727210cffdf7>`_"
" (QGIS >= 1.8) the new network analysis library was added to the QGIS core "
"analysis library. The library:"
msgstr "Depuis la révision `ee19294562 <https://github.com/qgis/QGIS/commit/ee19294562b00c6ce957945f14c1727210cffdf7>`_ (QGIS >= 1.8), la nouvelle bibliothèque d'analyse de réseau a été ajoutée à la bibliothèque principale d'analyse de QGIS. La bibliothèque :"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:19
msgid ""
"implements basic methods from graph theory (currently only Dijkstra's "
"algorithm)"
msgstr "implémente des méthodes simples de la théorie des graphes (pour l'instant, uniquement avec l'algorithme Dijkstra)."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:22
msgid ""
"The network analysis library was created by exporting basic functions from "
"the RoadGraph core plugin and now you can use it's methods in plugins or "
"directly from the Python console."
msgstr "La bibliothèque d'analyse de réseau a été créée en exportant les fonctions de l'extension principale RoadGraph. Vous pouvez en utiliser les méthodes dans des extensions ou directement dans la console Python."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:29
msgid "Briefly, a typical use case can be described as:"
msgstr "Voici un résumé d'un cas d'utilisation typique:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:36
msgid "Building a graph"
msgstr "Construire un graphe"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:38
msgid ""
"The first thing you need to do --- is to prepare input data, that is to "
"convert a vector layer into a graph. All further actions will use this "
"graph, not the layer."
msgstr "La première chose à faire est de préparer les données d'entrée, c'est à dire de convertir une couche vecteur en graphe. Les actions suivantes utiliseront ce graphe et non la couche."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:42
msgid ""
"As a source we can use any polyline vector layer. Nodes of the polylines "
"become graph vertexes, and segments of the polylines are graph edges. If "
"several nodes have the same coordinates then they are the same graph vertex."
" So two lines that have a common node become connected to each other."
msgstr "Comme source de données, on peut utiliser n'importe quelle couche vecteur de polylignes. Les nœuds des polylignes deviendront les sommets du graphe et les segments des polylignes seront les arcs du graphes. Si plusieurs nœuds ont les mêmes coordonnées alors ils composent le même sommet de graphe. Ainsi, deux lignes qui ont en commun un même nœud sont connectées ensemble."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:47
msgid ""
"Additionally, during graph creation it is possible to \"fix\" (\"tie\") to "
"the input vector layer any number of additional points. For each additional "
"point a match will be found --- the closest graph vertex or closest graph "
"edge. In the latter case the edge will be split and a new vertex added."
msgstr "Pendant la création d'un graphe, il est possible de \"forcer\" (\"lier\") l'ajout d'un ou de plusieurs points additionnels à la couche vecteur d'entrée. Pour chaque point additionnel, un lien sera créé: le sommet du graphe le plus proche ou l'arc de graphe le plus proche. Dans le cas final, l'arc sera séparé en deux et un nouveau sommet sera ajouté."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:52
msgid ""
"Vector layer attributes and length of an edge can be used as the properties "
"of an edge."
msgstr "Les attributs de la couche vecteur et la longueur d'un segment peuvent être utilisés comme propriétés du segment."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:55
msgid ""
"Converting from a vector layer to the graph is done using the `Builder "
"<http://en.wikipedia.org/wiki/Builder_pattern>`_ programming pattern. A "
"graph is constructed using a so-called Director. There is only one Director "
"for now: `QgsLineVectorLayerDirector "
"<http://qgis.org/api/classQgsLineVectorLayerDirector.html>`_. The director "
"sets the basic settings that will be used to construct a graph from a line "
"vector layer, used by the builder to create the graph. Currently, as in the "
"case with the director, only one builder exists: `QgsGraphBuilder "
"<http://qgis.org/api/classQgsGraphBuilder.html>`_, that creates `QgsGraph "
"<http://qgis.org/api/classQgsGraph.html>`_ objects. You may want to "
"implement your own builders that will build a graphs compatible with such "
"libraries as `BGL "
"<http://www.boost.org/doc/libs/1_48_0/libs/graph/doc/index.html>`_ or "
"`NetworkX <http://networkx.lanl.gov/>`_."
msgstr "La conversion d'une couche vecteur en graphe est réalisée en utilisant un `Constructeur <http://en.wikipedia.org/wiki/Builder_pattern>`_ de motifs de programmation. Un graphe est construit en utilisant un élément appelé Directeur. Pour l'instant, il n'y a qu'un seul Directeur:\n`QgsLineVectorLayerDirector <http://qgis.org/api/classQgsLineVectorLayerDirector.html>`_. Le  directeur créé les paramètres de base qui seront utilisés pour la construction d'un graphe à partir d'une couche vecteur de ligne, utilisée par le Constructeur pour créer le graphe. Pour l'instant, comme pour le cas du directeur, il n'existe qu'un seul constructeur: `QgsGraphBuilder <http://qgis.org/api/classQgsGraphBuilder.html>`_, qui créé des objets `QgsGraph <http://qgis.org/api/classQgsGraph.html>`_. Vous pouvez implémenter vos propres constructeurs qui produiront des graphes compatibles avec des bibliothèques telles que `BGL <http://www.boost.org/doc/libs/1_48_0/libs/graph/doc/index.html>`_ ou `NetworkX <http://networkx.lanl.gov/>`_."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:66
msgid ""
"To calculate edge properties the programming pattern `strategy "
"<http://en.wikipedia.org/wiki/Strategy_pattern>`_ is used. For now only "
"`QgsDistanceArcProperter "
"<http://qgis.org/api/classQgsDistanceArcProperter.html>`_ strategy is "
"available, that takes into account the length of the route. You can "
"implement your own strategy that will use all necessary parameters. For "
"example, RoadGraph plugin uses a strategy that computes travel time using "
"edge length and speed value from attributes."
msgstr "Pour calculer les propriétés des arcs, une `stratégie <http://en.wikipedia.org/wiki/Strategy_pattern>`_ basée sur les motifs de programmation est employée. Pour l'instant, seule la stratégie `QgsDistanceArcProperter <http://qgis.org/api/classQgsDistanceArcProperter.html>`_ est disponible; elle prend en compte la longueur de la route. Vous pouvez implémenter votre propre stratégie qui utilisera tous les paramètres nécessaires. Par exemple, l'extension RoadGraph utilise une stratégie qui détermine le temps de trajet en utilisant les longueurs d'arc et la vitesse à partir d'attributs."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:73
msgid "It's time to dive into the process."
msgstr "Il est temps de plonger dans le processus."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:75
msgid ""
"First of all, to use this library we should import the networkanalysis "
"module"
msgstr "D'abord, nous devrions importer le module networkanalysis pour utiliser la bibliothèque"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:81
msgid "Then some examples for creating a director"
msgstr "Ensuite, quelques exemples pour créer un directeur"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:96
msgid ""
"To construct a director  we should pass a vector layer, that will be used as"
" the source for the graph structure and information about allowed movement "
"on each road segment (one-way or bidirectional movement, direct or reverse "
"direction). The call looks like this"
msgstr "Pour construire un directeur, il faut lui fournir une couche vecteur qui sera utilisée comme source pour la structure du graphe ainsi que des informations sur les mouvements permis sur chaque segment de route (sens unique ou déplacement bidirectionnel, direct ou inversé). L'appel au directeur se fait de la manière suivante"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:109
msgid "And here is full list of what these parameters mean:"
msgstr "Voici la liste complète de la signification de ces paramètres:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:111
msgid "``vl`` --- vector layer used to build the graph"
msgstr "``vl`` --- couche vecteur utilisée pour construire le graphe"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:112
msgid ""
"``directionFieldId`` --- index of the attribute table field, where "
"information about roads direction is stored. If ``-1``, then don't use this "
"info at all. An integer."
msgstr "``directionFieldId`` --- index du champ de la table d'attribut où est stocké l'information sur la direction de la route. Si ``-1`` est utilisé, cette information n'est pas utilisée. Un entier."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:115
msgid ""
"``directDirectionValue`` --- field value for roads with direct direction "
"(moving from first line point to last one). A string."
msgstr "``directDirectionValue`` --- valeur du champ utilisé pour les routes avec une direction directe (déplacement du premier point de la ligne au dernier). Une chaîne de caractères."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:117
msgid ""
"``reverseDirectionValue`` --- field value for roads with reverse direction "
"(moving from last line point to first one). A string."
msgstr "``reverseDirectionValue`` --- valeur du champ utilisé pour les routes avec une direction inverse (déplacement du dernier point de la ligne au premier). Une chaîne de caractères."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:119
msgid ""
"``bothDirectionValue`` --- field value for bidirectional roads (for such "
"roads we can move from first point to last and from last to first). A "
"string."
msgstr "``bothDirectionValue`` --- valeur du champ utilisé pour les routes bidirectionelles (pour ces routes, on peut se déplacer du premier point au dernier et du dernier au premier). Une chaîne de caractères."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:121
msgid ""
"``defaultDirection`` --- default road direction. This value will be used for"
" those roads where field ``directionFieldId`` is not set or has some value "
"different from any of the three values specified above. An integer. ``1`` "
"indicates direct direction, ``2`` indicates reverse direction, and ``3`` "
"indicates both directions."
msgstr "``defaultDirection`` --- direction par défaut de la route. Cette valeur sera utilisée pour les routes où le champ ``directionFieldId` n'est pas paramétré ou qui a une valeur différente des trois valeurs précédentes. Un entier ``1`` indique une direction directe, ``2`` indique une direction inverse et ``3`` indique les deux directions."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:127
msgid ""
"It is necessary then to create a strategy for calculating edge properties"
msgstr "Il est ensuite impératif de créer une stratégie de calcul des propriétés des arcs:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:133
msgid "And tell the director about this strategy"
msgstr "Et d'informer le directeur à propos de cette stratégie:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:139
msgid ""
"Now we can use the builder, which will create the graph. The QgsGraphBuilder"
" class constructor takes several arguments:"
msgstr "Nous pouvons maintenant utiliser le constructeur qui créera le graphe. Le constructeur de la classe QgsGraphBuilder utilise plusieurs arguments:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:153
msgid ""
"Also we can define several points, which will be used in the analysis. For "
"example"
msgstr "Nous pouvons également définir plusieurs points qui seront utilisés dans l'analyse, par exemple:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:161
msgid ""
"Now all is in place so we can build the graph and \"tie\" these points to it"
msgstr "Maintenant que tout est en place, nous pouvons construire le graphe et lier ces points dessus:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:167
msgid ""
"Building the graph can take some time (which depends on the number of "
"features in a layer and layer size). ``tiedPoints`` is a list with "
"coordinates of \"tied\" points. When the build operation is finished we can "
"get the graph and use it for the analysis"
msgstr "La construction du graphe peut prendre du temps (qui dépend du nombre d'entités dans la couche et de la taille de la couche). ``tiedPoints`` est une liste qui contient les coordonnées des points liés. Lorsque l'opération de construction est terminée, nous pouvons récupérer le graphe et l'utiliser pour l'analyse:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:176
msgid "With the next code we can get the vertex indexes of our points"
msgstr "Avec le code qui suit, nous pouvons récupérer les index des arcs de nos points:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:187
msgid ""
"Networks analysis is used to find answers to two questions: which vertexes "
"are connected and how to find a shortest path. To solve these problems the "
"network analysis library provides Dijkstra's algorithm."
msgstr "L'analyse de graphe est utilisée pour trouver des réponses aux deux questions: quels arcs sont connectés et comment trouver le plus court chemin ? Pour résoudre ces problèmes la bibliothèque d'analyse de graphe fournit l'algorithme de Dijkstra."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:191
msgid ""
"Dijkstra's algorithm finds the shortest route from one of the vertexes of "
"the graph to all the others and the values of the optimization parameters. "
"The results can be represented as a shortest path tree."
msgstr "L'algorithme de Dijkstra trouve le plus court chemin entre un des arcs du graphe par rapport à tous les autres en tenant compte des paramètres d'optimisation. Ces résultats peuvent être représentés comme un arbre du chemin le plus court."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:195
msgid ""
"The shortest path tree is a directed weighted graph (or more precisely --- "
"tree) with the following properties:"
msgstr "L'arbre du plus court chemin est un graphe pondéré de direction (plus précisément un arbre) qui dispose des propriétés suivantes:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:198
msgid "only one vertex has no incoming edges — the root of the tree"
msgstr "Seul un arc n'a pas d'arcs entrants: la racine de l'arbre."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:199
msgid "all other vertexes have only one incoming edge"
msgstr "Tous les autres arcs n'ont qu'un seul arc entrant."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:200
msgid ""
"if vertex B is reachable from vertex A, then the path from A to B is the "
"single available path and it is optimal (shortest) on this graph"
msgstr "Si un arc B est atteignable depuis l'arc A alors le chemin de A vers B est le seul chemin disponible et il est le chemin optimal (le plus court) sur ce graphe."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:203
msgid ""
"To get the shortest path tree use the methods :func:`shortestTree` and "
":func:`dijkstra` of `QgsGraphAnalyzer "
"<http://qgis.org/api/classQgsGraphAnalyzer.html>`_ class. It is recommended "
"to use method :func:`dijkstra` because it works faster and uses memory more "
"efficiently."
msgstr "Pour obtenir l'arbre du chemin le plus court, utilisez les méthodes :func:`shortestTree` et :func:`dijkstra` de la classe `QgsGraphAnalyzer <http://qgis.org/api/classQgsGraphAnalyzer.html>`_. Il est recommandé d'utiliser la méthode :func:`dijkstra` car elle fonctionne plus rapidement et utilise la mémoire de manière plus efficace."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:208
msgid ""
"The :func:`shortestTree` method is useful when you want to walk around the "
"shortest path tree. It always creates a new graph object (QgsGraph) and "
"accepts three variables:"
msgstr "La méthode :func:`shortestTree` est utile lorsque vous voulez approcher l'arbre du chemin le plus court. Elle créé toujours un nouvel objet de graphe (QgsGraph) et elle accepte trois variables:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:230
msgid ""
"Here is some very simple code to display the shortest path tree using the "
"graph created with the :func:`shortestTree` method (select linestring layer "
"in TOC and replace coordinates with your own). **Warning**: use this code "
"only as an example, it creates a lots of `QgsRubberBand "
"<http://qgis.org/api/classQgsRubberBand.html>`_ objects and may be slow on "
"large data-sets."
msgstr "Voici un exemple de code très simple pour afficher l'arbre du chemin le plus court en utilisant un graphe créé avec la méthode :func:`shortestTree` (sélectionnez la couche de polylignes dans la table des matières et remplacez les coordonnées avec les vôtres). **Attention**, ce code est juste un exemple, il crée de nombreux objets `QgsRubberBand <http://qgis.org/api/classQgsRubberBand.html>`_ et il reste très lent sur les jeux de données volumineux."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:270
msgid "Same thing but using :func:`dijkstra` method"
msgstr "Même chose mais en utilisant la méthode :func:`dijkstra`."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:307
msgid "Finding shortest paths"
msgstr "Trouver les chemins les plus courts"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:309
msgid ""
"To find the optimal path between two points the following approach is used. "
"Both points (start A and end B) are \"tied\" to the graph when it is built. "
"Then using the methods :func:`shortestTree` or :func:`dijkstra` we build the"
" shortest path tree with root in the start point A. In the same tree we also"
" find the end point B and start to walk through the tree from point B to "
"point A. The whole algorithm can be written as"
msgstr "Pour trouver le chemin optimal entre deux points, on peut utiliser l'approche suivante. Les deux points (départ en A et arrivée en B) sont \"liés\" au graphe lors de sa construction. En utilisant les méthodes :func:`shortestTree` ou :func:`dijkstra`, nous construisons alors l'arbre du chemin le plus court avec une racine qui démarre par le point A. Dans le même arbre, nous trouvons notre point B et commençons à traverser l'arbre du point B vers le point A. L'algorithme complet peut être écrit de la façon suivante"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:326
msgid ""
"At this point we have the path, in the form of the inverted list of vertexes"
" (vertexes are listed in reversed order from end point to start point) that "
"will be visited during traveling by this path."
msgstr "A ce niveau, nous avons le chemin, sous la forme d'une liste inversée d'arcs (les arcs sont listés dans un ordre inversé, depuis le point de la fin vers le point de démarrage) qui seront traversés lors de l'évolution sur le chemin."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:330
msgid ""
"Here is the sample code for QGIS Python Console (you will need to select "
"linestring layer in TOC and replace coordinates in the code with yours) that"
" uses method :func:`shortestTree`"
msgstr "Voici le code d'exemple pour la console Python de QGIS qui utilise la méthode :func:`shortestTree` (vous devrez sélectionner la couche de polylignes dans la légende et remplacer les coordonnées dans le code par les vôtres):"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:384
msgid "And here is the same sample but using :func:`dijkstra` method"
msgstr "Et voici le même exemple mais avec la méthode :func:`dijkstra`:"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:434
msgid "Areas of availability"
msgstr "Surfaces de disponibilité"

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:436
msgid ""
"The area of availability for vertex A is the subset of graph vertexes that "
"are accessible from vertex A and the cost of the paths from A to these "
"vertexes are not greater that some value."
msgstr "La surface de disponibilité d'un arc A est le sous-ensemble des arcs du graphe qui sont accessibles à partir de l'arc A et où le coût des chemins à partir de A vers ces arcs ne dépasse pas une certaine valeur."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:440
msgid ""
"More clearly this can be shown with the following example: \"There is a fire"
" station. Which parts of city can a fire truck reach in 5 minutes? 10 "
"minutes? 15 minutes?\". Answers to these questions are fire station's areas "
"of availability."
msgstr "Plus clairement, cela peut être illustré par l'exemple suivant: \"Il y a une caserne de pompiers. Quelles parties de la ville peuvent être atteintes par un camion de pompier en 5 minutes ? 10 minutes ? 15 minutes ?\" La réponse à ces questions correspond aux surface de disponibilité de la caserne de pompiers."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:445
msgid ""
"To find the areas of availability we can use method :func:`dijkstra` of the "
":class:`QgsGraphAnalyzer` class. It is enough to compare the elements of the"
" cost array with a predefined value. If cost[i] is less than or equal to a "
"predefined value, then vertex i is inside the area of availability, "
"otherwise it is outside."
msgstr "Pour trouver les surfaces de disponibilité, nous pouvons utiliser la méthode :func:`dijkstra` de la classe :class:`QgsGraphAnalyzer`. Elle suffit à comparer les éléments du tableau de coût avec une valeur prédéfinie. si le coût[i] est inférieur ou égal à la valeur prédéfinie, alors l'arc i est à l'intérieur de la surface de disponibilité, sinon il est situé en dehors."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:451
msgid ""
"A more difficult problem is to get the borders of the area of availability. "
"The bottom border is the set of vertexes that are still accessible, and the "
"top border is the set of vertexes that are not accessible. In fact this is "
"simple: it is the availability border based on the edges of the shortest "
"path tree for which the source vertex of the edge is accessible and the "
"target vertex of the edge is not."
msgstr "Un problème plus difficile à régler est d'obtenir les frontières de la surface de disponibilité. La frontière inférieure est constituée par l'ensemble des arcs qui sont toujours accessibles et la frontière supérieure est composée des arcs qui ne sont pas accessibles. En fait, c'est très simple: c'est la limite de disponibilité des arcs de l'arbre du plus court chemin pour lesquels l'arc source de l'arc est accessible et l'arc cible ne l'est pas."

#: ../../source/docs/pyqgis_developer_cookbook/network_analysis.rst:458
msgid "Here is an example"
msgstr "Voici un exemple:"

#~ msgid ""
#~ "Starting from revision `ee19294562 <https://github.com/qgis/Quantum-"
#~ "GIS/commit/ee19294562b00c6ce957945f14c1727210cffdf7>`_ (QGIS >= 1.8) the new"
#~ " network analysis library was added to the QGIS core analysis library. The "
#~ "library:"
#~ msgstr ""

#~ msgid ""
#~ "implements basics method of the graph theory (currently only Dijkstra's "
#~ "algorithm)"
#~ msgstr ""

#~ msgid ""
#~ "Network analysis library was created by exporting basics functions from "
#~ "RoadGraph core plugin and now you can use it's methods in plugins or "
#~ "directly from Python console."
#~ msgstr ""

#~ msgid "Briefly typical use case can be described as:"
#~ msgstr ""

#~ msgid "Building graph"
#~ msgstr ""

#~ msgid ""
#~ "The first thing you need to do --- is to prepare input data, that is to "
#~ "convert vector layer into graph. All further actions will use this graph, "
#~ "not the layer."
#~ msgstr ""

#~ msgid ""
#~ "As a source we can use any polyline vector layer. Nodes of the polylines "
#~ "become graph vertices, and segments of the polylines are graph edges. If "
#~ "several nodes have the same coordinates then they are the same graph vertex."
#~ " So two lines that have a common node become connected to each other."
#~ msgstr ""

#~ msgid ""
#~ "Additionally, during graph creation it is possible to \"fix\" (\"tie\") to "
#~ "the input vector layer any number of additional points. For each additional "
#~ "point a match will be found --- closest graph vertex or closest graph edge. "
#~ "In the latter case the edge will be splitted and new vertex added."
#~ msgstr ""

#~ msgid ""
#~ "As the properties of the edge a vector layer attributes can be used and "
#~ "length of the edge."
#~ msgstr ""

#~ msgid ""
#~ "Converter from vector layer to graph is developed using `Builder "
#~ "<http://en.wikipedia.org/wiki/Builder_pattern>`_ programming pattern. For "
#~ "graph construction response so-called Director. There is only one Director "
#~ "for now: `QgsLineVectorLayerDirector "
#~ "<http://qgis.org/api/api/classQgsLineVectorLayerDirector.html>`_. The "
#~ "director sets the basic settings that will be used to construct a graph from"
#~ " a line vector layer, used by the builder to create graph. Currently, as in "
#~ "the case with the director, only one builder exists: `QgsGraphBuilder "
#~ "<http://qgis.org/api/api/classQgsGraphBuilder.html>`_, that creates "
#~ "`QgsGraph <http://qgis.org/api/api/classQgsGraph.html>`_ objects. You may "
#~ "want to implement your own builders that will build a graphs compatible with"
#~ " such libraries as `BGL "
#~ "<http://www.boost.org/doc/libs/1_48_0/libs/graph/doc/index.html>`_ or "
#~ "`NetworkX <http://networkx.lanl.gov/>`_."
#~ msgstr ""

#~ msgid ""
#~ "To calculate edge properties programming pattern `strategy "
#~ "<http://en.wikipedia.org/wiki/Strategy_pattern>`_ is used. For now only "
#~ "`QgsDistanceArcProperter "
#~ "<http://qgis.org/api/api/classQgsDistanceArcProperter.html>`_ strategy is "
#~ "available, that takes into account the length of the route. You can "
#~ "implement your own strategy that will use all necessary parameters. For "
#~ "example, RoadGraph plugin uses strategy that compute travel time using edge "
#~ "length and speed value from attributes."
#~ msgstr ""

#~ msgid "It's time to dive in the process."
#~ msgstr ""

#~ msgid ""
#~ "First of all, to use this library we should import networkanalysis module::"
#~ msgstr ""

#~ msgid "Than create director::"
#~ msgstr ""

#~ msgid ""
#~ "To construct a director  we should pass vector layer, that will be used as "
#~ "source for graph and information about allowed movement on each road segment"
#~ " (unilateral or bilateral movement, direct or reverse direction). Here is "
#~ "full list of this parameters:"
#~ msgstr ""

#~ msgid "vl --- vector layer used to build graph"
#~ msgstr ""

#~ msgid ""
#~ "directionFieldId --- index of the attribute table field, where information "
#~ "about roads directions is stored. If -1, then don't use this info at all"
#~ msgstr ""

#~ msgid ""
#~ "directDirectionValue --- field value for roads with direct direction (moving"
#~ " from first line point to last one)"
#~ msgstr ""

#~ msgid ""
#~ "reverseDirectionValue --- field value for roads with reverse direction "
#~ "(moving from last line point to first one)"
#~ msgstr ""

#~ msgid ""
#~ "bothDirectionValue --- field value for bilateral roads (for such roads we "
#~ "can move from first point to last and from last to first)"
#~ msgstr ""

#~ msgid ""
#~ "defaultDirection --- default road direction. This value will be used for "
#~ "those roads where field directionFieldId is not set or have some value "
#~ "different from above."
#~ msgstr ""

#~ msgid ""
#~ "It is necessary then to create strategy for calculating edge properties::"
#~ msgstr ""

#~ msgid "And tell the director about this strategy::"
#~ msgstr ""

#~ msgid ""
#~ "Now we can create builder, which will create graph. QgsGraphBuilder "
#~ "constructor takes several arguments:"
#~ msgstr ""

#~ msgid ""
#~ "Also  we can set several points, which will be used in analysis. For "
#~ "example::"
#~ msgstr ""

#~ msgid "Now all is in place so we can build graph and \"tie\" points to it::"
#~ msgstr ""

#~ msgid ""
#~ "Building graph can take some time (depends on number of features in a layer "
#~ "and layer size). tiedPoints is a list with coordinates of \"tied\" points. "
#~ "When build operation is finished we can get graph and use it for the "
#~ "analysis::"
#~ msgstr ""

#~ msgid "With the next code we can get indexes of our points::"
#~ msgstr ""

#~ msgid ""
#~ "Networks analysis is used to find answers on two questions: which vertices "
#~ "are connected and how to find a shortest path. To solve this problems "
#~ "network analysis library provides Dijkstra's algorithm."
#~ msgstr ""

#~ msgid ""
#~ "Dijkstra's algorithm finds the best route from one of the vertices of the "
#~ "graph to all the others and the values of the optimization parameters. The "
#~ "results can be represented as shortest path tree."
#~ msgstr ""

#~ msgid ""
#~ "The shortest path tree is as oriented weighted graph (or more precisely --- "
#~ "tree) with the following properties:"
#~ msgstr ""

#~ msgid "only one vertex have no incoming edges — the root of the tree"
#~ msgstr ""

#~ msgid "all other vertices have only one incoming edge"
#~ msgstr ""

#~ msgid ""
#~ "if vertex B is reachable from vertex A, then path from A to B is single "
#~ "available path and it is optimal (shortest) on this graph"
#~ msgstr ""

#~ msgid ""
#~ "To get shortest path tree use methods Use methods :func:`shortestTree` and "
#~ ":func:`dijkstra` of `QgsGraphAnalyzer "
#~ "<http://qgis.org/api/api/classQgsGraphAnalyzer.html>`_ class. It is "
#~ "recommended to use method :func:`dijkstra` because it works faster and uses "
#~ "memory more efficiently."
#~ msgstr ""

#~ msgid ""
#~ "The :func:`shortestTree` method is useful when you want to walk around the "
#~ "shortest path tree. It always creates new graph object (QgsGraph) and "
#~ "accepts three variables:"
#~ msgstr ""

#~ msgid ""
#~ "Here is very simple code to display shortest path tree using graph created "
#~ "with :func:`shortestTree` method (select linestring layer in TOC and replace"
#~ " coordinates with yours one). **Warning**: use this code only as an example,"
#~ " it creates a lots of `QgsRubberBand "
#~ "<http://qgis.org/api/api/classQgsRubberBand.html>`_ objects and may be slow "
#~ "on large datasets."
#~ msgstr ""

#~ msgid "Same thing but using :func:`dijkstra` method::"
#~ msgstr ""

#~ msgid "Finding shortest path"
#~ msgstr ""

#~ msgid ""
#~ "To find optimal path between two points the following approach is used. Both"
#~ " points (start A and end B) are \"tied\" to graph when it builds. Than using"
#~ " methods :func:`shortestTree` or :func:`dijkstra` we build shortest tree "
#~ "with root in the start point A. In the same tree we also found end point B "
#~ "and start to walk through tree from point B to point A. Whole algorithm can "
#~ "be written as::"
#~ msgstr ""

#~ msgid ""
#~ "At this point we have path, in the form of the inverted list of vertices "
#~ "(vertices are listed in reversed order from end point to start one) that "
#~ "will be visited during traveling by this path."
#~ msgstr ""

#~ msgid ""
#~ "Here is the sample code for QGIS Python Console (you will need to select "
#~ "linestring layer in TOC and replace coordinates in the code with yours) that"
#~ " uses method :func:`shortestTree`::"
#~ msgstr ""

#~ msgid "And here is the same sample but using :func:`dikstra` method::"
#~ msgstr ""

#~ msgid "Areas of the availability"
#~ msgstr ""

#~ msgid ""
#~ "Area of availability for vertex A is a subset of graph vertices, that are "
#~ "accessible from vertex A and cost of the path from A to this vertices are "
#~ "not greater that some value."
#~ msgstr ""

#~ msgid ""
#~ "More clearly this can be shown with the following example: \"There is a fire"
#~ " station. What part of city fire command can reach in 5 minutes? 10 minutes?"
#~ " 15 minutes?\". Answers on this questions are fire station's areas of "
#~ "availability."
#~ msgstr ""

#~ msgid ""
#~ "To find areas of availablity we can use method :func:`dijksta` of the "
#~ ":class:`QgsGraphAnalyzer` class. It is enough to compare elements of cost "
#~ "array with predefined value. If cost[ i ] is less or equal than predefined "
#~ "value, than vertex i is inside area of availability, otherwise --- outside."
#~ msgstr ""

#~ msgid ""
#~ "More difficult it is to get borders of area of availablity. Bottom border "
#~ "--- is a set of vertices that are still accessible, and top border --- is a "
#~ "set of vertices which are not accesible. In fact this is simple: "
#~ "availability border passed on such edges of the shortest path tree for which"
#~ " start vertex is accessible and end vertex is not accessible."
#~ msgstr ""

#~ msgid "Here is an example::"
#~ msgstr ""
