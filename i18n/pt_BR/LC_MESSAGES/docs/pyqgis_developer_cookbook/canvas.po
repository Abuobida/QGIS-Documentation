# 
# Translators:
# Armando Vulcano Junior <vulcano@uol.com.br>, 2015
# Djonathan Goulart <d.goulart@outlook.com.br>, 2017
# Fábio Rodrigo Oliveira <farool2@gmail.com>, 2015
# Leônidas Luiz Volcato Descovi Filho <leonidasfilho2000@yahoo.com.br>, 2014
# Narcélio de Sá <narceliosapereira@gmail.com>, 2014
# Wesley Kevin Souto do Vale <wesley_souto@hotmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-05 22:35\n"
"PO-Revision-Date: 2017-02-24 22:47+0000\n"
"Last-Translator: Djonathan Goulart <d.goulart@outlook.com.br>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/qgis/qgis-documentation/language/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:11
msgid "Using Map Canvas"
msgstr "Utilizando a Tela do Mapa"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:16
msgid ""
"The Map canvas widget is probably the most important widget within QGIS "
"because it shows the map composed from overlaid map layers and allows "
"interaction with the map and layers. The canvas shows always a part of the "
"map defined by the current canvas extent. The interaction is done through "
"the use of **map tools**: there are tools for panning, zooming, identifying "
"layers, measuring, vector editing and others. Similar to other graphics "
"programs, there is always one tool active and the user can switch between "
"the available tools."
msgstr "O Widget tela Mapa é provavelmente o widget mais importante dentro de QGIS porque mostra o mapa composto de camadas de mapas sobrepostos e permite a interação com o mapa e camadas. A tela mostra sempre uma parte do mapa definido pela extensão tela atual. A interação é feita através do uso de **ferramentas de mapa** existem ferramentas para panorâmica, zoom, identificando camadas, de medida, de edição de vetores e outros. Semelhante a outros programas gráficos, há sempre uma ferramenta ativa e que o usuário pode alternar entre as ferramentas disponíveis."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:32
msgid ""
"Whenever the map has been panned, zoomed in/out (or some other action "
"triggers a refresh), the map is rendered again within the current extent. "
"The layers are rendered to an image (using :class:`QgsMapRenderer` class) "
"and that image is then displayed in the canvas. The graphics item (in terms "
"of the Qt graphics view framework) responsible for showing the map is "
":class:`QgsMapCanvasMap` class. This class also controls refreshing of the "
"rendered map. Besides this item which acts as a background, there may be "
"more **map canvas items**. Typical map canvas items are rubber bands (used "
"for measuring, vector editing etc.) or vertex markers. The canvas items are "
"usually used to give some visual feedback for map tools, for example, when "
"creating a new polygon, the map tool creates a rubber band canvas item that "
"shows the current shape of the polygon. All map canvas items are subclasses "
"of :class:`QgsMapCanvasItem` which adds some more functionality to the basic"
" ``QGraphicsItem`` objects."
msgstr "Sempre que o mapa foi muito deslocado, zoom in / out (ou alguma outra ação dispara uma atualização), o mapa é processado novamente dentro da extensão atual. As camadas são prestados a uma imagem (usando: class: `classe QgsMapRenderer`) e essa imagem é exibida na tela. O item gráfico (em termos de gráficos vista framework Qt) responsável por mostrar o mapa é: class: `classe QgsMapCanvasMap`. Esta classe também controla a atualização do mapa renderizado. Além disso este item, que atua como um fundo, pode haver mais itens **  mapa de itens na tela**. Mapa típica itens na tela são elásticos (usados para medir, edição vetor etc.) ou marcadores de vértice. Os itens de lona são normalmente utilizados para dar algum feedback visual para ferramentas de mapa, por exemplo, ao criar um novo polígono, a ferramenta de mapa cria um item de canvas elástico que mostra a forma atual do polígono. Todos os itens de mapa de lona são subclasses de: class: `QgsMapCanvasItem` que acrescenta mais algumas funcionalidades para os` `objetos básicos QGraphicsItem``."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:48
msgid "To summarize, the map canvas architecture consists of three concepts:"
msgstr "Para resumir, a arquitetura do mapa na tela são constituídas por três conceitos:"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:50
msgid "map canvas --- for viewing of the map"
msgstr "tela do mapa --- para visualização do mapa"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:51
msgid ""
"map canvas items --- additional items that can be displayed in map canvas"
msgstr "itens na tela do mapa --- itens adicionais que podem ser exibidos na tela do mapa"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:52
msgid "map tools --- for interaction with map canvas"
msgstr "ferramentas do mapa --- para a interagir com o mapa na tela"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:57
msgid "Embedding Map Canvas"
msgstr "Incorporar o Mapa da Tela"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:67
msgid ""
"This produces a standalone window with map canvas. It can be also embedded "
"into an existing widget or window. When using .ui files and Qt Designer, "
"place a ``QWidget`` on the form and promote it to a new class: set "
"``QgsMapCanvas`` as class name and set ``qgis.gui`` as header file. The "
"``pyuic4`` utility will take care of it. This is a very convenient way of "
"embedding the canvas. The other possibility is to manually write the code to"
" construct map canvas and other widgets (as children of a main window or "
"dialog) and create a layout."
msgstr "Isso produz uma janela independente com o mapa de lona. Ela também pode ser incorporado em um widget ou janela existente. Ao usar .ui arquivos e Qt Designer, coloque um `` QWidget`` no formulário e promovê-lo a uma nova classe: definir `` QgsMapCanvas`` como nome da classe e definir `` qgis.gui`` como arquivo de cabeçalho. O utilitário `` pyuic4`` vai cuidar dele. Esta é uma maneira muito conveniente de incorporar a tela. A outra possibilidade é escrever manualmente o código para construir do mapa na tela e outros widgets (como filhos de uma janela principal ou diálogo) e criar um layout."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:83
msgid ""
"(In case you are wondering, ``Qt`` comes from ``PyQt4.QtCore`` module and "
"``Qt.white`` is one of the predefined ``QColor`` instances.)"
msgstr "(Caso você esteja se perguntando, `` Qt`` vem de `` módulo PyQt4.QtCore`` e `` Qt.white`` é um dos pré-definido `` QColor`` instâncias.)"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:105
msgid ""
"After executing these commands, the canvas should show the layer you have "
"loaded."
msgstr "Depois de executar esses comandos, a tela deve mostrar a camada que você carregou."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:111
msgid "Using Map Tools with Canvas"
msgstr "Usando Ferramentas de Mapas na Tela"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:195
msgid "Rubber Bands and Vertex Markers"
msgstr "Bandas raster e fazedor de vértices"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:221
msgid ""
"Note that points for polygon is not a plain list: in fact, it is a list of "
"rings containing linear rings of the polygon: first ring is the outer "
"border, further (optional) rings correspond to holes in the polygon."
msgstr "Note-se que aponta para polígono não é uma lista simples: na verdade, é uma lista de anéis contendo anéis lineares do polígono: primeiro anel é a borda externa, ainda mais (opcional) anéis correspondem aos buracos no polígono."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:241
msgid ""
"(in C++ it's possible to just delete the item, however in Python ``del r`` "
"would just delete the reference and the object will still exist as it is "
"owned by the canvas)"
msgstr "(em C ++ é possível simplesmente apagar o item, no entanto, em Python `` del r`` seria apenas suprimir a referência eo objeto continuará a existir, uma vez que é de propriedade da tela)"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:265
msgid ""
"For temporary hiding of vertex markers and removing them from canvas, the "
"same applies as for the rubber bands."
msgstr "Para esconder temporáriamente os marcadores de vértice e removê-los da tela, o mesmo se aplica quanto para as bandas rasters."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:271
msgid "Writing Custom Map Tools"
msgstr "Desenhar ferramenta de mapa personalizada"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:276
msgid ""
"Map tools should inherit from the :class:`QgsMapTool` class or any derived "
"class, and selected as active tools in the canvas using the "
":func:`setMapTool` method as we have already seen."
msgstr "Ferramentas de mapa deve herdar a classe: class: `QgsMapTool` ou qualquer outra classe derivada, e selecionado como ferramentas ativas na tela usando o  método: func:`setMapTool` como já vimos."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:351
msgid "Writing Custom Map Canvas Items"
msgstr "Desenhar itens da tela do mapa"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:5
#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:46
#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:54
#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:108
#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:192
#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:192
#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:268
#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:348
msgid "map canvas"
msgstr "mapa na tela"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:46
msgid "architecture"
msgstr "arquitetura"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:54
msgid "embedding"
msgstr "Incorporando"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:108
msgid "map tools"
msgstr "Ferramentas de mapa"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:192
msgid "rubber bands"
msgstr "Bandas raster"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:192
msgid "vertex markers"
msgstr "Marcadores de vértice"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:268
msgid "writing custom map tools"
msgstr "Costimizar ferramentas do mapa"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:348
msgid "writing custom canvas items"
msgstr "Desenhar itens da tela do mapa"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:24
msgid ""
"Map canvas is implemented as :class:`QgsMapCanvas` class in :mod:`qgis.gui` "
"module. The implementation is based on the Qt Graphics View framework. This "
"framework generally provides a surface and a view where custom graphics "
"items are placed and user can interact with them.  We will assume that you "
"are familiar enough with Qt to understand the concepts of the graphics "
"scene, view and items. If not, please make sure to read the `overview of the"
" framework <http://qt-project.org/doc/qt-4.8/graphicsview.html>`_."
msgstr "Mapa na tela é implementado como: class: `class QgsMapCanvas` no módulo: mod:` qgis.gui`. A implementação é baseada no framework Qt Gráficos View. Este quadro geralmente fornece uma superfície e uma vista onde os itens gráficos personalizados são colocados e usuário pode interagir com eles. Vamos supor que você está bastante familiarizado com Qt para entender os conceitos de cena, vista e itens gráficos. Se não, por favor, certifique-se de ler a `visão geral do quadro <http://qt-project.org/doc/qt-4.8/graphicsview.html>`_."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:59
msgid ""
"Map canvas is a widget like any other Qt widget, so using it is as simple as"
" creating and showing it"
msgstr "Mapa natela é um widget, como qualquer outro widget Qt, então usá-lo é tão simples como criar e mostrá-lo"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:75
msgid ""
"By default, map canvas has black background and does not use anti-aliasing. "
"To set white background and enable anti-aliasing for smooth rendering"
msgstr "Por padrão, o mapa na tela tem fundo preto e não usa anti-aliasing. Para definir o fundo branco e permitir anti-aliasing para renderização suave"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:86
msgid ""
"Now it is time to add some map layers. We will first open a layer and add it"
" to the map layer registry. Then we will set the canvas extent and set the "
"list of layers for canvas"
msgstr "Agora é hora de adicionar algumas camadas do mapa. Vamos abrir primeiro uma camada e adicioná-lo ao registro camada do mapa. Então, vamos definir a extensão da tela e definir a lista de camadas para tela"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:113
msgid ""
"The following example constructs a window that contains a map canvas and "
"basic map tools for map panning and zooming. Actions are created for "
"activation of each tool: panning is done with :class:`QgsMapToolPan`, "
"zooming in/out with a pair of :class:`QgsMapToolZoom` instances. The actions"
" are set as checkable and later assigned to the tools to allow automatic "
"handling of checked/unchecked state of the actions -- when a map tool gets "
"activated, its action is marked as selected and the action of the previous "
"map tool is deselected. The map tools are activated using :func:`setMapTool`"
" method."
msgstr "O exemplo a seguir constrói uma janela que contém um mapa de tela e ferramentas básicas de mapa para mapa panorâmico e zoom. Ações são criadas para a ativação de cada ferramenta: panorâmica é feito com: class: `QgsMapToolPan`, zoom in / out com um par de instâncias: class:` QgsMapToolZoom`. As ações são definidas como verificável e posteriormente atribuído às ferramentas para permitir o tratamento automático de do estado das ações verificado / não verificado - quando uma ferramenta de mapa é ativado, a sua ação está marcado como selecionado e a acção da ferramenta mapa anterior é desmarcada. As ferramentas de mapa são ativadas usando o metodo: func: `setMapTool`."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:177
msgid ""
"You can put the above code to a file, e.g. :file:`mywnd.py` and try it out "
"in Python console within QGIS. This code will put the currently selected "
"layer into newly created canvas"
msgstr "Você pode colocar o código acima para um arquivo, por exemplo, : file: `mywnd.py` e experimentá-lo no console do Python dentro QGIS. Este código irá colocar a camada selecionada atualmente na tela recém-criada"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:187
msgid ""
"Just make sure that the :file:`mywnd.py` file is located within Python "
"search path (``sys.path``). If it isn't, you can simply add it: "
"``sys.path.insert(0, '/my/path')`` --- otherwise the import statement will "
"fail, not finding the module."
msgstr "Apenas certifique-se de que o arquivo: file: `mywnd.py` está localizado dentro do caminhoo de busca Python (` `sys.path``). Se não for, você pode simplesmente adicioná-lo: ``sys.path.insert(0, '/my/path')`` --- caso contrário, a declaração de importação irá falhar, não encontrando o módulo."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:197
msgid ""
"To show some additional data on top of the map in canvas, use map canvas "
"items. It is possible to create custom canvas item classes (covered below), "
"however there are two useful canvas item classes for convenience: "
":class:`QgsRubberBand` for drawing polylines or polygons, and "
":class:`QgsVertexMarker` for drawing points. They both work with map "
"coordinates, so the shape is moved/scaled automatically when the canvas is "
"being panned or zoomed."
msgstr "Para mostrar alguns dados adicionais na parte superior do mapa na tela, use itens de mapa de tela. É possível criar classes de itens de tela (mostradas abaixo), no entanto, existem duas classes úteis de item de tela para sua conveniência:: class: `QgsRubberBand` para desenhar multilinhas ou polígonos, e: class:` QgsVertexMarker` para desenhar pontos. Ambos trabalham com as coordenadas do mapa, assim que a forma é movida/escalada automaticamente quando a tela está em panorâmica ou ampliada."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:205
msgid "To show a polyline"
msgstr "Para mostrar as polilinhas"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:213
msgid "To show a polygon"
msgstr "Para mostrar o poligono"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:225
msgid ""
"Rubber bands allow some customization, namely to change their color and line"
" width"
msgstr "As  Bandas Raster permitem alguma personalização, ou seja, para mudar sua cor e linha de largura"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:233
msgid ""
"The canvas items are bound to the canvas scene. To temporarily hide them "
"(and show again, use the :func:`hide` and :func:`show` combo. To completely "
"remove the item, you have to remove it from the scene of the canvas"
msgstr "Os itens em tela são obrigados a cena na tela. Para escondê-los temporariamente (e mostrar mais uma vez, use a Combinação: :func:`hide` and :func:`show`  Para remover completamente o item, você tem que removê-lo da cena na tela"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:245
msgid ""
"Rubber band can be also used for drawing points, however "
":class:`QgsVertexMarker` class is better suited for this "
"(:class:`QgsRubberBand` would only draw a rectangle around the desired "
"point). How to use the vertex marker"
msgstr "As bandas Rasters também podem serem usadas para desenhar pontos, no entanto a classe : class: `class QgsVertexMarker` é mais adequado para isso (:class:`QgsRubberBand` só desenhar um retângulo ao redor do ponto desejado). Como usar o fazedor de Vértices "

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:255
msgid ""
"This will draw a red cross on position [0,0]. It is possible to customize "
"the icon type, size, color and pen width"
msgstr "Isso vai chamar a uma cruz vermelha sobre a posição [0,0]. É possível personalizar o tipo de ícone, tamanho, cor e espessura da caneta"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:273
msgid ""
"You can write your custom tools, to implement a custom behaviour to actions "
"performed by users on the canvas."
msgstr "Você pode escrever suas ferramentas personalizadas, para implementar um comportamento personalizado às ações realizadas pelos usuários na tela."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:280
msgid ""
"Here is an example of a map tool that allows to define a rectangular extent "
"by clicking and dragging on the canvas. When the rectangle is defined, it "
"prints its boundary coordinates in the console. It uses the rubber band "
"elements described before to show the selected rectangle as it is being "
"defined."
msgstr "Aqui está um exemplo de uma ferramenta de mapa que permite definir uma medida retangular, clicando e arrastando na tela. Quando o retângulo é definido, ele imprime coordena seu limite no console. Ele utiliza os elementos de banda de borracha descritos antes para mostrar o retângulo selecionado, uma vez que está a ser definida."

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:355
msgid "**TODO:**"
msgstr "**TODO:**"

#: ../../source/docs/pyqgis_developer_cookbook/canvas.rst:354
msgid "how to create a map canvas item"
msgstr "Como criar itens do mapa na tela"

#~ msgid ""
#~ "Map canvas is implemented as :class:`QgsMapCanvas` class in :mod:`qgis.gui` "
#~ "module.  The implementation is based on the Qt Graphics View framework. This"
#~ " framework generally provides a surface and a view where custom graphics "
#~ "items are placed and user can interact with them.  We will assume that you "
#~ "are familiar enough with Qt to understand the concepts of the graphics "
#~ "scene, view and items. If not, please make sure to read the `overview of the"
#~ " framework <http://doc.qt.nokia.com/graphicsview.html>`_."
#~ msgstr ""

#~ msgid ""
#~ "Map canvas is a widget like any other Qt widget, so using it is as simple as"
#~ " creating and showing it::"
#~ msgstr ""

#~ msgid ""
#~ "By default, map canvas has black background and does not use anti-aliasing. "
#~ "To set white background and enable anti-aliasing for smooth rendering::"
#~ msgstr ""

#~ msgid ""
#~ "Now it is time to add some map layers. We will first open a layer and add it"
#~ " to the map layer registry.  Then we will set the canvas extent and set the "
#~ "list of layers for canvas::"
#~ msgstr ""

#~ msgid ""
#~ "The following example constructs a window that contains a map canvas and "
#~ "basic map tools for map panning and zooming.  Actions are created for "
#~ "activation of each tool: panning is done with :class:`QgsMapToolPan`, "
#~ "zooming in/out with a pair of :class:`QgsMapToolZoom` instances. The actions"
#~ " are set as checkable and later assigned to the tools to allow automatic "
#~ "handling of checked/unchecked state of the actions -- when a map tool gets "
#~ "activated, its action is marked as selected and the action of the previous "
#~ "map tool is deselected. The map tools are activated using :func:`setMapTool`"
#~ " method."
#~ msgstr ""

#~ msgid ""
#~ "You can put the above code to a file, e.g. ``mywnd.py`` and try it out in "
#~ "Python console within QGIS.  This code will put the currently selected layer"
#~ " into newly created canvas::"
#~ msgstr ""

#~ msgid ""
#~ "Just make sure that the ``mywnd.py`` file is located within Python search "
#~ "path (``sys.path``). If it isn't, you can simply add it: "
#~ "``sys.path.insert(0, '/my/path')`` --- otherwise the import statement will "
#~ "fail, not finding the module."
#~ msgstr ""

#~ msgid ""
#~ "To show some additional data on top of the map in canvas, use map canvas "
#~ "items. It is possible to create custom canvas item classes (covered below), "
#~ "however there are two useful canvas item classes for convenience: "
#~ ":class:`QgsRubberBand` for drawing polylines or polygons, and "
#~ ":class:`QgsVertexMarker` for drawing points.  They both work with map "
#~ "coordinates, so the shape is moved/scaled automatically when the canvas is "
#~ "being panned or zoomed."
#~ msgstr ""

#~ msgid "To show a polyline::"
#~ msgstr ""

#~ msgid "To show a polygon::"
#~ msgstr ""

#~ msgid ""
#~ "Rubber bands allow some customization, namely to change their color and line"
#~ " width::"
#~ msgstr ""

#~ msgid ""
#~ "The canvas items are bound to the canvas scene. To temporarily hide them "
#~ "(and show again, use the :func:`hide` and :func:`show` combo. To completely "
#~ "remove the item, you have to remove it from the scene of the canvas::"
#~ msgstr ""

#~ msgid ""
#~ "Rubber band can be also used for drawing points, however "
#~ ":class:`QgsVertexMarker` class is better suited for this "
#~ "(:class:`QgsRubberBand` would only draw a rectangle around the desired "
#~ "point). How to use the vertex marker::"
#~ msgstr ""

#~ msgid ""
#~ "This will draw a red cross on position [0,0]. It is possible to customize "
#~ "the icon type, size, color and pen width::"
#~ msgstr ""

#~ msgid ""
#~ "You can write your custom tools, to implement a custom behaviour to actions "
#~ "perfored by users on the canvas."
#~ msgstr ""

#~ msgid ""
#~ "Here is an example of a map tool that allows to define a rectangular extent "
#~ "by clicking and draggin on the canvas. When the rectangle is defined, it "
#~ "prints its boundary coordinates in the console. It uses the rubber band "
#~ "elements described before to show the selected rectangle as it is being "
#~ "defined."
#~ msgstr ""

#~ msgid "**TODO:** how to create a map canvas item"
#~ msgstr ""
