# 
# Translators:
# Sorin Călinică <scalinica@gmail.com>, 2014-2015
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-05 22:35\n"
"PO-Revision-Date: 2015-06-23 18:37+0000\n"
"Last-Translator: Sorin Călinică <scalinica@gmail.com>\n"
"Language-Team: Romanian (http://www.transifex.com/qgis/qgis-documentation/language/ro/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ro\n"
"Plural-Forms: nplurals=3; plural=(n==1?0:(((n%100>19)||((n%100==0)&&(n!=0)))?2:1));\n"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:11
msgid "Reading And Storing Settings"
msgstr "Citirea și stocarea setărilor"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:13
msgid ""
"Many times it is useful for a plugin to save some variables so that the user"
" does not have to enter or select them again next time the plugin is run."
msgstr "De multe ori, pentru un plugin, este utilă salvarea unor variabile, astfel încât utilizatorul să nu trebuiască să le reintroducă sau să le reselecteze, la fiecare rulare a plugin-ului."

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:21
msgid "We can make difference between several types of settings:"
msgstr "Putem face diferența între mai multe tipuri de setări:"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:49
msgid ""
"The second parameter of the :func:`value()` method is optional and specifies"
" the default value if there is no previous value set for the passed setting "
"name."
msgstr "Al doilea parametru al metodei :func:`value()` este opțional și specifică valoarea implicită, dacă nu există nici o valoare anterioară stabilită pentru setare."

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:75
msgid ""
"As you can see, the :func:`writeEntry` method is used for all data types, "
"but several methods exist for reading the setting value back, and the "
"corresponding one has to be selected for each data type."
msgstr "După cum puteți vedea, metoda :func:`writeEntry` este folosită pentru toate tipurile de date, dar există mai multe metode pentru a seta înapoi setarea, iar cea corespunzătoare trebuie să fie selectată pentru fiecare tip de date."

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:5
#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:5
#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:23
#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:53
#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:79
msgid "settings"
msgstr "setări"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:5
msgid "reading"
msgstr "citire"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:5
msgid "storing"
msgstr "stocare"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:23
msgid "global"
msgstr "global"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:53
msgid "project"
msgstr "proiect"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:79
msgid "map layer"
msgstr "strat de hartă"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:16
msgid ""
"These variables can be saved and retrieved with help of Qt and QGIS API. For"
" each variable, you should pick a key that will be used to access the "
"variable --- for user's favourite color you could use key "
"\"favourite_color\" or any other meaningful string. It is recommended to "
"give some structure to naming of keys."
msgstr "Aceste variabile pot fi salvate cu ajutorul Qt și QGIS API. Pentru fiecare variabilă ar trebui să alegeți o cheie care va fi folosită pentru a accesa variabila --- pentru culoarea preferată a utilizatorului ați putea folosi o cheie de genul \"culoare_favorită\" sau orice alt șir semnificativ. Este recomandabil să folosiți o oarecare logică în denumirea cheilor."

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:25
msgid ""
"**global settings** --- they are bound to the user at particular machine. "
"QGIS itself stores a lot of global settings, for example, main window size "
"or default snapping tolerance. This functionality is provided directly by Qt"
" framework by the means of :class:`QSettings` class. By default, this class "
"stores settings in system's \"native\" way of storing settings, that is --- "
"registry (on Windows), .plist file (on Mac OS X) or .ini file (on Unix). The"
" `QSettings documentation <http://doc.qt.io/qt-4.8/qsettings.html>`_ is "
"comprehensive, so we will provide just a simple example"
msgstr "**setări globale** --- acestea țin de utilizatorul unei anumite mașini. QGIS însuși stochează o mulțime de setări globale, cum ar fi, de exemplu, dimensiunea ferestrei principale sau toleranța implicită pentru acroșare. Această funcționalitate este furnizată direct de cadrul de lucru Qt, prin intermediul clasei :class:`QSettings`. În mod implicit, această clasă își depozitează setările în modul \"nativ\" al sistemului dvs, care este --- în registru (pentru Windows), în fișierul .plist (pentru Mac OS X) sau în fișierul .ini (pentru Unix). `Documentația QSettings <http://doc.qt.io/qt-4.8/qsettings.html>`_ este cuprinzătoare, așa că vă vom prezenta doar un simplu exemplu"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:55
msgid ""
"**project settings** --- vary between different projects and therefore they "
"are connected with a project file. Map canvas background color or "
"destination coordinate reference system (CRS) are examples --- white "
"background and WGS84 might be suitable for one project, while yellow "
"background and UTM projection are better for another one. An example of "
"usage follows"
msgstr "**setările proiectului** --- variază între diferite proiecte și, prin urmare, ele sunt conectate cu un fișier de proiect. Culoarea de fundal a suportului hărții sau sistemul de coordonate de referință (CRS), de exemplu --- fundal alb și WGS84 ar putea fi potrivite pentru un anumit proiect, în timp ce fondul galben și proiecția UTM ar putea fi mai bune pentru altul. În continuare este dat un exemplu de utilizare"

#: ../../source/docs/pyqgis_developer_cookbook/settings.rst:81
msgid ""
"**map layer settings** --- these settings are related to a particular "
"instance of a map layer with a project. They are *not* connected with "
"underlying data source of a layer, so if you create two map layer instances "
"of one shapefile, they will not share the settings. The settings are stored "
"in project file, so if the user opens the project again, the layer-related "
"settings will be there again. This functionality has been added in QGIS "
"v1.4. The API is similar to QSettings --- it takes and returns QVariant "
"instances"
msgstr "**setările stratului hărții** --- aceste setări sunt legate de o anumită instanță a unui strat de hartă cu un proiect. Acestea *nu* sunt conectate cu sursa de date a stratului, așa că dacă veți crea două instanțe ale unui strat de hartă dintr-un fișier shape, ele nu vor partaja setările. Setările sunt stocate în fișierul proiectului, astfel încât, în ​​cazul în care utilizatorul deschide iarăși proiectul, setările legate de strat vor fi din nou acolo. Această funcționalitate a fost adăugată în QGIS v1.4. API-ul este similar cu QSettings --- luând și returnând instanțe QVariant"

#~ msgid ""
#~ "These variables can be saved a retrieved with help of Qt and QGIS API. For "
#~ "each variable, you should pick a key that will be used to access the "
#~ "variable --- for user's favourite color you could use key "
#~ "\"favourite_color\" or any other meaningful string. It is recommended to "
#~ "give some structure to naming of keys."
#~ msgstr ""

#~ msgid ""
#~ "**global settings** --- they are bound to the user at particular machine. "
#~ "QGIS itself stores a lot of global settings, for example, main window size "
#~ "or default snapping tolerance. This functionality is provided directly by Qt"
#~ " framework by the means of QSettings class. By default, this class stores "
#~ "settings in system's \"native\" way of storing settings, that is --- "
#~ "registry (on Windows), .plist file (on Mac OS X) or .ini file (on Unix). The"
#~ " `QSettings documentation <http://doc.qt.nokia.com/stable/qsettings.html>`_ "
#~ "is comprehensive, so we will provide just a simple example::"
#~ msgstr ""

#~ msgid ""
#~ "**project settings** --- vary between different projects and therefore they "
#~ "are connected with a project file. Map canvas background color or "
#~ "destination coordinate reference system (CRS) are examples --- white "
#~ "background and WGS84 might be suitable for one project, while yellow "
#~ "background and UTM projection are better for another one. An example of "
#~ "usage follows::"
#~ msgstr ""

#~ msgid ""
#~ "**map layer settings** --- these settings are related to a particular "
#~ "instance of a map layer with a project. They are *not* connected with "
#~ "underlying data source of a layer, so if you create two map layer instances "
#~ "of one shapefile, they will not share the settings. The settings are stored "
#~ "in project file, so if the user opens the project again, the layer-related "
#~ "settings will be there again. This functionality has been added in QGIS "
#~ "v1.4. The API is similar to QSettings --- it takes and returns QVariant "
#~ "instances::"
#~ msgstr ""
