# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-05 22:35\n"
"PO-Revision-Date: 2016-07-18 09:38+0000\n"
"Last-Translator: Richard Duivenvoorde <richard@duif.net>\n"
"Language-Team: Ukrainian (http://www.transifex.com/qgis/qgis-documentation/language/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:11
msgid "Map Rendering and Printing"
msgstr "Рендерінг карти та друк"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:16
msgid ""
"There are generally two approaches when input data should be rendered as a "
"map: either do it quick way using :class:`QgsMapRenderer` or produce more "
"fine-tuned output by composing the map with :class:`QgsComposition` class "
"and friends."
msgstr "Загалом існує два способи отримати друковану карту: швидкий, за допомогою :class:`QgsMapRenderer`, або підготовка макета за допомогою :class:`QgsComposition` та супутніх класів."

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:23
msgid "Simple Rendering"
msgstr "Просте відображення"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:95
msgid "Output using Map Composer"
msgstr "Відображення за допомогою макетів"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:97
msgid ""
"Map composer is a very handy tool if you would like to do a more "
"sophisticated output than the simple rendering shown above. Using the "
"composer it is possible to create complex map layouts consisting of map "
"views, labels, legend, tables and other elements that are usually present on"
" paper maps. The layouts can be then exported to PDF, raster images or "
"directly printed on a printer."
msgstr "Редактор макетів стає у нагоді коли вам необхідно отримати щось складніше, ніж дозволяє простий рендерінг, описаний вище. Використовуючи редактор макетів можна створити складний макет, що містить декілька карт, підписи, легенду, таблиці та інші елементи, які ми звичайно бачимо на друкованих картах. Макети можна експортувати у PDF, растрові зображення або роздруковувати напряму."

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:120
msgid ""
"Note that the composition takes an instance of :class:`QgsMapRenderer`. In "
"the code we expect we are running within QGIS application and thus use the "
"map renderer from map canvas. The composition uses various parameters from "
"the map renderer, most importantly the default set of map layers and the "
"current extent. When using composer in a standalone application, you can "
"create your own map renderer instance the same way as shown in the section "
"above and pass it to the composition."
msgstr "Зверніть увагу, що макет приймає в якості параметра екземпляр :class:`QgsMapRenderer`. Ми припускаємо, зо код буде виконуватися безпосередньо в QGIS, тому використовуємо ренедерер активної карти. Макет використовує різноманітні параметри рендерера, найголовніші з них --- список шарів карти та поточне охоплення. Якщо макети використовуються в автономній програмі, вам необхідно створити свій власний екземпляр рендерера, як було показано в попередньому розділі, та передати його до макета."

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:128
msgid ""
"It is possible to add various elements (map, label, ...) to the composition "
"--- these elements have to be descendants of :class:`QgsComposerItem` class."
" Currently supported items are:"
msgstr "На макет можна додавати різні елементи (карту, підписи, ...) --- ці елементи є похідними від класу :class:`QgsComposerItem`. На сьогодні доступні такі елементи:"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:170
msgid "arrow"
msgstr "стрілка"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:171
msgid "picture"
msgstr "зображення"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:172
msgid "shape"
msgstr "фігура"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:173
msgid "table"
msgstr "таблиця"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:192
msgid ""
"Besides creating the composer items by hand, QGIS has support for composer "
"templates which are essentially compositions with all their items saved to a"
" .qpt file (with XML syntax). Unfortunately this functionality is not yet "
"available in the API."
msgstr "Крім створення макетів вручну QGIS має підтримку шаблонів макетів. Шаблони це звичайні макети, збережені у вигляді файлів :file:`.qpt` (формат XML). На жаль, цей функціонал поки недоступний через API."

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:197
msgid ""
"Once the composition is ready (the composer items have been created and "
"added to the composition), we can proceed to produce a raster and/or vector "
"output."
msgstr "Після того як макет підготований (всі елементи створено та розміщено в необхідних місцях), можна переходити до генерації вихідного растрового чи векторного файлу."

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:212
msgid "Output to a raster image"
msgstr "Друк у растр"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:241
msgid "Output to PDF"
msgstr "Друк у PDF"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:5
#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:20
msgid "map rendering"
msgstr "рендерінг карти"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:5
msgid "map printing"
msgstr "друк карти"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:20
msgid "simple"
msgstr "простий"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:92
#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:209
#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:238
msgid "output"
msgstr "вивід"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:92
msgid "using Map Composer"
msgstr "макети карти"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:209
msgid "raster image"
msgstr "растрове зображення"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:238
msgid "PDF"
msgstr "PDF"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:25
msgid ""
"Render some layers using :class:`QgsMapRenderer` --- create destination "
"paint device (``QImage``, ``QPainter`` etc.), set up layer set, extent, "
"output size and do the rendering"
msgstr "Відобразити шари за допомогою :class:`QgsMapRenderer` дуже просто --- створюється вихідний пристрій (``QImage``, ``QPainter`` тощо), вказується список шарів, охоплення, розмір вихідного зображення та запускається рендерінг"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:68
msgid "Rendering layers with different CRS"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:70
msgid ""
"If you have more than one layer and they have a different CRS, the simple "
"example above will probably not work: to get the right values from the "
"extent calculations you have to explicitly set the destination CRS and "
"enable OTF reprojection as in the example below (only the renderer "
"configuration part is reported)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:103
msgid ""
"The composer consists of a bunch of classes. They all belong to the core "
"library. QGIS application has a convenient GUI for placement of the "
"elements, though it is not available in the GUI library. If you are not "
"familiar with `Qt Graphics View framework "
"<http://doc.qt.io/qt-4.8/qgraphicsview.html>`_, then you are encouraged to "
"check the documentation now, because the composer is based on it. Also check"
" the `Python documentation of the implementation of QGraphicView "
"<http://pyqt.sourceforge.net/Docs/PyQt4/qgraphicsview.html>`_."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:111
msgid ""
"The central class of the composer is :class:`QgsComposition` which is "
"derived from :class:`QGraphicsScene`. Let us create one"
msgstr "Основним класом редактора макетів є :class:`QgsComposition`, який походить від :class:`QGraphicsScene`. Створимо екземпляр цього класу"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:132
msgid ""
"map --- this item tells the libraries where to put the map itself. Here we "
"create a map and stretch it over the whole paper size"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:142
msgid ""
"label --- allows displaying labels. It is possible to modify its font, "
"color, alignment and margin"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:152
msgid "legend"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:160
msgid "scale bar"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:175
msgid ""
"By default the newly created composer items have zero position (top left "
"corner of the page) and zero size. The position and size are always measured"
" in millimeters"
msgstr "За замовчанням щойно створені елементи мають нульове положення (лівий верхній куточок сторінки) та нульовий розмір. Положення та розміри завжди задаються у міліметрах"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:186
msgid "A frame is drawn around each item by default. How to remove the frame"
msgstr "Також за замовчанням навколо кожного елемента відображається рамка. Прибрати її можна так"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:200
msgid ""
"The default output settings for composition are page size A4 and resolution "
"300 DPI. You can change them if necessary. The paper size is specified in "
"millimeters"
msgstr "За замовчанням для виводу використовується аркуш розміру A4 та роздільна здатність 300 DPI. При необхідності ці параметри змінюються. Розмір паперу задається в міліметрах"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:214
msgid ""
"The following code fragment shows how to render a composition to a raster "
"image"
msgstr "Наступний фрагмент коду показує як згенерувати растрове представлення макету"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:243
msgid "The following code fragment renders a composition to a PDF file"
msgstr "Наступний фрагмент коду показує як отримати файл формату PDF"

#~ msgid ""
#~ "Render some layers using :class:`QgsMapRenderer` - create destination paint "
#~ "device (``QImage``, ``QPainter`` etc.), set up layer set, extent, output "
#~ "size and do the rendering::"
#~ msgstr ""

#~ msgid ""
#~ "The composer consists of a bunch of classes. They all belong to the core "
#~ "library. QGIS application has a convenient GUI for placement of the "
#~ "elements, though it is not available in the gui library. If you are not "
#~ "familiar with `Qt Graphics View framework "
#~ "<http://doc.qt.nokia.com/stable/graphicsview.html>`_, then you are "
#~ "encouraged to check the documentation now, because the composer is based on "
#~ "it."
#~ msgstr ""

#~ msgid ""
#~ "The central class of the composer is :class:`QgsComposition` which is "
#~ "derived from :class:`QGraphicsScene`. Let us create one::"
#~ msgstr ""

#~ msgid ""
#~ "map --- this item tells the libraries where to put the map itself. Here we "
#~ "create a map and stretch it over the whole paper size::"
#~ msgstr ""

#~ msgid ""
#~ "label --- allows displaying labels. It is possible to modify its font, "
#~ "color, alignment and margin::"
#~ msgstr ""

#~ msgid "legend ::"
#~ msgstr ""

#~ msgid "scale bar ::"
#~ msgstr ""

#~ msgid ""
#~ "By default the newly created composer items have zero position (top left "
#~ "corner of the page) and zero size. The position and size are always measured"
#~ " in millimeters::"
#~ msgstr ""

#~ msgid ""
#~ "A frame is drawn around each item by default. How to remove the frame::"
#~ msgstr ""

#~ msgid ""
#~ "The default output settings for composition are page size A4 and resolution "
#~ "300 DPI. You can change them if necessary. The paper size is specified in "
#~ "millimeters::"
#~ msgstr ""

#~ msgid ""
#~ "The following code fragment shows how to render a composition to a raster "
#~ "image::"
#~ msgstr ""

#~ msgid "The following code fragment renders a composition to a PDF file::"
#~ msgstr ""
