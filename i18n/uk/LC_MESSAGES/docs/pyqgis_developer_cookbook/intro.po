# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-05 22:35\n"
"PO-Revision-Date: 2016-07-18 09:38+0000\n"
"Last-Translator: Richard Duivenvoorde <richard@duif.net>\n"
"Language-Team: Ukrainian (http://www.transifex.com/qgis/qgis-documentation/language/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:9
msgid "Introduction"
msgstr "Вступ"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:15
msgid ""
"This document is intended to work both as a tutorial and a reference guide. "
"While it does not list all possible use cases, it should give a good "
"overview of the principal functionality."
msgstr "Цей документ створювався як підручник та довідник. І хоча в ньому не розглядаються всі можливі варіанти використання, він повинен дати змістовний огляд основного функціоналу."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:19
msgid ""
"Starting from 0.9 release, QGIS has optional scripting support using Python "
"language. We've decided for Python as it's one of the most favourite "
"languages for scripting. PyQGIS bindings depend on SIP and PyQt4. The reason"
" for using SIP instead of more widely used SWIG is that the whole QGIS code "
"depends on Qt libraries. Python bindings for Qt (PyQt) are done also using "
"SIP and this allows seamless integration of PyQGIS with PyQt."
msgstr "Починаючи з версії 0.9, в QGIS реалізовано підтримку сценаріїв на мові Python. Ми вибрали саме Python, оскільки це одна з найпоширеніших скриптових мов. Прив'язки (bindings) PyQGIS залежать від SIP та PyQt4. Основною причиною використання SIP замість більш розповсюдженого SWIG є те, що код QGIS залежить від бібліотек Qt. А прив'язки для Qt (PyQt) також генеруються за допомогою SIP, це дозволяє забезпечити прозору інтеграцію PyQGIS та PyQt."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:30
msgid "issue commands in Python console within QGIS"
msgstr "виконання команд у консолі Python QGIS"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:31
msgid "create and use plugins in Python"
msgstr "створення та використання плаґінів на Python"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:32
msgid "create custom applications based on QGIS API"
msgstr "створення власних програм з використанням API QGIS"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:43
msgid ""
"There is a `complete QGIS API <http://qgis.org/api/>`_ reference that "
"documents the classes from the QGIS libraries. Pythonic QGIS API is nearly "
"identical to the API in C++."
msgstr "Існує повний опис `QGIS API <http://qgis.org/api/>`_, у якому зібрано інформацію про всі класи бібліотек QGIS. QGIS Python API практично ідентичне C++ API."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:95
msgid "Python Console"
msgstr "Консоль Python"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:97
msgid ""
"For scripting, it is possible to take advantage of integrated Python "
"console. It can be opened from menu: :menuselection:`Plugins --> Python "
"Console`. The console opens as a non-modal utility window:"
msgstr "Для маленьких сценаріїв можна використовувати вбудовану в QGIS консоль Python. Відкривається вона з меню :menuselection:`Плаґіни --> Консоль Python`. Консоль відкривається як немодальне вікно:"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:105
msgid "QGIS Python console"
msgstr "Консоль Python QGIS"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:107
msgid ""
"The screenshot above illustrates how to get the layer currently selected in "
"the layer list, show its ID and optionally, if it is a vector layer, show "
"the feature count. For interaction with QGIS environment, there is a "
":data:`iface` variable, which is an instance of :class:`QgsInterface`. This "
"interface allows access to the map canvas, menus, toolbars and other parts "
"of the QGIS application."
msgstr "Вищенаведений малюнок показує як отримати вибраний у легенді шар, дізнатися його ідентифікатор та, якщо шар векторний, кількість його об'єктів. Для взаємодії з інтерфейсом QGIS використовується змінна :data:`iface`, яка є екземпляром :class:`QgsInterface`. Через цей інтерфейс можна звертатися до карти, меню, панелей інструментів та інших частин QGIS."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:123
msgid ""
"For those which use the console often, it may be useful to set a shortcut "
"for triggering the console (within menu :menuselection:`Settings --> "
"Configure shortcuts...`)"
msgstr "Тим, хто використовує консоль часто, варто призначити комбінацію клавіш для її виклику (в меню :menuselection:`Налаштування --> Комбінації клавіш...`)"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:130
msgid "Python Plugins"
msgstr "Плаґіни на Python"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:132
msgid ""
"QGIS allows enhancement of its functionality using plugins. This was "
"originally possible only with C++ language. With the addition of Python "
"support to QGIS, it is also possible to use plugins written in Python. The "
"main advantage over C++ plugins is its simplicity of distribution (no "
"compiling for each platform needed) and easier development."
msgstr "QGIS дозволяє розширювати свій функціонал через плаґіни. Спочатку це було можливим лише на мові C++. Після реалізації підтримки Python у QGIS, з'явилась можливість використання плаґінів, написаних на Python. Головна перевага таких плаґінів у порівнянні з плаґінами на C++ --- простота розповсюдження (відпадає необхідність у компіляції для різних платформ) та розробки."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:138
msgid ""
"Many plugins covering various functionality have been written since the "
"introduction of Python support. The plugin installer allows users to easily "
"fetch, upgrade and remove Python plugins. See the `Python Plugin "
"Repositories <http://www.qgis.org/wiki/Python_Plugin_Repositories>`_ page "
"for various sources of plugins."
msgstr "З моменту введення підтримки Python було розроблено багато плаґінів. Менеджер плаґінів дозволяє легко отримувати, оновлювати та видаляти Python плаґіни. більше інформації про різні джерела плаґінів розміщена на сторінці `Python Plugin Repositories <http://www.qgis.org/wiki/Python_Plugin_Repositories>`_."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:144
msgid ""
"Creating plugins in Python is simple, see :ref:`developing_plugins` for "
"detailed instructions."
msgstr "Створювати плаґіни на Python дуже просто --- дивіться розділ :ref:`developing_plugins`."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:159
msgid "Python Applications"
msgstr "Програми на Python"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:161
msgid ""
"Often when processing some GIS data, it is handy to create some scripts for "
"automating the process instead of doing the same task again and again. With "
"PyQGIS, this is perfectly possible --- import the :mod:`qgis.core` module, "
"initialize it and you are ready for the processing."
msgstr "Під час обробки ГІС-даних часто набагато зручніше створити декілька сценаріїв для автоматизації процесу ніж постійно виконувати ті самі дії знову і знову. PyQGIS допомагає зробити це --- просто імпортуйте модуль :mod:`qgis.core`, ініціалізуйте його і у вас все готове до обробки даних."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:166
msgid ""
"Or you may want to create an interactive application that uses some GIS "
"functionality --- measure some data, export a map in PDF or any other "
"functionality. The :mod:`qgis.gui` module additionally brings various GUI "
"components, most notably the map canvas widget that can be very easily "
"incorporated into the application with support for zooming, panning and/or "
"any further custom map tools."
msgstr "Або ж вам може знадобитися інтерактивна програма з певним функціоналом ГІС --- вимірювання довжин та площ, експорт карти в PDF або щось інше. Модуль :mod:`qgis.gui` містить різноманітні елементи інтерфейсу, найголовніший з них --- віджет карти, який легко інтегрується у програму та підтримує переміщення, масштабування і будь-які інші інструменти карти."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:180
msgid ""
"Note: do *not* use :file:`qgis.py` as a name for your test script --- Python"
" will not be able to import the bindings as the script's name will shadow "
"them."
msgstr "Примітка: *не* використовуйте ім'я :file:`qgis.py`, для своїх сценаріїв --- Python не зможе імпортувати прив'язки, оскільки ім'я сценарію буде «затінювати» їх."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:260
msgid ""
"Now you can work with QGIS API --- load layers and do some processing or "
"fire up a GUI with a map canvas. The possibilities are endless :-)"
msgstr "Тепер можна працювати з API QGIS --- завантажувати шари, виконувати обробку даних або створити графічний інтерфейс з картою. Можливості нескінченні :-)"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:268
msgid "Running Custom Applications"
msgstr "Запуск програм"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:270
msgid ""
"You will need to tell your system where to search for QGIS libraries and "
"appropriate Python modules if they are not in a well-known location --- "
"otherwise Python will complain::"
msgstr "Необхідно вказати системі де саме шукати бібліотеки QGIS та відповідні модулі Python --- інакше під час запуску з'явиться повідомлення про помилку::"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:277
msgid ""
"This can be fixed by setting the ``PYTHONPATH`` environment variable. In the"
" following commands, ``qgispath`` should be replaced with your actual QGIS "
"installation path:"
msgstr "Для цього необхідно встановити змінну оточення ``PYTHONPATH``. У наступних командах заміняйте ``qgispath`` на реальне розміщення QGIS у вашій системі:"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:281
msgid "on Linux: :command:`export PYTHONPATH=/qgispath/share/qgis/python`"
msgstr "в Linux: :command:`export PYTHONPATH=/qgispath/share/qgis/python`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:282
msgid "on Windows: :command:`set PYTHONPATH=c:\\\\qgispath\\\\python`"
msgstr "у Windows: :command:`set PYTHONPATH=c:\\\\qgispath\\\\python`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:284
msgid ""
"The path to the PyQGIS modules is now known, however they depend on "
"``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only as "
"wrappers). Path to these libraries is typically unknown for the operating "
"system, so you get an import error again (the message might vary depending "
"on the system)::"
msgstr "Тепер розміщення модулів PyQGIS відоме, але вони в свою чергу залежать від бібліотек ``qgis_core`` та ``qgis_gui`` (модулі Python лише «обгортки» над ними). У більшості випадків операційна система не знає де знаходяться ці бібліотеки, тому ви знову отримаєте помилку імпорту (повідомлення може відрізнятися в залежності від операційної системи)::"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:292
msgid ""
"Fix this by adding the directories where the QGIS libraries reside to search"
" path of the dynamic linker:"
msgstr "Для вирішення цієї проблеми додайте каталоги з бібліотеками QGIS до шляхів пошуку динамічного компонувальника:"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:295
msgid "on Linux: :command:`export LD_LIBRARY_PATH=/qgispath/lib`"
msgstr "в Linux: :command:`export LD_LIBRARY_PATH=/qgispath/lib`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:296
msgid "on Windows: :command:`set PATH=C:\\\\qgispath;%PATH%`"
msgstr "у Windows: :command:`set PATH=C:\\\\qgispath;%PATH%`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:298
msgid ""
"These commands can be put into a bootstrap script that will take care of the"
" startup. When deploying custom applications using PyQGIS, there are usually"
" two possibilities:"
msgstr "Ці команди можна розмістити у стартовому командному файлі, який і буде налаштовувати систему. Для розгортання автономних програм, що використовують PyQGIS, можна використовувати два способи:"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:302
msgid ""
"require user to install QGIS on his platform prior to installing your "
"application. The application installer should look for default locations of "
"QGIS libraries and allow user to set the path if not found. This approach "
"has the advantage of being simpler, however it requires user to do more "
"steps."
msgstr "вимагати від користувача встановлення QGIS перед встановленням вашої програми. Інсталятор програми повинен перевіряти наявність бібліотек QGIS у стандартних каталогах та дозволяти користувачу вказувати їх розміщення, якщо знайти їх автоматично не вдалося. Перевагою цього методу є простота, однак він потребує додаткових дій з боку користувача."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:308
msgid ""
"package QGIS together with your application. Releasing the application may "
"be more challenging and the package will be larger, but the user will be "
"saved from the burden of downloading and installing additional pieces of "
"software."
msgstr "включати QGIS в інсталятор своєї програми. Підготовка до виписку стане більш складною, а сам інсталятор більш об'ємним. Але користувачі будуть позбавлені необхідності завантажувати та встановлювати додаткові програми самостійно."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:313
msgid ""
"The two deployment models can be mixed - deploy standalone application on "
"Windows and Mac OS X, for Linux leave the installation of QGIS up to user "
"and his package manager."
msgstr "Ці два підходи можна комбінувати --- розгортати програму разом з QGIS у Windows та Mac OS X, а в Linux залишити встановлення QGIS на розсуд користувача."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:41
msgid "API"
msgstr "API"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:53
#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:78
#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:89
#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:127
#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:153
msgid "Python"
msgstr "Python"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:89
msgid "console"
msgstr "консоль"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:127
msgid "plugins"
msgstr "плагіни"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:264
msgid "custom applications"
msgstr "автономні програми"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:264
msgid "running"
msgstr "запуск"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:26
msgid ""
"There are several ways how to use Python bindings in QGIS desktop, they are "
"covered in detail in the following sections:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:29
msgid "automatically run Python code when QGIS starts"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:35
msgid "Python bindings are also available for QGIS Server:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:37
msgid ""
"starting from 2.8 release, Python plugins are also available on QGIS Server "
"(see: `Server Python Plugins <server_plugins>`_)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:38
msgid ""
"starting from 2.11 version (Master at 2015-08-11), QGIS Server library has "
"Python bindings that can be used to embed QGIS Server into a Python "
"application."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:47
msgid ""
"A good resource when dealing with plugins is to download some plugins from "
"`plugin repository <http://plugins.qgis.org/>`_ and examine their code. "
"Also, the ``python/plugins/`` folder in your QGIS installation contains some"
" plugin that you can use to learn how to develop such plugin and how to "
"perform some of the most common tasks."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:57
msgid "Run Python code when QGIS starts"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:59
msgid ""
"There are two distinct methods to run Python code every time QGIS starts."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:65
msgid "PYQGIS_STARTUP environment variable"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:67
msgid ""
"You can run Python code just before QGIS initialization completes by setting"
" the ``PYQGIS_STARTUP`` environment variable  to the path of an existing "
"Python file."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:70
msgid ""
"This method is something you will probably rarely need, but worth mentioning"
" here because it is one of the several ways to run Python code within QGIS "
"and because this code will run before QGIS initialization is complete. This "
"method is very useful for cleaning sys.path, which may have undesireable "
"paths, or for isolating/loading the initial environ without requiring a virt"
" env, e.g. homebrew or MacPorts installs on Mac."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:82
msgid "The :file:`startup.py` file"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:84
msgid ""
"Every time QGIS starts, the user's Python home directory (usually: "
":file:`.qgis2/python`) is searched for a file named :file:`startup.py`, if "
"that file exists, it is executed by the embedded Python interpreter."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:114
msgid ""
"For convenience of the user, the following statements are executed when the "
"console is started (in future it will be possible to set further initial "
"commands)"
msgstr "Для зручності користувачів, під час відкриття консолі виконуються такі команди (у майбутньому цей список можна буде розширювати)"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:149
msgid ""
"Python plugins are also available in QGIS server (:ref:`label_qgisserver`), "
"see :ref:`server_plugins` for further details."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:173
msgid ""
"PyQGIS custom applications or standalone scripts must be configured to "
"locate the QGIS resources such as projection information, providers for "
"reading vector and raster layers, etc. QGIS Resources are initialized by "
"adding a few lines to the beginning of your application or script. The code "
"to initialize QGIS for custom applications and standalone scripts is "
"similar, but examples of each are provided below."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:186
msgid "Using PyQGIS in standalone scripts"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:188
msgid ""
"To start a standalone script, initialize the QGIS resources at the beginning"
" of the script similar to the following code:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:211
msgid ""
"We begin by importing the :mod:`qgis.core` module and then configuring the "
"prefix path. The prefix path is the location where QGIS is installed on your"
" system. It is configured in the script by calling the ``setPrefixPath`` "
"method. The second argument of ``setPrefixPath`` is set to :const:`True`, "
"which controls whether the default paths are used."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:217
msgid ""
"The QGIS install path varies by platform; the easiest way to find it for "
"your your system is to use the :ref:`pythonconsole` from within QGIS and "
"look at the output from running ``QgsApplication.prefixPath()``."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:221
msgid ""
"After the prefix path is configured, we save a reference to "
"``QgsApplication`` in the variable ``qgs``. The second argument is set to "
"``False``, which indicates that we do not plan to use the GUI since we are "
"writing a standalone script. With the ``QgsApplication`` configured, we load"
" the QGIS data providers and layer registry by calling the "
"``qgs.initQgis()`` method. With QGIS initialized, we are ready to write the "
"rest of the script. Finally, we wrap up by calling ``qgs.exitQgis()`` to "
"remove the data providers and layer registry from memory."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:232
msgid "Using PyQGIS in custom applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:234
msgid ""
"The only difference between :ref:`standalonescript` and a custom PyQGIS "
"application is the second argument when instantiating the "
"``QgsApplication``. Pass :const:`True` instead of ``False`` to indicate that"
" we plan to use a GUI."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:53
msgid "startup"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:61
msgid "environment"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:61
msgid "PYQGIS_STARTUP"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:78
msgid "startup.py"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:153
msgid "custom applications; standalone scripts"
msgstr ""

#~ msgid "**TODO:**"
#~ msgstr ""

#~ msgid "Getting PyQGIS to work (Manual compilation, Troubleshooting)"
#~ msgstr ""

#~ msgid ""
#~ "There are several ways how to use QGIS python bindings, they are covered in "
#~ "detail in the following sections:"
#~ msgstr ""

#~ msgid ""
#~ "There are some resources about programming with PyQGIS on `QGIS blog "
#~ "<http://blog.qgis.org/>`_. See `QGIS tutorial ported to Python "
#~ "<http://blog.qgis.org/?q=node/59>`_ for some examples of simple 3rd party "
#~ "apps. A good resource when dealing with plugins is to download some plugins "
#~ "from `plugin repository <http://plugins.qgis.org/>`_ and examine their code."
#~ " Also, the ``python/plugins/`` folder in your QGIS installation contains "
#~ "some plugin that you can use to learn how to develop such plugin and how to "
#~ "perform some of the most common tasks"
#~ msgstr ""

#~ msgid ""
#~ "For convenience of the user, the following statements are executed when the "
#~ "console is started (in future it will be possible to set further initial "
#~ "commands)::"
#~ msgstr ""

#~ msgid "Using PyQGIS in custom application"
#~ msgstr ""

#~ msgid ""
#~ "First of all you have to import qgis module, set QGIS path where to search "
#~ "for resources --- database of projections, providers etc. When you set "
#~ "prefix path with second argument set as :const:`True`, QGIS will initialize "
#~ "all paths with standard dir under the prefix directory. Calling "
#~ ":func:`initQgis` function is important to let QGIS search for the available "
#~ "providers."
#~ msgstr ""

#~ msgid ""
#~ "When you are done with using QGIS library, call :func:`exitQgis` to make "
#~ "sure that everything is cleaned up (e.g. clear map layer registry and delete"
#~ " layers)::"
#~ msgstr ""
