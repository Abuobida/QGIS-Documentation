# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-26 14:10\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: \n"

# e3a2258e69614b2d8eeddabef3b0211e
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:13
msgid "The Vector Properties Dialog"
msgstr ""

# bc1d14eeb1d34a48982258a15fd0950f
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:655
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:651
msgid "Layer rendering"
msgstr ""

# 575052fb1e5b4cbfb1ff37e5512933b6
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:330
msgid "**Select and change multiple symbols**"
msgstr ""

# ccc24f0f1556474496e06dd2e4bb202f
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:345
msgid "Equal Interval"
msgstr ""

# 00fe1f09c8e049fe99849ffe16641c71
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:345
msgid "Quantile"
msgstr ""

# 4d5525da80df45d9a5f30232c764c51a
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:345
msgid "Natural Breaks (Jenks)"
msgstr ""

# 6b4fcfe10d04403babab689a4f623f79
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:345
msgid "Pretty Breaks"
msgstr ""

# 2fa9f181465a4923a85f2e28f68f3b24
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1949
msgid "Placement"
msgstr ""

# 0e1a8df1b74e4b74b6b60fc42d0edac4
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1507
msgid "Zoom into a lake."
msgstr ""

# d7c33295f06247129f040346fb94362f
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1656
msgid ""
"**UUID Generator**: Generates a read-only UUID (Universally Unique "
"Identifiers) field, if empty."
msgstr ""

# b419a54450634006941171e9ae9abdaa
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1643
msgid ""
"**Photo**: Field contains a filename for a picture. The width and height of "
"the field can be defined."
msgstr ""

# a2149c895ca440bea3a049aa234ddb97
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1734
msgid "Dialog to create categories with the **Attribute editor layout**"
msgstr ""

# d9949aec1eb2446d8f4211c27be51a96
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:56
msgid "Layer Info"
msgstr ""

# c80e6628f29f4a22a68a4c1c21e4dfd9
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:64
msgid "Coordinate Reference System"
msgstr ""

# ea7c5560741a4614a2a553d86b743e93
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:74
msgid ":guilabel:`Update Extents` information for a layer"
msgstr ""

# 0051e2a9eedc4cff9d782e7846356cc6
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2147
msgid "``konqueror http://www.google.com/search?q=%nam``"
msgstr ""

# cda0f6982ca741588a5b2d78b811a895
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2148
msgid "``konqueror http://www.google.com/search?q=%%``"
msgstr ""

# fef8102592034fbb8adbed0d2476a7d8
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2180
msgid ""
"If you are invoking an action that uses the ``%%`` notation, right-click on "
"the field value in the :guilabel:`Identify Results` dialog or the "
":guilabel:`Attribute Table` dialog that you wish to pass to the application "
"or script."
msgstr ""

# 53815baa174146a3982d3bd9d1e1a996
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2199
msgid ""
"After selecting a few localities and running the action on each one, opening"
" the output file will show something like this:"
msgstr ""

# cd959671fd454144b784c01850524655
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2218
msgid "Make sure the ``lakes`` layer is loaded."
msgstr ""

# 892b2d8e18324720a54aa1e81671cdc4
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2224
msgid "Enter a name for the action, for example ``Google Search``."
msgstr ""

# eb3d4d86614e4948b9b5b12a3eb53f17
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2225
msgid ""
"For the action, we need to provide the name of the external program to run. "
"In this case, we can use Firefox. If the program is not in your path, you "
"need to provide the full path."
msgstr ""

# 8a686a32c069416b8a8ab05962cbb8c1
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2231
msgid ""
"The text in the :guilabel:`Action` field should now look like this: "
"``firefox http://google.com/search?q=``"
msgstr ""

# c3e0eb43c3c14e559ec28011570f05a6
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2236
msgid "Your action text now looks like this:"
msgstr ""

# 99ac364697d14a83b44ea021164c4555
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2238
msgid "``firefox http://google.com/search?q=%NAMES``"
msgstr ""

# 3c27ffc2489f4fb3820c4bfaf29954a3
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2255
msgid ""
"We can now use the action. Close the :guilabel:`Layer Properties` dialog and"
" zoom in to an area of interest. Make sure the ``lakes`` layer is active and"
" identify a lake. In the result box you'll now see that our action is "
"visible:"
msgstr ""

# 052be4132ea243378520e4506603374c
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1834
msgid "|checkbox| :guilabel:`Cache join layer in virtual memory`"
msgstr ""

# 9b4164e132ac4eba980559324a138187
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1835
msgid "|checkbox| :guilabel:`Create attribute index on the join field`"
msgstr ""

# ef89ecd3bad347689ca89e09a819f729
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2015
msgid ""
"Double click the ``climate`` layer in the map legend to open the "
":guilabel:`Layer Properties` dialog."
msgstr ""

# fe1f82af371446f791b7a8f00cfc2eac
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:159
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:209
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:238
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:259
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:345
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:504
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:547
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:571
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:590
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:612
msgid "Symbology"
msgstr ""

# 20cedf8c785f44f6a6164aba93c4d266
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2067
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2101
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2101
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2142
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2163
msgid "Actions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:174
msgid "**Export vector symbology**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1627
msgid ""
"**Classification**: Displays a combo box with the values used for "
"classification, if you have chosen 'unique value' as legend type in the "
":guilabel:`Style` tab of the properties dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:20
msgid ""
"The :guilabel:`Layer Properties` dialog for a vector layer provides general "
"settings to manage appearance of layer features in the map (symbology, "
"labeling, diagrams), interaction with the mouse (actions, map tips, form "
"design). It also provides information about the layer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:25
msgid ""
"To access the :guilabel:`Layer Properties` dialog, double-click on a layer "
"in the legend or right-click on the layer and select "
":menuselection:`Properties` from the pop-up menu."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:29
msgid ""
"Depending on the :ref:`external plugins <plugins>` you have installed, new "
"tabs may be added to the layer properties dialog. Those are not presented "
"below."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:33
msgid "**Live update rendering**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:35
msgid ""
"The :ref:`layer_styling_panel` provides you with some of the common features"
" of the Layer properties dialog and is a good modeless widget that you can "
"use to speed up the configuration of the layer styles and automatically view"
" your changes in the map canvas."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:42
msgid ""
"Because properties (symbology, label, actions, default values, forms...) of "
"embedded layers (see :ref:`nesting_projects`) are pulled from the original "
"project file and to avoid changes that may break this behavior, the layer "
"properties dialog is made unavailable for these layers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:50
msgid "General Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:52
msgid ""
"|general| Use this tab to make general settings for the vector layer. There "
"are several options available:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:58
msgid ""
"Set the :guilabel:`Layer name` to display in the :guilabel:`Layers Panel`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:59
msgid "Display the :guilabel:`Layer source` of the vector layer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:60
msgid ""
"Define the :guilabel:`Data source encoding` to define provider-specific "
"options and to be able to read the file"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:66
msgid ""
"Displays the layer's Coordinate Reference System (CRS) as a PROJ.4 string. "
"You can change the layer's CRS, selecting a recently used one in the drop-"
"down list or clicking on |setProjection| :sup:`Select CRS` button (see "
":ref:`crs_selector`). Use this process only if the CRS applied to the layer "
"is a wrong one or if none was applied. If you wish to reproject your data "
"into another CRS, rather use layer reprojection algorithms from Processing "
"or :ref:`Save it into another layer <general_saveas>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:73
msgid "Create a :guilabel:`Spatial Index` (only for OGR-supported formats)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:78
msgid "Scale dependent visibility"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:80
msgid ""
"You can set the :guilabel:`Maximum (inclusive)` and :guilabel:`Minimum "
"(exclusive)` scale, defining a range of scale in which features will be "
"visible. Out of this range, they are hidden. The |mapIdentification| "
":sup:`Set to current canvas scale` button helps you use the current map "
"canvas scale as boundary of the range visibility. See "
":ref:`label_scaledepend` for more information."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:93
msgid "General tab in vector layers properties dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:99
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:122
msgid "Query Builder"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:101
msgid ""
"Under the **Provider Feature Filter** frame, the Query Builder allows you to"
" define a subset of the features in the layer using a SQL-like WHERE clause "
"and to display the result in the main window. As long as the query is "
"active, only the features corresponding to its result are available in the "
"project. The query result can be saved as a new vector layer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:107
msgid ""
"The **Query Builder** is accessible through the eponym term at the bottom of"
" the :guilabel:`General` tab in the Layer Properties. Under "
":guilabel:`Feature subset`, click on the **[Query Builder]** button to open "
"the :guilabel:`Query builder`. For example, if you have a ``regions`` layer "
"with a ``TYPE_2`` field, you could select only regions that are ``borough`` "
"in the :guilabel:`Provider specific filter expression` box of the Query "
"Builder. Figure_vector_querybuilder_ shows an example of the Query Builder "
"populated with the :file:`regions.shp` layer from the QGIS sample data. The "
"Fields, Values and Operators sections help you to construct the SQL-like "
"query."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:124
msgid ""
"The **Fields list** contains all attribute columns of the attribute table to"
" be searched. To add an attribute column to the SQL WHERE clause field, "
"double click its name in the Fields list. Generally, you can use the various"
" fields, values and operators to construct the query, or you can just type "
"it into the SQL box."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:130
msgid ""
"The **Values list** lists the values of an attribute table. To list all "
"possible values of an attribute, select the attribute in the Fields list and"
" click the **[all]** button. To list the first 25 unique values of an "
"attribute column, select the attribute column in the Fields list and click "
"the **[Sample]** button. To add a value to the SQL WHERE clause field, "
"double click its name in the Values list."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:137
msgid ""
"The **Operators section** contains all usable operators. To add an operator "
"to the SQL WHERE clause field, click the appropriate button. Relational "
"operators ( ``=`` , ``>`` , ...), string comparison operator (``LIKE``), and"
" logical operators (``AND``, ``OR``, ...) are available."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:142
msgid ""
"The **[Test]** button shows a message box with the number of features "
"satisfying the current query, which is useful in the process of query "
"construction. The **[Clear]** button clears the text in the SQL WHERE clause"
" text field. The **[OK]** button closes the window and selects the features "
"satisfying the query. The **[Cancel]** button closes the window without "
"changing the current selection."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:149
msgid ""
"QGIS treats the resulting subset acts as if it were the entire layer. For "
"example if you applied the filter above for 'Borough', you can not display, "
"query, save or edit Anchorage, because that is a 'Municipality' and "
"therefore not part of the subset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:154
msgid ""
"The only exception is that unless your layer is part of a database, using a "
"subset will prevent you from editing the layer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:164
msgid "Style Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:166
msgid ""
"|symbology| The Style tab provides you with a comprehensive tool for "
"rendering and symbolizing your vector data. You can use tools that are "
"common to all vector data, as well as special symbolizing tools that were "
"designed for the different kinds of vector data. However all types share the"
" following dialog structure: in the upper part, you have a widget that helps"
" you prepare the classification and the symbol to use for features and at "
"the bottom the:ref:`layer_rendering` widget."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:176
msgid ""
"You have the option to export vector symbology from QGIS into Google "
"\\*.kml, \\*.dxf and MapInfo \\*.tab files. Just open the right mouse menu "
"of the layer and click on :menuselection:`Save As...` to specify the name of"
" the output file and its format. In the dialog, use the "
":menuselection:`Symbology export` menu to save the symbology either as "
":menuselection:`Feature symbology -->` or as :menuselection:`Symbol layer "
"symbology -->`. If you have used symbol layers, it is recommended to use the"
" second setting."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:187
msgid "Features rendering"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:189
msgid ""
"The renderer is responsible for drawing a feature together with the correct "
"symbol. Regardless layer geometry type, there are four common types of "
"renderers: single symbol, categorized, graduated and rule-based. For point "
"layers, there are a point displacement and a heatmap renderers available "
"while polygon layers can also be rendered with the inverted renderer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:195
msgid ""
"There is no continuous color renderer, because it is in fact only a special "
"case of the graduated renderer. The categorized and graduated renderers can "
"be created by specifying a symbol and a color ramp - they will set the "
"colors for symbols appropriately. For each data type (points, lines and "
"polygons), vector symbol layer types are available. Depending on the chosen "
"renderer, the dialog provides different additional sections."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:204
msgid ""
"If you change the renderer type when setting the style of a vector layer the"
" settings you made for the symbol will be maintained. Be aware that this "
"procedure only works for one change. If you repeat changing the renderer "
"type the settings for the symbol will get lost."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:214
msgid "Single Symbol Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:216
msgid ""
"The |singleSymbol| :guilabel:`Single Symbol` Renderer is used to render all "
"features of the layer using a single user-defined symbol. See :ref:`symbol-"
"selector` for further information about symbol representation."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:226
msgid "Single symbol line properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:228
msgid "**Edit symbol directly from layer panel**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:230
msgid ""
"If in your **Layers Panel** you have layers with categories defined through "
"categorized, graduated or rule-based style mode, you can quickly change the "
"fill color of the symbol of the categories by right-clicking on a category "
"and choose the color you prefer from a |colorWheel| :sup:`color wheel` menu."
" Right-clicking on a category will also give you access to the options "
"**Hide all items**, **Show all items** and **Edit symbol**."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:243
msgid "No Symbols Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:245
msgid ""
"The |nullSymbol| :guilabel:`No Symbols` renderer is a special use case of "
"the Single Symbol renderer as it applies the same rendering to all features."
" Using this renderer, no symbol will be drawn for features, but labeling, "
"diagrams and other non-symbol parts will still be shown."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:250
msgid ""
"Selections can still be made on the layer in the canvas and selected "
"features will be rendered with a default symbol. Features being edited will "
"also be shown."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:254
msgid ""
"This is intended as a handy shortcut for layers which you only want to show "
"labels or diagrams for, and avoids the need to render symbols with totally "
"transparent fill/border to achieve this."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:264
msgid "Categorized Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:266
msgid ""
"The |categorizedSymbol| :guilabel:`Categorized Renderer` is used to render "
"the features of a layer, using a user-defined symbol whose aspect reflects "
"the discrete values of a field or an expression. The Categorized menu allows"
" you to"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:270
msgid "select an existing field (using the Column listbox) or"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:271
msgid ""
"type or build an :ref:`expression <vector_expressions>` using the "
"|expression| :sup:`Set column expression`. The expression used to classify "
"features can be of any type; it can for example:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:275
msgid ""
"be a comparison, e.g. ``myfield >= 100``, ``$id = @atlas_featureid``, "
"``myfield % 2 = 0``, ``within( $geometry, @atlas_geometry )``. In this case,"
" QGIS returns values ``1`` (**True**) and ``0`` (**False**)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:278
msgid ""
"combine different fields, e.g. ``concat( field1, ' ', field2 )`` "
"particularly useful when you want to process classification on two or more "
"fields simultaneously."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:281
msgid ""
"be a calculation on fields, e.g. ``myfield % 2``, ``year( myfield )`` "
"``field_1 + field_2``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:283
msgid "be used to transform linear values in discrete classes, e.g.:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:289
msgid "combine several discrete values in one single category, e.g.:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:299
msgid ""
"While you can use any kind of expression to categorize features, for some "
"complex expressions it might be simpler to use :ref:`rule-based rendering "
"<rule_based_rendering>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:303
msgid ""
"the symbol (using the :ref:`symbol-selector` dialog) which will be used as "
"base symbol for each class;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:305
msgid ""
"the range of colors (using the Color ramp listbox) from which color applied "
"to the symbol is selected."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:308
msgid ""
"Then click on **[Classify]** button to create classes from the distinct "
"value of the attribute column. Each class can be disabled unchecking the "
"checkbox at the left of the class name."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:312
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:401
msgid ""
"To change symbol, value and/or label of the class, just double click on the "
"item you want to change."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:315
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:404
msgid ""
"Right-click shows a contextual menu to **Copy/Paste**, **Change color**, "
"**Change transparency**, **Change output unit**, **Change symbol width**."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:318
msgid ""
"The example in figure_categorized_symbology_ shows the category rendering "
"dialog used for the rivers layer of the QGIS sample dataset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:326
msgid "Categorized Symbolizing options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:332
msgid ""
"The Symbology allows you to select multiple symbols and right click to "
"change color, transparency, size, or width of selected entries."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:336
msgid "**Match categories to symbol name**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:338
msgid ""
"In the [Advanced] menu, under the classes, you can choose one of the two "
"first actions to match symbol name to a category name in your "
"classification. *Matched to saved symbols* match category name with a symbol"
" name from your *Style Manager*. *Match to symbols from file* match category"
" name to a symbol name from an external file."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:350
msgid "Graduated Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:352
msgid ""
"The |graduatedSymbol| :guilabel:`Graduated Renderer` is used to render all "
"the features from a layer, using an user-defined symbol whose color or size "
"reflects the assignment of a selected feature's attribute to a class."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:356
msgid ""
"Like the Categorized Renderer, the Graduated Renderer allows you to define "
"rotation and size scale from specified columns."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:359
msgid "Also, analogous to the Categorized Renderer, it allows you to select:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:361
msgid ""
"The attribute (using the Column listbox or the |expression| :sup:`Set column"
" expression` function)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:363
msgid "The symbol (using the Symbol selector dialog)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:364
msgid "The legend format and the precision"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:365
msgid "The method to use to change the symbol: color or size"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:366
msgid "The colors (using the color Ramp list) if the color method is selected"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:367
msgid "The size (using the size domain and its unit)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:369
msgid ""
"Then you can use the Histogram tab which shows an interactive histogram of "
"the values from the assigned field or expression. Class breaks can be moved "
"or added using the histogram widget."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:375
msgid ""
"You can use Statistical Summary panel to get more information on your vector"
" layer. See :ref:`statistical_summary`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:378
msgid ""
"Back to the Classes tab, you can specify the number of classes and also the "
"mode for classifying features within the classes (using the Mode list). The "
"available modes are:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:382
msgid ""
"Equal Interval: each class has the same size (e.g. values from 0 to 16 and 4"
" classes, each class has a size of 4);"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:384
msgid ""
"Quantile: each class will have the same number of element inside (the idea "
"of a boxplot);"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:386
msgid ""
"Natural Breaks (Jenks): the variance within each class is minimal while the "
"variance between classes is maximal;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:388
msgid ""
"Standard Deviation: classes are built depending on the standard deviation of"
" the values;"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:390
msgid ""
"Pretty Breaks: Computes a sequence of about n+1 equally spaced nice values "
"which cover the range of the values in x. The values are chosen so that they"
" are 1, 2 or 5 times a power of 10. (based on pretty from the R statistical "
"environment "
"http://astrostatistics.psu.edu/datasets/R/html/base/html/pretty.html)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:395
msgid ""
"The listbox in the center part of the :guilabel:`Style` tab lists the "
"classes together with their ranges, labels and symbols that will be "
"rendered."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:398
msgid ""
"Click on **Classify** button to create classes using the chosen mode. Each "
"classes can be disabled unchecking the checkbox at the left of the class "
"name."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:407
msgid ""
"The example in figure_graduated_symbology_ shows the graduated rendering "
"dialog for the rivers layer of the QGIS sample dataset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:415
msgid "Graduated Symbolizing options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:417
msgid "**Thematic maps using an expression**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:419
msgid ""
"Categorized and graduated thematic maps can be created using the result of "
"an expression. In the properties dialog for vector layers, the attribute "
"chooser is extended with a |expression| :sup:`Set column expression` "
"function. So you don't need to write the classification attribute to a new "
"column in your attribute table if you want the classification attribute to "
"be a composite of multiple fields, or a formula of some sort."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:430
msgid "Proportional Symbol and Multivariate Analysis"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:432
msgid ""
"Proportional Symbol and Multivariate Analysis are not rendering types "
"available from the Style rendering drop-down list. However with the **Size "
"Assistant** options applied over any of the previous rendering options, QGIS"
" allows you to display your point and line data with such representation."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:440
msgid "**Creating proportional symbol**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:442
msgid ""
"Proportional rendering is done by first applying to the layer the "
":ref:`single_symbol_renderer`. Once you set the symbol, at the upper level "
"of the symbol tree, the |dataDefined| :guilabel:`Data-defined override` "
"button available beside :guilabel:`Size` or :guilabel:`Width` options (for "
"point or line layers respectively) provides tool to create proportional "
"symbology for the layer. An assistant is moreover accessible through the "
"|dataDefined| menu to help you define size expression."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:455
msgid "Varying size assistant"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:457
msgid "The assistant lets you define:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:459
msgid ""
"The attribute to represent, using the Field listbox or the |expression| "
":sup:`Set column expression` function (see :ref:`vector_expressions`)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:461
msgid ""
"the scale method of representation which can be 'Flannery', 'Surface' or "
"'Radius'"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:462
msgid "The minimum and maximum size of the symbol"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:463
msgid ""
"The range of values to represent: The down pointing arrow helps you fill "
"automatically these fields with the minimum (or zero) and maximum values "
"returned by the chosen attribute or the expression applied to your data."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:466
msgid "An unique size to represent NULL values."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:468
msgid ""
"To the right side of the dialog, you can preview the features representation"
" within a live-update widget. This representation is added to the layer tree"
" in the layer legend and is also used to shape the layer representation in "
"the print composer legend item."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:473
msgid ""
"The values presented in the varying size assistant above will set the size "
"'Data-defined override' with: ::"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:479
msgid "**Creating multivariate analysis**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:481
msgid ""
"A multivariate analysis rendering helps you evaluate the relationship "
"between two or more variables e.g., one can be represented by a color ramp "
"while the other is represented by a size."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:486
msgid ""
"The simplest way to create multivariate analysis in QGIS is to first apply a"
" categorized or graduated rendering on a layer, using the same type of "
"symbol for all the classes. Then, clicking on the symbol **[Change]** button"
" above the classification frame, you get the :ref:`symbol-selector` dialog "
"from which, as seen above, you can activate and set the :ref:`size assistant"
" <size_assistant>` option either on size (for point layer) or width (for "
"line layer)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:493
msgid ""
"Like the proportional symbol, the size-related symbol is added to the layer "
"tree, at the top of the categorized or graduated classes symbols. And both "
"representation are also available in the print composer legend item."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:502
msgid "Multivariate example"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:510
msgid "Rule-based rendering"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:512
msgid ""
"The |ruleBasedSymbol| :guilabel:`Rule-based Renderer` is used to render all "
"the features from a layer, using rule-based symbols whose aspect reflects "
"the assignment of a selected feature's attribute to a class. The rules are "
"based on SQL statements. The dialog allows rule grouping by filter or scale,"
" and you can decide if you want to enable symbol levels or use only the "
"first-matched rule."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:519
msgid ""
"To create a rule, activate an existing row by double-clicking on it, or "
"click on '+' and click on the new rule. In the :guilabel:`Rule properties` "
"dialog, you can define a label for the rule. Press the |browseButton| button"
" to open the expression string builder. In the **Function List**, click on "
":guilabel:`Fields and Values` to view all attributes of the attribute table "
"to be searched. To add an attribute to the field calculator **Expression** "
"field, double click on its name in the :guilabel:`Fields and Values` list. "
"Generally, you can use the various fields, values and functions to construct"
" the calculation expression, or you can just type it into the box (see "
":ref:`vector_expressions`). You can create a new rule by copying and pasting"
" an existing rule with the right mouse button. You can also use the 'ELSE' "
"rule that will be run if none of the other rules on that level matches. "
"Since QGIS 2.8 the rules appear in a tree hierarchy in the map legend. Just "
"double-click the rules in the map legend and the Style tab of the layer "
"properties appears showing the rule that is the background for the symbol in"
" the tree."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:537
msgid ""
"The example in figure_rule_based_symbology_ shows the rule-based rendering "
"dialog for the rivers layer of the QGIS sample dataset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:545
msgid "Rule-based Symbolizing options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:552
msgid "Point displacement"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:554
msgid ""
"The |pointDisplacementSymbol| :guilabel:`Point Displacement` renderer works "
"to visualize all features of a point layer, even if they have the same "
"location. To do this, the symbols of the points are placed on a displacement"
" circle around one center symbol or on several concentric circles."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:564
msgid "Point displacement dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:566
msgid ""
"You can still render features with other renderer like Single symbol, "
"Graduated, Categorized or Rule-Based renderer using the :guilabel:`Renderer`"
" drop-down list then the :guilabel:`Renderer Settings...` button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:576
msgid "Inverted Polygon"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:578
msgid ""
"The |invertedSymbol| :guilabel:`Inverted Polygon` renderer allows user to "
"define a symbol to fill in outside of the layer's polygons. As above you can"
" select subrenderers, namely Single symbol, Graduated, Categorized, Rule-"
"Based or 2.5D renderer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:588
msgid "Inverted Polygon dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:595
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:590
msgid "Heatmap"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:597
msgid ""
"With the |heatmapSymbol| :guilabel:`Heatmap` renderer you can create live "
"dynamic heatmaps for (multi)point layers. You can specify the heatmap radius"
" in pixels, mm or map units, choose and edit a color ramp for the heatmap "
"style and use a slider for selecting a trade-off between render speed and "
"quality. You can also define a maximum value limit and give a weight to "
"points using a field or an expression. When adding or removing a feature the"
" heatmap renderer updates the heatmap style automatically."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:610
msgid "Heatmap dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:617
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:612
msgid "2.5D"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:619
msgid ""
"Using the |25dSymbol| :guilabel:`2.5D` renderer it's possible to create a "
"2.5D effect on your layer's features. You start by choosing a "
":guilabel:`Height` value (in map units). For that you can use a fixed value,"
" one of your layer's fields, or an expression. You also need to choose an "
":guilabel:`Angle` (in degrees) to recreate the viewer position (0 |degrees| "
"means west, growing in counter clock wise). Use advanced configuration "
"options to set the :guilabel:`Roof Color` and :guilabel:`Wall Color`. If you"
" would like to simulate solar radiation on the features walls, make sure to "
"check the |checkbox| :guilabel:`Shade walls based on aspect` option. You can"
" also simulate a shadow by setting a :guilabel:`Color` and :guilabel:`Size` "
"(in map units)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:636
msgid "2.5D dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:638
msgid "**Using 2.5D effect with other renderers**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:640
msgid ""
"Once you have finished setting the basic style on the 2.5D renderer, you can"
" convert this to another renderer (single, categorized, graduated). The 2.5D"
" effects will be kept and all other renderer specific options will be "
"available for you to fine tune them (this way you can have for example "
"categorized symbols with a nice 2.5D representation or add some extra "
"styling to your 2.5D symbols). To make sure that the shadow and the "
"\"building\" itself do not interfere with other nearby features, you may "
"need to enable Symbols Levels ( :menuselection:`Advanced --> Symbol "
"levels...`). The 2.5D height and angle values are saved in the layer's "
"variables, so you can edit it afterwards in the variables tab of the layer's"
" properties dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:657
msgid ""
"From the Style tab, you can also set some options that invariabily act on "
"all features of the layer:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:660
msgid ""
":guilabel:`Layer transparency` |slider|: You can make the underlying layer "
"in the map canvas visible with this tool. Use the slider to adapt the "
"visibility of your vector layer to your needs. You can also make a precise "
"definition of the percentage of visibility in the the menu beside the "
"slider."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:665
msgid ""
":guilabel:`Layer blending mode` and :guilabel:`Feature blending mode`: You "
"can achieve special rendering effects with these tools that you may "
"previously only know from graphics programs. The pixels of your overlaying "
"and underlaying layers are mixed through the settings described in :ref"
":`blend-modes`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:670
msgid ""
"Apply :ref:`paint effects <draw_effects>` on all the layer features with the"
" :guilabel:`Draw Effects` button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:673
msgid ""
":guilabel:`Control feature rendering order` allows you, using features "
"attributes, to define the z-order in which they shall be rendered. Activate "
"the checkbox and click on the |sort| button beside. You then get the "
":guilabel:`Define Order` dialog in which you:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:678
msgid "choose a field or build an expression to apply to the layer features"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:679
msgid ""
"set in which order the fetched features should be sorted, i.e. if you choose"
" **Ascending** order, the features with lower value are rendered under those"
" with upper value."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:682
msgid ""
"define when features returning NULL value should be rendered: **first** or "
"**last**."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:684
msgid ""
"You can add several rules of ordering. The first rule is applied to all the "
"features in the layer, z-ordering them according to the value returned. "
"Then, for each group of features with the same value (including those with "
"NULL value) and thus same z-level, the next rule is applied to sort its "
"items among them. And so on..."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:696
msgid "Layer rendering options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:699
msgid "Other Settings"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:705
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:701
msgid "Symbols levels"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:707
msgid ""
"For renderers that allow stacked symbol layers (only heatmap doesn't) there "
"is an option to control the rendering order of each symbol's levels."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:710
msgid ""
"For most of the renderers, you can access the Symbols levels option by "
"clicking the **[Advanced]** button below the saved symbols list and choosing"
" :guilabel:`Symbol levels`. For the :ref:`rule_based_rendering` the option "
"is directly available through **[Symbols levels]** button, while for "
":ref:`point_displacement` renderer the same button is inside the "
":guilabel:`Rendering settings` dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:717
msgid ""
"To activate symbols levels, select the |checkbox| :guilabel:`Enable symbol "
"levels`. Each row will show up a small sample of the combined symbol, its "
"label and the individual symbols layer divided into columns with a number "
"next to it. The numbers represent the rendering order level in which the "
"symbol layer will be drawn. Lower values levels are drawn first, staying at "
"the bottom, while higher values are drawn last, on top of the others."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:729
msgid "Symbol levels dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:733
msgid ""
"If symbols levels are deactivated, the complete symbols will be drawn "
"according to their respective features order. Overlapping symbols will "
"simply obfuscate to other below. Besides, similar symbols won't \"merge\" "
"with each other."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:743
msgid "Symbol levels activated (A) and deactivated (B) difference"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:749
msgid "Draw effects"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:751
msgid ""
"In order to improve layer rendering and avoid (or at least reduce) the "
"resort to other software for final rendering of maps, QGIS provides another "
"powerful functionality: the |paintEffects| :guilabel:`Draw Effects` options,"
" which adds paint effects for customizing the visualization of vector "
"layers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:756
msgid ""
"The option is available in the :guilabel:`Layer Properties --> Style` "
"dialog, under the :ref:`Layer rendering <layer_rendering>` group (applying "
"to the whole layer) or in :ref:`symbol layer properties <symbol-selector>` "
"(applying to corresponding features). You can combine both usage."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:761
msgid ""
"Paint effects can be activated by checking the |checkbox| :guilabel:`Draw "
"effects` option and clicking the |paintEffects| :sup:`Customize effects` "
"button, that will open the :guilabel:`Effect Properties` Dialog (see "
"figure_effects_source_). The following effect types, with custom options are"
" available:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:766
msgid ""
"**Source:** Draws the feature's original style according to the "
"configuration of the layer's properties. The transparency of its style can "
"be adjusted."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:774
msgid "Draw Effects: Source dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:776
msgid ""
"**Blur:** Adds a blur effect on the vector layer. The options that someone "
"can change are the :menuselection:`Blur type` (:menuselection:`Stack` or "
":menuselection:`Gaussian blur`), the strength and transparency of the blur "
"effect."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:785
msgid "Draw Effects: Blur dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:787
msgid ""
"**Colorize:** This effect can be used to make a version of the style using "
"one single hue. The base will always be a grayscale version of the symbol "
"and you can use the |selectString| :guilabel:`Grayscale` to select how to "
"create it (options are: 'lightness', 'luminosity' and 'average'). If "
"|checkbox| :guilabel:`Colorise` is selected, it will be possible to mix "
"another color and choose how strong it should be. You can also control the "
":guilabel:`Brightness`, :guilabel:`contrast` and :guilabel:`saturation` "
"levels of the resulting symbol."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:801
msgid "Draw Effects: Colorize dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:803
msgid ""
"**Drop Shadow:** Using this effect adds a shadow on the feature, which looks"
" like adding an extra dimension. This effect can be customized by changing "
"the :menuselection:`offset` degrees and radius, determining where the shadow"
" shifts towards to and the proximity to the source object. "
":menuselection:`Drop Shadow` also has the option to change the blur radius, "
"the transparency and the color of the effect."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:815
msgid "Draw Effects: Drop Shadow dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:817
msgid ""
"**Inner Shadow:** This effect is similar to the :menuselection:`Drop Shadow`"
" effect, but it adds the shadow effect on the inside of the edges of the "
"feature. The available options for customization are the same as the "
":menuselection:`Drop Shadow` effect."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:827
msgid "Draw Effects: Inner Shadow dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:829
msgid ""
"**Inner Glow:** Adds a glow effect inside the feature. This effect can be "
"customized by adjusting the :menuselection:`spread` (width) of the glow, or "
"the :menuselection:`Blur radius`. The latter specifies the proximity from "
"the edge of the feature where you want any blurring to happen. Additionally,"
" there are options to customize the color of the glow, with a single color "
"or a color ramp."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:841
msgid "Draw Effects: Inner Glow dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:843
msgid ""
"**Outer Glow:** This effect is similar to the :menuselection:`Inner Glow` "
"effect, but it adds the glow effect on the outside of the edges of the "
"feature. The available options for customization are the same as the "
":menuselection:`Inner Glow` effect."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:853
msgid "Draw Effects: Outer Glow dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:855
msgid ""
"**Transform:** Adds the possibility of transforming the shape of the symbol."
" The first options available for customization are the "
":menuselection:`Reflect horizontal` and :menuselection:`Reflect vertical`, "
"which actually create a reflection on the horizontal and/or vertical axes. "
"The 4 other options are:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:860
msgid ":menuselection:`Shear`: slants the feature along the x and/or y axis"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:861
msgid ""
":menuselection:`Scale`: enlarges or minimizes the feature along the x and/or"
" y axis by the given percentage"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:863
msgid ":menuselection:`Rotation`: turns the feature around its center point"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:864
msgid ""
"and :menuselection:`Translate` changes the position of the item based on a "
"distance given on the x and/or the y axis."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:872
msgid "Draw Effects: Transform dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:874
msgid ""
"There are some common options available for all draw effect types. "
":guilabel:`Transparency` and :guilabel:`Blend mode` options work similar to "
"the ones described in :ref:`layer_rendering` and can be used in all draw "
"effects except for the transform one."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:879
msgid ""
"One or more draw effects can used at the same time. You activate/deactivate "
"an effect using its checkbox in the effects list. You can change the "
"selected effect type by using the |selectstring| :guilabel:`Effect type` "
"option. You can reorder the effects using |arrowUp| :sup:`Move up` and "
"|arrowDown| :sup:`Move down` buttons, and also add/remove effects using the "
"|signPlus| :sup:`Add effect` and |signMinus| :sup:`Remove effect` buttons."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:886
msgid ""
"There is also a |selectString| :guilabel:`Draw mode` option available for "
"every draw effect, and you can choose whether to render and/or to modify the"
" symbol. Effects render from top to bottom.'Render only' mode means that the"
" effect will be visible while the 'Modify only' mode means that the effect "
"will not be visible but the changes that it applies will be passed to the "
"next effect (the one immediately below). The 'Render and Modify' mode will "
"make the effect visible and pass any changes to the next effect. If the "
"effect is in the top of the effects list or if the immediately above effect "
"is not in modify mode, then it will use the original source symbol from the "
"layers properties (similar to source)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:900
msgid "Labels Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:902
msgid ""
"The |labeling| :guilabel:`Labels` properties provides you with all the "
"needed and appropriate capabilities to configure smart labeling on vector "
"layers. This dialog can also be accessed from the :guilabel:`Layer Styling` "
"panel, or using the |labeling| :sup:`Layer Labeling Options` icon of the "
"**Labels toolbar**."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:910
msgid "Setting a label"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:912
msgid ""
"The first step is to choose the labeling method from the drop-down list. "
"There are four options available:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:915
msgid "**No labels**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:916
msgid "**Show labels for this layer**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:917
msgid ":ref:`Rule-based labeling <rule_based_labeling>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:918
msgid ""
"and **Blocking**: allows to set a layer as just an obstacle for other "
"layer's labels without rendering any labels of its own."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:921
msgid ""
"The next steps assume you select the **Show labels for this layer** option, "
"enabling following tabs that help you configure the labeling:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:924
msgid ":ref:`Text <labels_text>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:925
msgid ":ref:`Formatting <labels_formatting>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:926
msgid ":ref:`Buffer <labels_buffer>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:927
msgid ":ref:`Background <labels_background>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:928
msgid ":ref:`Shadow <labels_shadow>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:929
msgid ":ref:`Placement <labels_placement>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:930
msgid ":ref:`Rendering <labels_rendering>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:932
msgid ""
"It also enables the **Label with** drop-down list, from which you can select"
" an attribute column to use. Click |expression| if you want to define labels"
" based on expressions - See :ref:`labeling_with_expressions`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:936
msgid ""
"The following steps describe simple labeling without using the "
":guilabel:`Data defined override` functions, which are situated next to the "
"drop-down menus - see :ref:`data_defined_labeling` for a use case."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:945
msgid "Layer labeling settings - Text tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:950
msgid "Text tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:952
msgid ""
"In the :guilabel:`Text` tab, you can define the :guilabel:`Font`, "
":guilabel:`Style`, and :guilabel:`Size` of your labels' text (see "
"Figure_labels_). There are options available to set the labels' "
":guilabel:`Color` and :guilabel:`Transparency`. Use the :guilabel:`Type "
"case` option to change the capitalization style of the text. You have the "
"possibility to render the text as 'All uppercase', 'All lowercase' or "
"'Capitalize first letter'. In :guilabel:`Spacing`, you can change the space "
"between words and between individual letters. Finally, use the "
":guilabel:`Blend mode` option to determine how your labels will mix with the"
" map features below them (see more about it in :ref:`blend-modes`)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:963
msgid ""
"The :guilabel:`Apply label text substitutes` option gives you ability to "
"specify a list of texts to substitute to texts in feature labels (e.g., "
"abbreviating street types). Replacement texts are thus used to display "
"labels in the map canvas. Users can also export and import lists of "
"substitutes to make reuse and sharing easier."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:972
msgid "Formatting tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:974
msgid ""
"In the :guilabel:`Formatting` tab, you can define a character for a line "
"break in the labels with the :guilabel:`Wrap on character` option. You can "
"also format the :guilabel:`Line Height` and the :guilabel:`alignment`. For "
"the latter, typical values are available (left, right, and center), plus "
"*Follow label placement* for point layers. When set to this mode, text "
"alignment for labels will be dependent on the final placement of the label "
"relative to the point. E.g., if the label is placed to the left of the "
"point, then the label will be right aligned, while if it is placed to the "
"right, it will be left aligned."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:984
msgid ""
"For line vector layers you can include :guilabel:`Line directions symbols` "
"to help determine the lines directions. They work particularly well when "
"used with the *curved* or *Parallel* placement options from the "
":guilabel:`Placement` tab. There are options to set the symbols position, "
"and to :guilabel:`reverse direction`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:990
msgid ""
"Use the |checkbox| :guilabel:`Formatted numbers` option to format numeric "
"labels. You can set the number of :guilabel:`Decimal places`. By default, 3 "
"decimal places will be used. Use the |checkbox| :guilabel:`Show plus sign` "
"if you want to show the plus sign in positive numbers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:998
msgid "Buffer tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1000
msgid ""
"To create a buffer around the labels, activate the |checkbox| "
":guilabel:`Draw text buffer` checkbox in the :guilabel:`Buffer` tab. You can"
" set the buffer's :guilabel:`Size`, :guilabel:`color`, and "
":guilabel:`Transparency`. The buffer expands from the label's outline , so, "
"if the |checkbox| :guilabel:`color buffer's fill` checkbox is activated, the"
" buffer interior is filled. This may be relevant when using partially "
"transparent labels or with non-normal blending modes, which will allow "
"seeing behind the label's text. Deactivating |checkbox| :guilabel:`color "
"buffer's fill` checkbox (while using totally transparent labels) will allow "
"you to create outlined text labels."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1014
msgid "Background tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1016
msgid ""
"In the :guilabel:`Background` tab, you can define with :guilabel:`Size X` "
"and :guilabel:`Size Y` the shape of your background. Use :guilabel:`Size "
"type` to insert an additional 'Buffer' into your background. The buffer size"
" is set by default here. The background then consists of the buffer plus the"
" background in :guilabel:`Size X` and :guilabel:`Size Y`. You can set a "
":guilabel:`Rotation` where you can choose between 'Sync with label', 'Offset"
" of label' and 'Fixed'. Using 'Offset of label' and 'Fixed', you can rotate "
"the background. Define an :guilabel:`Offset X,Y` with X and Y values, and "
"the background will be shifted. When applying :guilabel:`Radius X,Y`, the "
"background gets rounded corners. Again, it is possible to mix the background"
" with the underlying layers in the map canvas using the :guilabel:`Blend "
"mode` (see :ref:`blend-modes`)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1033
msgid "Shadow tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1035
msgid ""
"Use the :guilabel:`Shadow` tab for a user-defined :guilabel:`Drop shadow`. "
"The drawing of the background is very variable. Choose between 'Lowest label"
" component', 'Text', 'Buffer' and 'Background'. The :guilabel:`Offset` angle"
" depends on the orientation of the label. If you choose the |checkbox| "
":guilabel:`Use global shadow` checkbox, then the zero point of the angle is "
"always oriented to the north and doesn't depend on the orientation of the "
"label. You can influence the appearance of the shadow with the "
":guilabel:`Blur radius`. The higher the number, the softer the shadows. The "
"appearance of the drop shadow can also be altered by choosing a blend mode."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1067
msgid "Placement tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1069
msgid ""
"Choose the :guilabel:`Placement` tab for configuring label placement and "
"labeling priority. Note that the placement options differ according to the "
"type of vector layer, namely point, line or polygon."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1076
msgid "Placement for point layers"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1078
msgid ""
"With the |radioButtonOn| :guilabel:`Cartographic` placement mode, point "
"labels are generated with a better visual relationship with the point "
"feature, following ideal cartographic placement rules. Labels can be placed "
"at a set :guilabel:`Distance` either from the point feature itself or from "
"the bounds of the symbol used to represent the feature. The latter option is"
" especially useful when the symbol size isn't fixed, e.g. if it's set by a "
"data defined size or when using different symbols in a categorized renderer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1087
msgid "By default, placements are prioritised in the following order:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1089
msgid "top right"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1090
msgid "top left"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1091
msgid "bottom right"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1092
msgid "bottom left"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1093
msgid "middle right"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1094
msgid "middle left"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1095
msgid "top, slightly right"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1096
msgid "bottom, slightly left."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1098
msgid ""
"Placement priority can, however, be customized or set for an individual "
"feature using a data defined list of prioritised positions. This also allows"
" only certain placements to be used, so e.g. for coastal features you can "
"prevent labels being placed over the land."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1103
msgid ""
"The |radioButtonOn| :guilabel:`Around point` setting places the label in an "
"equal radius (set in :guilabel:`Distance`) circle around the feature. The "
"placement of the label can even be constrained using the "
":guilabel:`Quadrant` option."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1108
msgid ""
"With the |radioButtonOn| :guilabel:`Offset from point`, labels are placed at"
" a fixed offset from the point feature. You can select the "
":guilabel:`Quadrant` in which to place your label. You are also able to set "
"the :guilabel:`Offset X,Y` distances between the points and their labels and"
" can alter the angle of the label placement with the :guilabel:`Rotation` "
"setting. Thus, placement in a selected quadrant with a defined rotation is "
"possible."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1117
msgid "Placement for line layers"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1119
msgid ""
"Label options for line layers include |radioButtonOn| :guilabel:`Parallel`, "
"|radioButtonOff| :guilabel:`Curved` or |radioButtonOff| "
":guilabel:`Horizontal`. For the |radioButtonOn| :guilabel:`Parallel` and "
"|radioButtonOff| :guilabel:`Curved` options, you can set the position to "
"|checkbox| :guilabel:`Above line`, |checkbox| :guilabel:`On line` and "
"|checkbox| :guilabel:`Below line`. It's possible to select several options "
"at once. In that case, QGIS will look for the optimal label position. For "
"Parallel and curved placement options, you can also use the line orientation"
" for the position of the label. Additionally, you can define a "
":guilabel:`Maximum angle between curved characters` when selecting the "
"|radioButtonOff| :guilabel:`Curved` option (see "
"Figure_labels_placement_line)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1136
msgid "Label placement examples in lines"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1138
msgid ""
"For all three placement options, in :guilabel:`Repeat`, you can set up a "
"minimum distance for repeating labels. The distance can be in ``mm`` or in "
"``map units``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1143
msgid "Placement for polygon layers"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1145
msgid ""
"You can choose one of the following options for placing labels in polygons "
"(see figure_labels_placement_polygon_):"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1148
msgid "|radioButtonOn| :guilabel:`Offset from centroid`,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1149
msgid "|radioButtonOff| :guilabel:`Horizontal (slow)`,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1150
msgid "|radioButtonOff| :guilabel:`Around centroid`,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1151
msgid "|radioButtonOff| :guilabel:`Free (slow)`,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1152
msgid "|radioButtonOff| :guilabel:`Using perimeter`,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1153
msgid "and |radioButtonOff| :guilabel:`Using perimeter (curved)`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1155
msgid ""
"In the :guilabel:`Offset from centroid` settings you can specify if the "
"centroid is of the |radioButtonOn| :guilabel:`visible polygon` or "
"|radioButtonOff| :guilabel:`whole polygon`. That means that either the "
"centroid is used for the polygon you can see on the map or the centroid is "
"determined for the whole polygon, no matter if you can see the whole feature"
" on the map. You can place your label within a specific quadrant, and define"
" offset and rotation."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1163
msgid ""
"The :guilabel:`Around centroid` setting places the label at a specified "
"distance around the centroid. Again, you can define |radioButtonOn| "
":guilabel:`visible polygon` or |radioButtonOff| :guilabel:`whole polygon` "
"for the centroid."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1168
msgid ""
"With the :guilabel:`Horizontal (slow)` or :guilabel:`Free (slow)` options, "
"QGIS places at the best position either a horizontal or a rotated label "
"inside the polygon."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1172
msgid ""
"With the :guilabel:`Using perimeter` option, the label will be drawn next to"
" the polygon boundary. The label will behave like the parallel option for "
"lines. You can define a position and a distance for the label. For the "
"position, |checkbox| :guilabel:`Above line`, |checkbox| :guilabel:`On line`,"
" |checkbox| :guilabel:`Below line` and |checkbox| :guilabel:`Line "
"orientation dependent position` are possible. You can specify the distance "
"between the label and the polygon outline, as well as the repeat interval "
"for the label."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1181
msgid ""
"The :guilabel:`Using perimeter (curved)` option helps you draw the label "
"along the polygon boundary, using a curved labeling. In addition to the "
"parameters available with :guilabel:`Using perimeter` setting, you can set "
"the :guilabel:`Maximum angle between curved characters polygon`, either "
"inside or outside."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1192
msgid "Label placement examples in polygons"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1194
msgid ""
"In the :guilabel:`priority` section you can define the priority with which "
"labels are rendered for all three vector layer types (point, line, polygon)."
" This placement option interacts with the labels from other vector layers in"
" the map canvas. If there are labels from different layers in the same "
"location, the label with the higher priority will be displayed and the "
"others will be left out."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1204
msgid "Rendering tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1206
msgid ""
"In the :guilabel:`Rendering` tab, you can tune when the labels can be "
"rendered and their interaction with other labels and features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1209
msgid ""
"Under :guilabel:`Label options`, you find the :ref:`scale-based "
"<label_scaledepend>` and the :guilabel:`Pixel size-based` visibility "
"settings."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1212
msgid ""
"The :guilabel:`Label z-index` determines the order in which labels are "
"rendered, as well in relation with other feature labels in the layer (using "
"data-defined override expression), as with labels from other layers. Labels "
"with a higher z-index are rendered on top of labels (from any layer) with "
"lower z-index."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1217
msgid ""
"Additionally, the logic has been tweaked so that if 2 labels have matching "
"z-indexes, then:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1220
msgid ""
"if they are from the same layer, the smaller label will be drawn above the "
"larger label"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1221
msgid ""
"if they are from different layers, the labels will be drawn in the same "
"order as their layers themselves (ie respecting the order set in the map "
"legend)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1224
msgid ""
"Note that this setting doesn't make labels to be drawn below the features "
"from other layers, it just controls the order in which labels are drawn on "
"top of all the layer's features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1228
msgid ""
"While rendering labels and in order to display readable labels, QGIS "
"automatically evaluates the position of the labels and can hide some of them"
" in case of collision. You can however choose to |checkbox| :guilabel:`Show "
"all labels for this layer (including colliding labels)` in order to manually"
" fix their placement."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1234
msgid ""
"With data-defined expressions in :guilabel:`Show label` and "
":guilabel:`Always Show` you can fine tune which labels should be rendered."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1238
msgid ""
"Under :guilabel:`Feature options`, you can choose to :guilabel:`label every "
"part of a multi-part feature` and :guilabel:`limit the number of features to"
" be labeled`. Both line and polygon layers offer the option to set a minimum"
" size for the features to be labeled, using :guilabel:`Suppress labeling of "
"features smaller than`. For polygon features, you can also filter the labels"
" to show according to whether they completely fit within the feature or not."
" For line features, you can choose to :guilabel:`Merge connected lines to "
"avoid duplicate labels`, rendering a quite airy map in conjunction with the "
":guilabel:`Distance` or :guilabel:`Repeat` options in Placement tab."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1250
msgid ""
"From the :guilabel:`Obstacles` frame, you can manage the covering relation "
"between labels and features. Activate the |checkbox| :guilabel:`Discourage "
"labels from covering features` option to decide whether features of the "
"layer should act as obstacles for any label (including labels from other "
"features in the same layer). An obstacle is a feature QGIS tries as far as "
"possible to not place labels over. Instead of the whole layer, you can "
"define a subset of features to use as obstacles, using the |dataDefined| "
":sup:`data-defined override` control next to the option."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1258
msgid ""
"The |slider| priority control slider for obstacles allows you to make labels"
" prefer to overlap features from certain layers rather than others. A **Low "
"weight** obstacle priority means that features of the layer are less "
"considered as obstacles and thus more likely to be covered by labels. This "
"priority can also be data-defined, so that within the same layer, certain "
"features are more likely to be covered than others."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1265
msgid ""
"For polygon layers, you can choose the type of obstacle features could be by"
" minimising the labels placement:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1268
msgid ""
"**over the feature's interior**: avoids placing labels over the interior of "
"the polygon (prefers placing labels totally outside or just slightly inside "
"the polygon)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1271
msgid ""
"or **over the feature's boundary**: avoids placing labels over boundary of "
"the polygon (prefers placing labels outside or completely inside the "
"polygon). E.g., it can be useful for regional boundary layers, where the "
"features cover an entire area. In this case, it's impossible to avoid "
"placing labels within these features, and it looks much better to avoid "
"placing them over the boundaries between features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1281
msgid "Rule-based labeling"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1283
msgid ""
"With rule-based labeling multiple label configurations can be defined and "
"applied selectively on the base of expression filters and scale range, as in"
" :ref:`Rule-based rendering <rule_based_rendering>`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1287
msgid ""
"To create a rule, select the **Rule-based labeling** option in the main "
"drop-down list from the :guilabel:`Labels` tab and click the |signPlus| "
"button at the bottom  of the dialog. Then fill the new dialog with a "
"description and an expression to filter features. You can also set a "
":ref:`scale range <label_scaledepend>` in which the label rule should be "
"applied. The other options available in this dialog are the :ref:`common "
"settings <showlabels>` seen beforehand."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1300
msgid "Rule settings"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1302
msgid ""
"A summary of existing rules is shown in the main dialog (see "
"figure_labels_rule_based_). You can add multiple rules, reorder or imbricate"
" them with a drag-and-drop. You can as well remove them with the |signMinus|"
" button or edit them with |projectProperties| button or a double-click."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1312
msgid "Rule based labeling panel"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1320
msgid "Define labels based on expressions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1322
msgid ""
"Whether you choose simple or rule-based labeling type, QGIS allows using "
"expressions to label features. Click the |expression| icon near the "
":guilabel:`Label with` drop-down list in the |labeling| :guilabel:`Labels` "
"tab of the properties dialog. In figure_labels_expression_, you see a sample"
" expression to label the alaska regions with name and area size, based on "
"the field 'NAME_2', some descriptive text, and the function ``$area`` in "
"combination with ``format_number()`` to make it look nicer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1335
msgid "Using expressions for labeling"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1337
msgid ""
"Expression based labeling is easy to work with. All you have to take care of"
" is that:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1340
msgid ""
"You need to combine all elements (strings, fields, and functions) with a "
"string concatenation function such as ``concat``, ``+`` or ``||``. Be aware "
"that in some situations (when null or numeric value are involved) not all of"
" these tools will fit your need."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1344
msgid "Strings are written in 'single quotes'."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1345
msgid "Fields are written in \"double quotes\" or without any quote."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1347
msgid "Let's have a look at some examples:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1349
msgid ""
"Label based on two fields 'name' and 'place' with a comma as separator::"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1353
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1365
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1376
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1391
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1404
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1416
msgid "Returns::"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1357
msgid "Label based on two fields 'name' and 'place' with other texts:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1369
msgid ""
"Label based on two fields 'name' and 'place' with other texts combining "
"different concatenation functions:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1380
msgid "Or, if the field 'place' is NULL, returns::"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1384
msgid ""
"Multi-line label based on two fields 'name' and 'place' with a descriptive "
"text:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1396
msgid ""
"Label based on a field and the $area function to show the place's name and "
"its rounded area size in a converted unit:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1408
msgid ""
"Create a CASE ELSE condition. If the population value in field `population` "
"is <= 50000 it is a town, otherwise it is a city:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1420
msgid ""
"As you can see in the expression builder, you have hundreds of functions "
"available to create simple and very complex expressions to label your data "
"in QGIS. See :ref:`vector_expressions` chapter for more information and "
"examples on expressions."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1430
msgid "Using data-defined override for labeling"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1432
msgid ""
"With the |dataDefined| :sup:`Data defined override` functions, the settings "
"for the labeling are overridden by entries in the attribute table. It can be"
" used to set values for most of the labeling options described above. See "
"the widget's description and manipulation in :ref:`data_defined` section."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1440
msgid "The Label Toolbar"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1442
msgid ""
"The :guilabel:`Label Toolbar` provides some tools to manipulate |labeling| "
":ref:`label <vector_labels_tab>` or |diagram| :ref:`diagram <sec_diagram>` "
"properties, but only if the corresponding data-defined option is indicated "
"(otherwise, buttons are disabled). Layer might also need to be in edit mode."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1452
msgid "The Label toolbar"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1454
msgid ""
"While for readability, ``label`` has been used below to describe the Label "
"toolbar, note that when mentioned in their name, the tools work almost the "
"same way with diagrams:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1458
msgid ""
"|pinLabels| :sup:`Pin/Unpin Labels And Diagrams` that has data-defined "
"position. By clicking or draging an area, you pin label(s). If you click or "
"drag an area holding :kbd:`Shift`, label(s) are unpinned. Finally, you can "
"also click or drag an area holding :kbd:`Ctrl` to toggle the pin status of "
"label(s)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1463
msgid ""
"|showPinnedLabels| :sup:`Highlight Pinned Labels And Diagrams`. If the "
"vector layer of the label is editable, then the highlighting is green, "
"otherwise it's blue."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1466
msgid ""
"|moveLabel| :sup:`Move Label And Diagram` that has data-defined position. "
"You just have to drag the label to the desired place."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1468
msgid ""
"|showHideLabels| :sup:`Show/Hide Labels And Diagrams` that has data-defined "
"visbility. If you click or drag an area holding :kbd:`Shift`, then label(s) "
"are hidden. When a label is hidden, you just have to click or drag an area "
"around the feature's point to restore its visibility."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1472
msgid ""
"|rotateLabel| :sup:`Rotate Label`. Click the label and move around and you "
"get the text rotated."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1474
msgid ""
"|changeLabelProperties| :sup:`Change Label`. It opens a dialog to change the"
" clicked label properties; it can be the label itself, its coordinates, "
"angle, font, size... as long as this property has been mapped to a field."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1478
msgid "**Label tools overwrite current field values**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1480
msgid ""
"Using the :guilabel:`Label toolbar` to customize the labeling actually "
"writes the new value of the property in the mapped field. Hence, be careful "
"to not inadvertently replace data you may need later!"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1486
msgid "Customize the labels from the map canvas"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1488
msgid ""
"Combined with the :guilabel:`Label Toolbar`, the data defined override "
"setting helps you manipulate labels in the map canvas (move, edit, rotate). "
"We now describe an example using the data-defined override function for the "
"|moveLabel|:sup:`Move label` function (see figure_labels_data_defined_)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1493
msgid "Import :file:`lakes.shp` from the QGIS sample dataset."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1494
msgid ""
"Double-click the layer to open the Layer Properties. Click on "
":guilabel:`Labels` and :guilabel:`Placement`. Select |radioButtonOn| "
":guilabel:`Offset from centroid`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1496
msgid ""
"Look for the :guilabel:`Data defined` entries. Click the |dataDefined| icon "
"to define the field type for the :guilabel:`Coordinate`. Choose ``xlabel`` "
"for X and ``ylabel`` for Y. The icons are now highlighted in yellow."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1505
msgid "Labeling of vector polygon layers with data-defined override"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1508
msgid ""
"Set editable the layer using the |toggleEditing| :sup:`Toggle Editing` "
"button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1509
msgid ""
"Go to the Label toolbar and click the |moveLabel| icon. Now you can shift "
"the label manually to another position (see figure_labels_move_). The new "
"position of the label is saved in the ``xlabel`` and ``ylabel`` columns of "
"the attribute table."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1513
msgid ""
"Using :ref:`geometry_generator_symbol` with the expression below, you can "
"also add a linestring symbol layer to connect each lake to its moved label:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1526
msgid "Moved labels"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1532
msgid "Fields Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1534
msgid ""
"|attributes| The :guilabel:`Fields` tab helps you organize the fields of the"
" selected dataset and the way you can interact with the feature's "
"attributes. The buttons |newAttribute| :sup:`New field` and "
"|deleteAttribute| :sup:`Delete field` can be used when the dataset is in "
"|toggleEditing| :sup:`Editing mode`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1540
msgid ""
"You can rename fields by double-clicking in the fields name (note that you "
"should switch to editing mode to edit the field name). This is only "
"supported for data providers like PostgreSQL, Oracle, Memory layer and some "
"OGR layer depending the OGR data format and version."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1545
msgid ""
"You can define some alias to display human readable fields in the feature "
"form or the attribute table. In this case, you don't need to switch to "
"editing mode. Alias are saved in project file."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1549
msgid ""
"Comments can be added by clicking in the comment field of the column but if "
"you are using a PostgreSQL layer, comment of the column could be the one in "
"the PostgreSQL table if set. Comments are saved in the QGIS project file as "
"for the alias."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1554
msgid ""
"The dialog also lists read-only characteristics of the field such as its "
"``type``, ``type name``, ``length`` and ``precision``. When serving the "
"layer as ``WMS`` or ``WFS``, you can also check here which fields could be "
"retrieved."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1563
msgid "Field properties tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1570
msgid "Configure the field behavior"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1572
msgid ""
"Within the :guilabel:`Fields` tab, you also find an **Edit widget** column. "
"This column can be used to define values or a range of values that are "
"allowed to be added to the specific attribute table column. It also helps to"
" set the type of widget used to fill or display values of the field, in the "
"attribute table or the feature form. If you click on the **[Edit widget]** "
"button, a dialog opens, where you can define different widgets."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1585
msgid "Dialog to select an edit widget for an attribute column"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1591
msgid "Common settings"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1593
msgid ""
"Regardless the type of widget applied to the field, there are some common "
"properties you can set to control whether and how a field can be edited:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1596
msgid ""
"**Editable**: uncheck this to set the field read-only (not manually "
"modifiable) when the layer is in edit mode. Note that checking this setting "
"doesn't override any edit limitation from the provider."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1599
msgid ""
"**Label on top**: places the field name above or beside the widget in the "
"feature form"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1601
msgid ""
"**Default value**: for new features, populates by default the field with the"
" same value or an expression-based one. For example, you can use "
"``maximum(\"field\")+1`` to generate a field that increments by 1 for each "
"new feature. Variables can also be used in default value expressions, making"
" it easier to e.g. insert a user's name, current datetime, project path... A"
" preview of the default value is displayed"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1607
msgid ""
"**Constraints**: you can constrain the value in the field. This constraint "
"can be:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1610
msgid "|checkbox| :guilabel:`Not null`: force the user to provide a value"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1611
msgid ""
"based on a custom expression: e.g. ``regexp_match(col0,'A-Za-z')`` to ensure"
" that the value of the field *col0* has only alphabetical letter."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1614
msgid ""
"A short description of the constraint can be added and will be displayed at "
"the top of the form as a warning message when the value supplied does not "
"match the constraint."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1621
msgid "Edit widgets"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1623
msgid "The available widgets are:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1625
msgid ""
"**Checkbox**: Displays a checkbox, and you can define what attribute is "
"added to the column when the checkbox is activated or not."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1630
msgid ""
"**Color**: Displays a color button allowing user to choose a color from the "
"color dialog window."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1632
msgid ""
"**Date/Time**: Displays a line field which can open a calendar widget to "
"enter a date, a time or both. Column type must be text. You can select a "
"custom format, pop-up a calendar, etc."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1635
msgid ""
"**Enumeration**: Opens a combo box with values that can be used within the "
"columns type. This is currently only supported by the PostgreSQL provider."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1637
msgid ""
"**External Resource**: Uses a \"Open file\" dialog to store file path in a "
"relative or absolute mode. It can also be used to display a hyperlink (to "
"document path), a picture or a web page."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1640
msgid ""
"**File Name**: Simplifies the selection by adding a file chooser dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1641
msgid ""
"**Hidden**: A hidden attribute column is invisible. The user is not able to "
"see its contents."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1645
msgid ""
"**Range**: Allows you to set numeric values from a specific range. The edit "
"widget can be either a slider or a spin box."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1647
msgid ""
"**Relation Reference**: This widget lets you embed the feature form of the "
"referenced layer on the feature form of the actual layer. See "
":ref:`vector_relations`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1650
msgid ""
"**Text Edit** (default): This opens a text edit field that allows simple "
"text or multiple lines to be used. If you choose multiple lines you can also"
" choose html content."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1653
msgid ""
"**Unique Values**: You can select one of the values already used in the "
"attribute table. If 'Editable' is activated, a line edit is shown with "
"autocompletion support, otherwise a combo box is used."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1658
msgid ""
"**Value Map**: A combo box with predefined items. The value is stored in the"
" attribute, the description is shown in the combo box. You can define values"
" manually or load them from a layer or a CSV file."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1661
msgid ""
"**Value Relation**: Offers values from a related table in a combobox. You "
"can select layer, key column and value column. Several options are available"
" to change the standard behaviours: allow null value, order by value, allow "
"multiple selections and use of autocompleter. The forms will display either "
"a drop-down list or a line edit field when completer checkbox is enabled."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1666
msgid ""
"**Web View**: Field contains a URL. The width and height of the field is "
"variable."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1671
msgid ""
"QGIS has an advanced 'hidden' option to define your own field widget using "
"python and add it to this impressive list of widgets. It is tricky but it is"
" very well explained in following excellent blog that explains how to create"
" a real time validation widget that can be used like described widgets. See "
"http://blog.vitu.ch/10142013-1847/write-your-own-qgis-form-elements"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1678
msgid "**Relative Path in widgets**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1680
msgid ""
"If the path which is selected with the file browser is located in the same "
"directory as the :file:`.qgs` project file or below, paths are converted to "
"relative paths. This increases portability of a :file:`.qgs` project with "
"multimedia information attached. This is enabled only for File Name, Photo "
"and Web View at this moment."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1690
msgid "Customize a form for your data"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1692
msgid ""
"By default, when you click on a feature with the |identify| :sup:`Identify "
"Features` tool or switch the attribute table to the *form view* mode, QGIS "
"displays a form with tabulated textboxes (one per field). This rendering is "
"the result of the default ``Autogenerate`` value of the "
":menuselection:`Layer properties --> Fields --> Attribute editor layout` "
"setting. Thanks to the :ref:`widget setting <configure_field>`, you can "
"improve this dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1699
msgid ""
"You can furthermore define built-in forms (see figure_fields_form_), e.g. "
"when you have objects with many attributes, you can create an editor with "
"several tabs and named groups to present the attribute fields."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1709
msgid "Resulting built-in form with tabs and named groups"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1714
msgid "The drag and drop designer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1716
msgid ""
"Choose ``Drag and drop designer`` from the :guilabel:`Attribute editor "
"layout` combobox to layout the features form within QGIS. Then, drag and "
"drop rows from the :guilabel:`Fields` frame to the :guilabel:`Label` panel "
"to have fields added to your custom form."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1721
msgid ""
"You can also use categories (tab or group frames) to better structure the "
"form. The first step is to use the |signPlus| icon to create a tab in which "
"fields and groups will be displayed (see figure_fields_layout_). You can "
"create as many categories as you want. The next step will be to assign to "
"each category the relevant fields, using the |arrowRight| icon. You'd need "
"to select the targeted category beforehand. You can use the same fields many"
" times."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1737
msgid ""
"You can configure tabs or groups with a double-click. QGIS opens a form in "
"which you can:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1740
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1756
msgid "choose to hide or show the item label"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1741
msgid "rename the category"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1742
msgid ""
"set over how many columns the fields under the category should be "
"distributed"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1743
msgid ""
"enter an expression to control the category visibility. The expression will "
"be re-evaluated everytime values in the form change and the tab or groupbox "
"shown/hidden accordingly."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1746
msgid "show the category as a group box (only available for tabs)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1748
msgid ""
"With a double-click on a field label, you can also specify whether the label"
" of its widget should be visible or not in the form."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1751
msgid ""
"In case the layer is involved in ``one to many relations`` (see "
":ref:`vector_relations`), referencing layers are listed in the "
":guilabel:`Relations` frame and their form can be embedded in the current "
"layer form by drag-and-drop. Like the other items, double-click the relation"
" label to configure some options:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1757
msgid "show the link button"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1758
msgid "show the unlink button"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1761
msgid "Provide an ui-file"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1763
msgid ""
"The ``Provide ui-file`` option allows you to use complex dialogs made with "
"Qt-Designer. Using a UI-file allows a great deal of freedom in creating a "
"dialog. Note that, in order to link the graphical objects (textbox, "
"combobox...) to the layer's fields, you need to give them the same name."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1768
msgid "Use the :guilabel:`Edit UI` to define the path to the file to use."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1770
msgid ""
"For detailed information, see http://nathanw.net/2011/09/05/qgis-tips-"
"custom-feature-forms-with-python-logic/."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1774
msgid "Enhance your form with custom functions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1776
msgid ""
"QGIS forms can have a Python function that is called when the dialog is "
"opened. Use this function to add extra logic to your dialogs. The form code "
"can be specified in three different ways:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1780
msgid ""
"``load from the environment``: use a function, for example in "
":file:`startup.py` or from an installed plugin)"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1782
msgid ""
"``load from an external file``: a file chooser will appear in that case to "
"allow you to select a Python file from your filesystem"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1784
msgid ""
"``provide code in this dialog``: a Python editor will appear where you can "
"directly type the function to use."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1787
msgid ""
"In all cases you must enter the name of the function that will be called "
"(``open`` in the example below)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1790
msgid "An example is (in module MyForms.py):"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1798
msgid "Reference in Python Init Function like so: ``open``"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1805
msgid "Joins Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1807
msgid ""
"|join| The :guilabel:`Joins` tab allows you to join a loaded attribute table"
" to a loaded vector layer. After clicking |signPlus|, the :guilabel:`Add "
"vector join` dialog appears. As key columns, you have to define a join layer"
" you want to connect with the target vector layer. Then, you have to specify"
" the join field that is common to both the join layer and the target layer. "
"Now you can also specify a subset of fields from the joined layer based on "
"the checkbox |checkbox| :guilabel:`Choose which fields are joined`. As a "
"result of the join, all information from the join layer and the target layer"
" are displayed in the attribute table of the target layer as joined "
"information. If you specified a subset of fields only these fields are "
"displayed in the attribute table of the target layer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1821
msgid ""
"QGIS currently has support for joining non-spatial table formats supported "
"by OGR (e.g., CSV, DBF and Excel), delimited text and the PostgreSQL "
"provider (see figure_joins_)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1830
msgid "Join an attribute table to an existing vector layer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1832
msgid "Additionally, the add vector join dialog allows you to:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1836
msgid "|checkbox| :guilabel:`Choose which fields are joined`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1837
msgid "Create a |checkbox| :guilabel:`Custom field name prefix`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1843
msgid "Diagrams Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1845
msgid ""
"|diagram| The :guilabel:`Diagrams` tab allows you to add a graphic overlay "
"to a vector layer (see figure_diagrams_attributes_)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1848
msgid "The current core implementation of diagrams provides support for:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1850
msgid ""
"**pie charts**, a circular statistical graphic divided into slices to "
"illustrate numerical proportion. The arc length of each slice is "
"proportional to the quantity it represents,"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1853
msgid ""
"**text diagrams**, a horizontaly divided circle showing statistics values "
"inside"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1854
msgid "and **histograms**."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1856
msgid "**Switch quickly between types of diagrams**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1858
msgid ""
"Given that the settings are almost common to the different types of diagram,"
" when designing your diagram, you can easily change the diagram type and "
"check which one is more appropriate to your data without any loss."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1862
msgid ""
"For each type of diagram, the properties are divided into several tabs:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1864
msgid ":ref:`Attributes <diagram_attributes>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1865
msgid ":ref:`Appearance <diagram_appearance>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1866
msgid ":ref:`Size <diagram_size>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1867
msgid ":ref:`Placement <diagram_placement>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1868
msgid ":ref:`Options <diagram_options>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1869
msgid ":ref:`Legend <diagram_legend>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1874
msgid "Attributes"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1876
msgid ""
":guilabel:`Attributes` defines which variables to display in the diagram. "
"Use |signPlus| :sup:`add item` button to select the desired fields into the "
"'Assigned Attributes' panel. Generated attributes with "
":ref:`vector_expressions` can also be used."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1881
msgid ""
"You can move up and down any row with click and drag, sorting how attributes"
" are displayed. You can also change the label in the 'Legend' column or the "
"attribute color by double-clicking the item."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1885
msgid ""
"This label is the default text displayed in the legend of the print composer"
" or of the layer tree."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1893
msgid "Diagram properties  - Attributes tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1898
msgid "Appearance"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1900
msgid ""
":guilabel:`Appearance` defines how the diagram looks like. It provides "
"general settings that do not interfere with the statistic values such as:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1903
msgid "the graphic transparency, its outline width and color"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1904
msgid "the width of the bar in case of histogram"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1905
msgid ""
"the circle background color in case of text diagram, and the font used for "
"texts"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1906
msgid ""
"the orientation of the left line of the first slice represented in pie "
"chart. Note that slices are displayed clockwise."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1909
msgid "In this tab, you can also manage the diagram visibility:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1911
msgid ""
"by removing diagrams that overlap others or :guilabel:`Show all diagrams` "
"even if they overlap each other"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1913
msgid ""
"by selecting a field with :guilabel:`Data defined visibility` to precisely "
"tune which diagrams should be rendered"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1915
msgid "by setting the :ref:`scale visibility <label_scaledepend>`"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1922
msgid "Diagram properties - Appearance tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1927
msgid "Size"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1929
msgid ""
":guilabel:`Size` is the main tab to set how the selected statistics are "
"represented. The diagram size units can be 'Map Units' or 'Millimeters'. You"
" can use :"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1933
msgid ""
":guilabel:`Fixed size`, an unique size to represent the graphic of all the "
"features, except when displaying histogram"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1935
msgid ""
"or :guilabel:`Scaled size`, based on an expression using layer attributes."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1944
msgid "Diagram properties - Size tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1951
msgid ""
":guilabel:`Placement` helps to define diagram position. According to the "
"layer geometry type, it offers different options for the placement:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1954
msgid ""
"'Over the point' or 'Around the point' for point geometry. The latter "
"variable requires a radius to follow."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1956
msgid ""
"'Over the line' or 'Around the line' for line geometry. Like point feature, "
"the last variable requires a distance to respect and user can specify the "
"diagram placement relative to the feature ('above', 'on' and/or 'below' the "
"line) It's possible to select several options at once. In that case, QGIS "
"will look for the optimal position of the diagram. Remember that here you "
"can also use the line orientation for the position of the diagram."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1962
msgid ""
"'Over the centroid', 'Around the centroid' (with a distance set), "
"'Perimeter' and anywhere 'Inside polygon' are the options for polygon "
"features."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1965
msgid ""
"The diagram can also be placed using feature data by filling the ``X`` and "
"``Y`` fields with an attribute of the feature."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1968
msgid ""
"The placement of the diagrams can interact with the labeling, so you can "
"detect and solve position conflicts between diagrams and labels by setting "
"the **Priority** slider or the **z-index** value."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1977
msgid "Vector properties dialog with diagram properties, Placement tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1982
msgid "Options"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1984
msgid ""
"The :guilabel:`Options` tab has settings only in case of histogram. You can "
"choose whether the bar orientation should be 'Up', 'Down', 'Right' and "
"'Left'."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1992
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2495
msgid "Legend"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1994
msgid ""
"From the :guilabel:`Legend` tab, you can choose to display items of the "
"diagram in the :ref:`label_legend`, besides the layer symbology. It can be:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1997
msgid ""
"the represented attributes: color and legend text set in "
":guilabel:`Attributes` tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1998
msgid "and if applicable, the diagram size, whose symbol you can customize."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2000
msgid ""
"When set, the diagram legend items are also available in the print composer "
"legend, besides the layer symbology."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2005
msgid "Case Study"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2007
msgid ""
"We will demonstrate an example and overlay on the Alaska boundary layer a "
"text diagram showing temperature data from a climate vector layer. Both "
"vector layers are part of the QGIS sample dataset (see section "
":ref:`label_sampledata`)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2012
msgid ""
"First, click on the |addOgrLayer| :sup:`Load Vector` icon, browse to the "
"QGIS sample dataset folder, and load the two vector shape layers "
":file:`alaska.shp` and :file:`climate.shp`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2017
msgid ""
"Click on the :guilabel:`Diagrams` tab and from the :guilabel:`Diagram type` "
"|selectString| combo box, select 'Text diagram'."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2019
msgid ""
"In the :guilabel:`Appearance` tab, we choose a light blue as background "
"color, and in the :guilabel:`Size` tab, we set a fixed size to 18 mm."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2021
msgid ""
"In the :guilabel:`Position` tab, placement could be set to 'Around Point'."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2022
msgid ""
"In the diagram, we want to display the values of the three columns "
"``T_F_JAN``, ``T_F_JUL`` and ``T_F_MEAN``. So, in the :guilabel:`Attributes`"
" tab first select ``T_F_JAN`` and click the |signPlus| button, then repeat "
"with ``T_F_JUL`` and finally ``T_F_MEAN``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2026
msgid "Now click **[Apply]** to display the diagram in the QGIS main window."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2027
msgid ""
"You can adapt the chart size in the :guilabel:`Size` tab. Activate the "
"|radioButtonOn| :guilabel:`Scaled size` and set the size of the diagrams on "
"the basis of the :guilabel:`maximum value` of an attribute and the "
":guilabel:`Size` option. If the diagrams appear too small on the screen, you"
" can activate the |checkbox| :guilabel:`Increase size of small diagrams` "
"checkbox and define the minimum size of the diagrams."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2034
msgid ""
"Change the attribute colors by double clicking on the color values in the "
":guilabel:`Assigned attributes` field. Figure_diagrams_mapped_ gives an idea"
" of the result."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2037
msgid "Finally, click **[Ok]**."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2045
msgid "Diagram from temperature data overlayed on a map"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2047
msgid ""
"Remember that in the :guilabel:`Position` tab, a |checkbox| :guilabel:`Data "
"defined position` of the diagrams is possible. Here, you can use attributes "
"to define the position of the diagram. You can also set a scale-dependent "
"visibility in the :guilabel:`Appearance` tab."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2052
msgid ""
"The size and the attributes can also be an expression. Use the |expression| "
"button to add an expression. See :ref:`vector_expressions` chapter for more "
"information and example."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2057
msgid "Using data-defined override"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2059
msgid ""
"As mentioned above, you can use some custom data-defined to tune the "
"diagrams rendering:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2062
msgid ""
"position in :guilabel:`Placement` tab by filling ``X`` and ``Y`` fields"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2063
msgid ""
"visibility in :guilabel:`Appearance` tab by filling the ``Visibility`` field"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2065
msgid "See :ref:`data_defined_labeling` for more information."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2071
msgid "Actions Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2073
msgid ""
"|action| QGIS provides the ability to perform an action based on the "
"attributes of a feature. This can be used to perform any number of actions, "
"for example, running a program with arguments built from the attributes of a"
" feature or passing parameters to a web reporting tool."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2083
msgid "Overview action dialog with some sample actions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2085
msgid ""
"Actions are useful when you frequently want to run an external application "
"or view a web page based on one or more values in your vector layer. They "
"are divided into six types and can be used like this:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2089
msgid "Generic, Mac, Windows and Unix actions start an external process."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2090
msgid "Python actions execute a Python expression."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2091
msgid "Generic and Python actions are visible everywhere."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2092
msgid ""
"Mac, Windows and Unix actions are visible only on the respective platform "
"(i.e., you can define three 'Edit' actions to open an editor and the users "
"can only see and execute the one 'Edit' action for their platform to run the"
" editor)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2096
msgid ""
"There are several examples included in the dialog. You can load them by "
"clicking on **[Create default actions]**. To edit any of the examples, "
"double-click its row. One example is performing a search based on an "
"attribute value. This concept is used in the following discussion."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2106
msgid "Defining Actions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2108
msgid ""
"To define an attribute action, open the vector :guilabel:`Layer Properties` "
"dialog and click on the :guilabel:`Actions` tab. In the :guilabel:`Actions` "
"tab, click the |signPlus| :sup:`Add a new action` to open the "
":guilabel:`Edit Action` dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2113
msgid ""
"Select the action :guilabel:`Type` and provide a descriptive name for the "
"action. The action itself must contain the name of the application that will"
" be executed when the action is invoked. You can add one or more attribute "
"field values as arguments to the application. When the action is invoked, "
"any set of characters that start with a ``%`` followed by the name of a "
"field will be replaced by the value of that field. The special characters "
"``%%`` will be replaced by the value of the field that was selected from the"
" identify results or attribute table (see using_actions_ below). Double "
"quote marks can be used to group text into a single argument to the program,"
" script or command. Double quotes will be ignored if preceded by a "
"backslash."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2125
msgid ""
"If you have field names that are substrings of other field names (e.g., "
"``col1`` and ``col10``), you should indicate that by surrounding the field "
"name (and the \\% character) with square brackets (e.g., ``[%col10]``). This"
" will prevent the ``%col10`` field name from being mistaken for the "
"``%col1`` field name with a ``0`` on the end. The brackets will be removed "
"by QGIS when it substitutes in the value of the field. If you want the "
"substituted field to be surrounded by square brackets, use a second set like"
" this: ``[[%col10]]``."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2133
msgid ""
"Using the :guilabel:`Identify Features` tool, you can open the "
":guilabel:`Identify Results` dialog. It includes a *(Derived)* item that "
"contains information relevant to the layer type. The values in this item can"
" be accessed in a similar way to the other fields by proceeding the derived "
"field name with ``(Derived).``. For example, a point layer has an ``X`` and "
"``Y`` field, and the values of these fields can be used in the action with "
"``%(Derived).X`` and ``%(Derived).Y``. The derived attributes are only "
"available from the :guilabel:`Identify Results` dialog box, not the "
":guilabel:`Attribute Table` dialog box."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2145
msgid "Two example actions are shown below:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2150
msgid ""
"In the first example, the web browser konqueror is invoked and passed a URL "
"to open. The URL performs a Google search on the value of the ``nam`` field "
"from our vector layer. Note that the application or script called by the "
"action must be in the path, or you must provide the full path. To be "
"certain, we could rewrite the first example as: ``/opt/kde3/bin/konqueror "
"http://www.google.com/search?q=%nam``. This will ensure that the konqueror "
"application will be executed when the action is invoked."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2159
msgid ""
"The second example uses the \\%\\% notation, which does not rely on a "
"particular field for its value. When the action is invoked, the \\%\\% will "
"be replaced by the value of the selected field in the identify results or "
"attribute table."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2168
msgid "Using Actions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2170
msgid ""
"Actions can be invoked from either the :guilabel:`Identify Results` dialog, "
"an :guilabel:`Attribute Table` dialog or from :guilabel:`Run Feature Action`"
" (recall that these dialogs can be opened by clicking |identify| "
":sup:`Identify Features` or |openTable| :sup:`Open Attribute Table` or "
"|actionRun| :sup:`Run Feature Action`). To invoke an action, right click on "
"the feature and choose the action from the pop-up menu (they should have "
"been enabled to be displayed in the attribute table). Actions are listed in "
"the popup menu by the name you assigned when defining the action. Click on "
"the action you wish to invoke."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2185
msgid ""
"Here is another example that pulls data out of a vector layer and inserts it"
" into a file using bash and the ``echo`` command (so it will only work on "
"|nix| or perhaps |osx|). The layer in question has fields for a species name"
" ``taxon_name``, latitude ``lat`` and longitude ``long``. We would like to "
"be able to make a spatial selection of localities and export these field "
"values to a text file for the selected record (shown in yellow in the QGIS "
"map area). Here is the action to achieve this:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2211
msgid ""
"As an exercise, we can create an action that does a Google search on the "
"``lakes`` layer. First, we need to determine the URL required to perform a "
"search on a keyword. This is easily done by just going to Google and doing a"
" simple search, then grabbing the URL from the address bar in your browser. "
"From this little effort, we see that the format is "
"http://google.com/search?q=qgis, where ``QGIS`` is the search term. Armed "
"with this information, we can proceed:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2219
msgid ""
"Open the :guilabel:`Layer Properties` dialog by double-clicking on the layer"
" in the legend, or right-click and choose :menuselection:`Properties` from "
"the pop-up menu."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2222
msgid "Click on the :guilabel:`Actions` tab."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2223
msgid "click |signPlus| :sup:`Add a new action`."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2228
msgid ""
"Following the name of the external application, add the URL used for doing a"
" Google search, up to but not including the search term: "
"``http://google.com/search?q=``"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2233
msgid ""
"Click on the drop-down box containing the field names for the ``lakes`` "
"layer. It's located just to the left of the **[Insert]** button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2235
msgid "From the drop-down box, select 'NAMES' and click **[Insert]**."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2239
msgid "To finalize and add the action, click the **[OK]** button."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2246
msgid "Edit action dialog configured with the example"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2248
msgid ""
"This completes the action, and it is ready to use. The final text of the "
"action should look like this:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2264
msgid "Select feature and choose action"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2266
msgid ""
"When we click on the action, it brings up Firefox and navigates to the URL "
"http://www.google.com/search?q=Tustumena. It is also possible to add further"
" attribute fields to the action. Therefore, you can add a ``+`` to the end "
"of the action text, select another field and click on **[Insert Field]**. In"
" this example, there is just no other field available that would make sense "
"to search for."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2273
msgid ""
"You can define multiple actions for a layer, and each will show up in the "
":guilabel:`Identify Results` dialog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2277
msgid ""
"You can also invoke actions from the attribute table by selecting a row and "
"right-clicking, then choosing the action from the pop-up menu."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2281
msgid ""
"There are all kinds of uses for actions. For example, if you have a point "
"layer containing locations of images or photos along with a file name, you "
"could create an action to launch a viewer to display the image. You could "
"also use actions to launch web-based reports for an attribute field or "
"combination of fields, specifying them in the same way we did in our Google "
"search example."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2288
msgid ""
"We can also make more complex examples, for instance, using **Python** "
"actions."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2291
msgid ""
"Usually, when we create an action to open a file with an external "
"application, we can use absolute paths, or eventually relative paths. In the"
" second case, the path is relative to the location of the external program "
"executable file. But what about if we need to use relative paths, relative "
"to the selected layer (a file-based one, like a shapefile or SpatiaLite)? "
"The following code will do the trick:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2312
msgid ""
"We just have to remember that the action is one of type *Python* and the "
"*command* and *imagerelpath* variables must be changed to fit our needs."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2315
msgid ""
"But what about if the relative path needs to be relative to the (saved) "
"project file? The code of the Python action would be:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2329
msgid ""
"Another Python action example is the one that allows us to add new layers to"
" the project. For instance, the following examples will add to the project "
"respectively a vector and a raster. The names of the files to be added to "
"the project and the names to be given to the layers are data driven "
"(*filename* and *layername* are column names of the table of attributes of "
"the vector where the action was created):"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2342
msgid "To add a raster (a TIF image in this example), it becomes:"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2353
msgid "Display Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2355
msgid ""
"|mapTips| This tab is specifically created for map tips: display a message "
"in the map canvas when hovering over a feature of the active layer. This "
"message can either be the value of a |radioButtonOff| :guilabel:`Field` or a"
" more complex and full |radioButtonOff| :guilabel:`HTML` text mixing fields,"
" :ref:`expressions <vector_expressions>` and html tags (multiline, fonts, "
"images, hyperlink ...)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2362
msgid ""
"To activate Map Tips, select the menu option :menuselection:`View --> Map "
"Tips` or click on the |mapTips| :sup:`Map Tips` icon. Map tip is a cross-"
"session feature meaning that once activated, it stays on and apply to any "
"set layer in any project, even in future QGIS sessions until it's toggled "
"off."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2368
msgid ""
"Figures Display Code and Mapped show an example of HTML code and how it "
"behaves in map canvas."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2376
msgid "HTML code for map tip"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2384
msgid "Map tip made with HTML code"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2391
msgid "Rendering Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2393
msgid ""
"|rendering| QGIS offers support for on-the-fly feature generalisation. This "
"can improve rendering times when drawing many complex features at small "
"scales. This feature can be enabled or disabled in the layer settings using "
"the |checkbox| :guilabel:`Simplify geometry` option. There is also a global "
"setting that enables generalisation by default for newly added layers (see "
":ref:`global simplification <global_simplification>` for more information)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2405
msgid "Layer Geometry Simplification dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2409
msgid ""
"Feature generalisation may introduce artefacts into your rendered output in "
"some cases. These may include slivers between polygons and inaccurate "
"rendering when using offset-based symbol layers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2414
msgid ""
"While rendering extremely detailed layers (e.g. polygon layers with a huge "
"number of nodes), this can cause composer exports in PDF/SVG format to be "
"huge as all nodes are included in the exported file. This can also make the "
"resultant file very slow to work with/open in other programs."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2419
msgid ""
"Checking |checkbox| :guilabel:`Force layer to render as raster` forces these"
" layers to be rasterised so that the exported files won't have to include "
"all the nodes contained in these layers and the rendering is therefore sped "
"up."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2423
msgid ""
"You can also do this by forcing the composer to export as a raster, but that"
" is an all-or-nothing solution, given that the rasterisation is applied to "
"all layers."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2432
msgid "Metadata Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2434
msgid ""
"|metadata| The :guilabel:`Metadata` tab consists of :guilabel:`Description`,"
" :guilabel:`Attribution`, :guilabel:`MetadataURL`, :guilabel:`LegendUrl` and"
" :guilabel:`Properties` sections."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2438
msgid ""
"In the :guilabel:`Properties` section, you get general information about the"
" layer, including specifics about the type and location, number of features,"
" feature type, and editing capabilities. The :guilabel:`Extents` table "
"provides you with information on the layer extent and the :guilabel:`Layer "
"Spatial Reference System`, which is information about the CRS of the layer. "
"This can provide a quick way to get useful information about the layer."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2445
msgid ""
"Additionally, you can add or edit a title and abstract for the layer in the "
":guilabel:`Description` section. It's also possible to define a "
":guilabel:`Keyword list` here. These keyword lists can be used in a metadata"
" catalog. If you want to use a title from an XML metadata file, you have to "
"fill in a link in the :guilabel:`DataUrl` field."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2451
msgid ""
"Use :guilabel:`Attribution` to get attribute data from an XML metadata "
"catalog."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2453
msgid ""
"In :guilabel:`MetadataUrl`, you can define the general path to the XML "
"metadata catalog. This information will be saved in the QGIS project file "
"for subsequent sessions and will be used for QGIS server."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2457
msgid ""
"In the :guilabel:`LegendUrl` section, you can provide the url of a legend "
"image in the url field. You can use the Format drop-down option to apply the"
" appropriate format of the image. Currently png, jpg and jpeg image formats "
"are supported."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2466
msgid "Metadata tab in vector layers properties dialog"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2469
msgid "**Switch quickly between different layer representations**"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2471
msgid ""
"Using the :menuselection:`Styles --> Add` combobox at the bottom of the "
":guilabel:`Layer Properties` dialog, you can save as many combinations of "
"layer properties settings (symbology, labeling, diagram, fields form, "
"actions...) as you want. Then, simply switch between styles from the context"
" menu of the layer in :guilabel:`Layers Panel` to automatically get "
"different representations of your data."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2482
msgid "Variables Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2484
msgid ""
"|expression| The :guilabel:`Variables` tab lists all the variables available"
" at the layer's level (which includes all global and project's variables)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2487
msgid ""
"It also allows the user to manage layer-level variables. Click the "
"|signPlus| button to add a new custom layer-level variable. Likewise, select"
" a custom layer-level variable from the list and click the |signMinus| "
"button to remove it."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2492
msgid ""
"More information on variables usage in the General Tools "
":ref:`general_tools_variables` section."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2499
msgid "Legend Properties"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2501
msgid ""
"|legend| The :guilabel:`Legend` tab provides you with a list of widgets you "
"can embed within the layer tree in the Layers panel. The idea is to have a "
"way to quickly access some actions that are often used with the layer (setup"
" transparency, filtering, selection, style or other stuff...)."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2506
msgid ""
"By default, QGIS provides transparency widget but this can be extended by "
"plugins registering their own widgets and assign custom actions to layers "
"they manage."
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:95
msgid "Query builder"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:159
msgid "Style"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:159
msgid "Renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:209
msgid "Single symbol renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:238
msgid "No symbols renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:259
msgid "Classes"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:259
msgid "Categorized renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:345
msgid "Histogram"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:345
msgid "Graduated renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:426
msgid "Proportional symbol"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:426
msgid "Multivariate analysis"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:426
msgid "Size assistant"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:504
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:504
msgid "Rule-based renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:504
msgid "Create a rule"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:547
msgid "Displacement plugin"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:547
msgid "Displacement circle"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:547
msgid "Point displacement renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:571
msgid "Inverted polygon renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:590
msgid "Heatmap renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:612
msgid "2.5D renderer"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:651
msgid "Sort features"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:651
msgid "Z-level"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:745
msgid "Paint effects"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1315
msgid "Expression"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1315
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1424
#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1424
msgid "Labels"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1424
msgid "Custom placement"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1424
msgid "Data-defined override"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1528
msgid "Fields"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1528
msgid "Forms"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1566
msgid "Edit widget"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1566
msgid "Field configuration"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1588
msgid "Default values"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1588
msgid "Fields constraints"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1686
msgid "Form"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1686
msgid "Built-in form"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1686
msgid "Custom form"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1801
msgid "Jointure"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1801
msgid "Join layers"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:1839
msgid "Diagrams"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2067
msgid "Tab"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2101
msgid "Attribute Actions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2101
msgid "Define an action"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2142
msgid "Examples"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2163
msgid "Using actions"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2349
msgid "Map Tips"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2387
msgid "Generalisation"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2387
msgid "Feature simplification"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2387
msgid "Rasterisation"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2427
msgid "Metadata"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2427
msgid "Keyword"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2478
msgid "Variables"
msgstr ""

#: ../../source/docs/user_manual/working_with_vector/vector_properties.rst:2495
msgid "Embedded widget"
msgstr ""

#~ msgid ""
#~ "The :guilabel:`Layer Properties` dialog for a vector layer provides "
#~ "information about the layer, symbology settings and labeling options. If "
#~ "your vector layer has been loaded from a PostgreSQL/PostGIS datastore, you "
#~ "can also alter the underlying SQL for the layer by invoking the "
#~ ":guilabel:`Query Builder` dialog on the :guilabel:`General` tab. To access "
#~ "the :guilabel:`Layer Properties` dialog, double-click on a layer in the "
#~ "legend or right-click on the layer and select :menuselection:`Properties` "
#~ "from the popup menu."
#~ msgstr ""

#~ msgid "Vector Layer Properties Dialog |nix|"
#~ msgstr ""

#~ msgid "Style Menu"
#~ msgstr ""

#~ msgid ""
#~ "The Style menu provides you with a comprehensive tool for rendering and "
#~ "symbolizing your vector data. You can use :menuselection:`Layer rendering "
#~ "-->` tools that are common to all vector data and special symbolizing tools "
#~ "that were designed for the different kinds of vector data."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Layer transparency` |slider|: you can make the underlying layer "
#~ "in the map canvas visible with this tool. Use the slider to adapt the "
#~ "visibility of your vector layer to your needs. You can also make a precise "
#~ "definition of the percentage of visibility in the the menu beside the "
#~ "slider."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Layer blending mode`: you can achieve special rendering effects "
#~ "with these tools that you previously only know from graphics programs. The "
#~ "pixels of your overlaying and underlaying layers are mixed through the "
#~ "settings described below."
#~ msgstr ""

#~ msgid ""
#~ "Normal: This is the standard blend mode which uses the alpha channel of the "
#~ "top pixel to blend with the Pixel beneath it; the colors aren't mixed"
#~ msgstr ""

#~ msgid ""
#~ "Lighten: It selects the maximum of each component from the foreground and "
#~ "background pixels. Be aware that the results tend to be jagged and harsh."
#~ msgstr ""

#~ msgid ""
#~ "Screen: Light pixels from the source are painted over the destination, while"
#~ " dark pixels are not. This mode is most useful for mixing the texture of one"
#~ " layer with another layer. E.g. you can use a hillshade to texture another "
#~ "layer"
#~ msgstr ""

#~ msgid ""
#~ "Dodge: Dodge will brighten and saturate underlying pixels based on the "
#~ "lightness of the top pixel. So brighter top pixels cause the saturation and "
#~ "brightness of the underlying pixels to increase. This works best if the top "
#~ "pixels aren't too bright, otherwise the effect is too extreme."
#~ msgstr ""

#~ msgid ""
#~ "Addition: This blend mode simply adds pixel values of one layer with the "
#~ "other. In case of values above 1 (in the case of RGB), white is displayed. "
#~ "This mode is suitable for highlighting features."
#~ msgstr ""

#~ msgid ""
#~ "Darken: Creates a resultant pixel that retains the smallest components of "
#~ "the foreground and background pixels. Like lighten, the results tend to be "
#~ "jagged and harsh"
#~ msgstr ""

#~ msgid ""
#~ "Multiply: It multiplies the numbers for each pixel of the top layer with the"
#~ " corresponding pixel for the bottom layer. The results are darker pictures."
#~ msgstr ""

#~ msgid ""
#~ "Burn: Darker colors in the top layer causes the underlying layers to darken."
#~ " Can be used to tweak and colorise underlying layers."
#~ msgstr ""

#~ msgid ""
#~ "Overlay: Combines multiply and screen blending modes. In the resulting "
#~ "picture light parts of the picture become lighter and dark parts become "
#~ "darker."
#~ msgstr ""

#~ msgid ""
#~ "Soft light: Very similar to overlay, but instead of using multiply/screen it"
#~ " uses color burn/dodge. This one is supposed to emulate shining a soft light"
#~ " onto an image."
#~ msgstr ""

#~ msgid ""
#~ "Hard light: Hard light is very similar to the overlay mode. It's supposed to"
#~ " emulate projecting a very intense light onto an image."
#~ msgstr ""

#~ msgid ""
#~ "Difference: Difference subtracts the top pixel from the bottom pixel or the "
#~ "other way round, to always get a positive value. Blending with black "
#~ "produces no change, as values for all colors are 0."
#~ msgstr ""

#~ msgid "Renderers"
#~ msgstr ""

#~ msgid ""
#~ "The Symbology allows to select multiple symbols and right click to change "
#~ "color, transparency, size, or width of selected entries."
#~ msgstr ""

#~ msgid "**Single Symbol Renderer**"
#~ msgstr ""

#~ msgid "Single symbol line properties |nix|"
#~ msgstr ""

#~ msgid ""
#~ "More detailed settings can be made when clicking on the second level in the "
#~ ":guilabel:`Symbol layers` dialog. You can define :guilabel:`Symbol layers` "
#~ "that are combined afterwards. A symbol can consist of several "
#~ ":guilabel:`Symbol layers`. The following settings are possible:"
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Symbol layer type`: You have the possibility to use Ellipse "
#~ "markers, Font markers, Simple markers, SVG markers and Vector Field markers"
#~ msgstr ""

#~ msgid ":guilabel:`Size`"
#~ msgstr ""

#~ msgid ":guilabel:`Angle`"
#~ msgstr ""

#~ msgid ":guilabel:`Colors`"
#~ msgstr ""

#~ msgid ":guilabel:`Border width`"
#~ msgstr ""

#~ msgid ":guilabel:`Offset X,Y`: You can shift the symbol in x- or y-direction"
#~ msgstr ""

#~ msgid "**Categorized Renderer**"
#~ msgstr ""

#~ msgid ""
#~ "The Categorized Renderer is used to render all features from a layer, using "
#~ "a single user-defined symbol, which color reflects the value of a selected "
#~ "feature's attribute. The :guilabel:`Style` menu allows you to select:"
#~ msgstr ""

#~ msgid "The attribute (using the Column listbox)"
#~ msgstr ""

#~ msgid "The symbol (using the Symbol dialog)"
#~ msgstr ""

#~ msgid "The colors (using the Color Ramp listbox)"
#~ msgstr ""

#~ msgid ""
#~ "The **[Advanced]** button in the lower right corner of the dialog allows to "
#~ "set the fields containing rotation and size scale information. For "
#~ "convenience, the list in the center of the menu lists the values of all "
#~ "currently selected attributes together, including the symbols that will be "
#~ "rendered."
#~ msgstr ""

#~ msgid ""
#~ "The example in figure_symbology_2_ shows the category rendering dialog used "
#~ "for the rivers layer of the |qg| sample dataset."
#~ msgstr ""

#~ msgid "Categorized Symbolizing options |nix|"
#~ msgstr ""

#~ msgid "Example of custom gradient color ramp with multiple stops |nix|"
#~ msgstr ""

#~ msgid "**Graduated Renderer**"
#~ msgstr ""

#~ msgid ""
#~ "The Graduated Renderer is used to render all the features from a layer, "
#~ "using a single user-defined symbol, whose color reflects the classification "
#~ "of a selected feature's attribute to a class."
#~ msgstr ""

#~ msgid "Graduated Symbolizing options |nix|"
#~ msgstr ""

#~ msgid ""
#~ "Like Categorized Renderer, it allows to define rotation and size scale from "
#~ "specified columns."
#~ msgstr ""

#~ msgid ""
#~ "Analogue to the categorized rendered, the :guilabel:`Style` tab allows you "
#~ "to select:"
#~ msgstr ""

#~ msgid "The symbol (using the Symbol Properties button)"
#~ msgstr ""

#~ msgid "The colors (using the Color Ramp list)"
#~ msgstr ""

#~ msgid ""
#~ "Additionally, you can specify the number of classes and also the mode how to"
#~ " classify features inside the classes (using the Mode list). The available "
#~ "modes are:"
#~ msgstr ""

#~ msgid "Standard Deviation"
#~ msgstr ""

#~ msgid ""
#~ "The listbox in the center part of the :guilabel:`Style` menu lists the "
#~ "classes together with their ranges, labels and symbols that will be "
#~ "rendered."
#~ msgstr ""

#~ msgid ""
#~ "The example in figure_symbology_4_ shows the graduated rendering dialog for "
#~ "the rivers layer of the |qg| sample dataset."
#~ msgstr ""

#~ msgid "**Rule-based rendering**"
#~ msgstr ""

#~ msgid ""
#~ "The rule-based renderer is used to render all the features from a layer, "
#~ "using rule based symbols, whose color reflects the classification of a "
#~ "selected feature's attribute to a class. The rules are based on SQL "
#~ "statements. The dialog allows rule grouping by filter or scale and you can "
#~ "decide if you want to enable symbol levels or use only first matched rule."
#~ msgstr ""

#~ msgid ""
#~ "The example in figure_symbology_5_ shows the rule-based rendering dialog for"
#~ " the rivers layer of the |qg| sample dataset."
#~ msgstr ""

#~ msgid ""
#~ "To create a rule, activate an existing row by clicking on it or click on '+'"
#~ " and click on the new rule. Then press the **[Edit rule]** button. In the "
#~ ":guilabel:`Rule properties` dialog you can define a label for the rule. "
#~ "Press the |browsebutton| button to open the Expression builder. In the "
#~ "**Function List**, click on :guilabel:`Fields and Values` to view all "
#~ "attributes of the attribute table to be searched. To add an attribute to the"
#~ " Field calculator **Expression** field, double click its name in the "
#~ ":guilabel:`Fields and Values` list. Generally you can use the various "
#~ "fields, values and functions to construct the calculation expression or you "
#~ "can just type it into the box (see :ref:`vector_field_calculator`)."
#~ msgstr ""

#~ msgid "Rule-based Symbolizing options |nix|"
#~ msgstr ""

#~ msgid "**Point displacement**"
#~ msgstr ""

#~ msgid ""
#~ "The point displacement renderer offers to visualize all features of a point "
#~ "layer, even if they have the same location. To do this, the symbols of the "
#~ "points are placed on a displacement circle around a center symbol."
#~ msgstr ""

#~ msgid "Point displacement dialog |nix|"
#~ msgstr ""

#~ msgid "Labels Menu"
#~ msgstr ""

#~ msgid "Text"
#~ msgstr ""

#~ msgid "Formatting"
#~ msgstr ""

#~ msgid "Buffer"
#~ msgstr ""

#~ msgid "Background"
#~ msgstr ""

#~ msgid "Shadow"
#~ msgstr ""

#~ msgid "Rendering"
#~ msgstr ""

#~ msgid "Let us see how the new menus can be used for various vector layers."
#~ msgstr ""

#~ msgid "**Labeling point layers**"
#~ msgstr ""

#~ msgid ""
#~ "First step is to activate the |checkbox| :guilabel:`Label this layer with` "
#~ "checkbox and select an attribute column to use for labeling. Click "
#~ "|mActionmIconExpressionEditorOpen| if you want to define labels based on "
#~ "expressions."
#~ msgstr ""

#~ msgid ""
#~ "The following steps describe a simple labeling without using the "
#~ ":guilabel:`Data defined override` functions that are situated next to the "
#~ "drop-down menus."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Formatting` menu you can define a character for a line "
#~ "break in the labels with the wrap label on character function. Use the "
#~ "|checkbox| :guilabel:`Formatted numbers` option to format the numbers in an "
#~ "attribute table. Here decimal places are inserted. If you enable this option"
#~ " three decimal places ist set by default."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Background` menu you can define with :guilabel:`Size X` "
#~ "and :guilabel:`Size Y` the shape of your background. Use :guilabel:`Size "
#~ "type` to insert an additional 'Buffer' into your background. The buffer size"
#~ " one is set by default here. The background then consists of the buffer plus"
#~ " the background in :guilabel:`Size X` and :guilabel:`Size Y`. You can set a "
#~ ":guilabel:`Rotation` where you can choose between 'Sync with label', 'Offset"
#~ " of label' and 'Fixed'. Using 'Offset of label' and 'Fixed' you can rotate "
#~ "the background. Define an :guilabel:`Offset X,Y` with X and Y values and the"
#~ " background will be shifted. When applying :guilabel:`Radius X,Y` the "
#~ "background gets rounded corners. Again, it is possible to mix the background"
#~ " with the underlying layers in the map canvas using the :guilabel:`Blend "
#~ "mode` (see blend_modes_)."
#~ msgstr ""

#~ msgid ""
#~ "Choose the :guilabel:`Placement` menu for the label placement and the "
#~ "labeling priority. Using the |radiobuttonon| :guilabel:`Offset from point` "
#~ "setting you now have the possibility to use :guilabel:`Quadrants` to place "
#~ "your label. Additionally you can alter the angle of the label placement with"
#~ " the :guilabel:`Rotation` setting. Thus, a placement in a certain quadrant "
#~ "with a certain rotation is possible."
#~ msgstr ""

#~ msgid "Smart labeling of vector point layers |nix|"
#~ msgstr ""

#~ msgid "**Labeling line layers**"
#~ msgstr ""

#~ msgid ""
#~ "First step is to activate the |checkbox| :guilabel:`Label this layer` "
#~ "checkbox in the :guilabel:`Label settings` tab and select an attribute "
#~ "column to use for labeling. Click |mActionmIconExpressionEditorOpen| if you "
#~ "want to define labels based on expressions."
#~ msgstr ""

#~ msgid ""
#~ "After that you can define the text style in the :guilabel:`Text` menu. Here "
#~ "the same settings as for point layers are possible."
#~ msgstr ""

#~ msgid ""
#~ "Also in the :guilabel:`Formatting` menu the same settings as for point "
#~ "layers are possible."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Buffer` menu has the same functions as described in section "
#~ "labeling_point_layers_ ."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Background` menu has the same entries as described in section"
#~ " labeling_point_layers_ ."
#~ msgstr ""

#~ msgid ""
#~ "Also the :guilabel:`Shadow` menu has the same entries as described in "
#~ "section labeling_point_layers_ ."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Rendering` menu has nearly the same entries as for point "
#~ "layers. In the :guilabel:`Feature options` you can now :guilabel:`Suppress "
#~ "labeling of features smaller than`."
#~ msgstr ""

#~ msgid "Smart labeling of vector line layers |nix|"
#~ msgstr ""

#~ msgid "**Labeling polygon layers**"
#~ msgstr ""

#~ msgid ""
#~ "First step is to activate the |checkbox| :guilabel:`Label this layer` "
#~ "checkbox and select an attribute column to use for labeling. Click "
#~ "|mActionmIconExpressionEditorOpen| if you want to define labels based on "
#~ "expressions."
#~ msgstr ""

#~ msgid ""
#~ "In :guilabel:`Text` menu define the text style. The entries are the same as "
#~ "for point and line layers."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Formatting` menu allows you to format multiple lines like for"
#~ " point and line layers."
#~ msgstr ""

#~ msgid ""
#~ "As with point and line layers you can create a text buffer in the "
#~ ":guilabel:`Buffer` menu."
#~ msgstr ""

#~ msgid ""
#~ "Use the :guilabel:`Background` menu to create a complex user-defined "
#~ "background for the polygon layer. You can use the menu as well as for the "
#~ "point and line layers."
#~ msgstr ""

#~ msgid ""
#~ "The entries in the :guilabel:`Shadow` menu are the same as for point and "
#~ "line layers."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Placement` menu you find special settings for polygon "
#~ "layers (see Figure_labels_3_ ). |radiobuttonon| :guilabel:`Offset from "
#~ "centroid`, |radiobuttonoff| :guilabel:`Horizontal (slow)`, |radiobuttonoff| "
#~ ":guilabel:`Around centroid`, |radiobuttonoff| :guilabel:`Free` and "
#~ "|radiobuttonoff| :guilabel:`Using perimeter` are possible."
#~ msgstr ""

#~ msgid ""
#~ "In the |radiobuttonon| :guilabel:`Offset from centroid` settings you can "
#~ "define if the centroid is |radiobuttonon| :guilabel:`visible polygon` or "
#~ "|radiobuttonoff| :guilabel:`whole polygon`. That means that either the "
#~ "centroid is used for the polygon you can see on the map or the centroid is "
#~ "used for the whole polygon, no matter if you can see the whole feature on "
#~ "the map. You can place your label with the quadrants here and define offset "
#~ "and rotation. The |radiobuttonoff| :guilabel:`Around centroid` setting makes"
#~ " it possible to place the label around the centroid with a certain distance."
#~ " Again, you can define |radiobuttonon| :guilabel:`visible polygon` or "
#~ "|radiobuttonoff| :guilabel:`whole polygon` for the centroid. With the "
#~ "|radiobuttonoff| :guilabel:`Using perimeter` settings you can define a "
#~ "position and a distance for the label. For the position |checkbox| "
#~ ":guilabel:`Above line`, |checkbox| :guilabel:`On line`, |checkbox| "
#~ ":guilabel:`Below line` and |checkbox| :guilabel:`Line orientation dependend "
#~ "position` are possible."
#~ msgstr ""

#~ msgid ""
#~ "The entries in the :guilabel:`Rendering` menu are the same as for line "
#~ "layers. You can also use :guilabel:`Suppress labeling of features smaller "
#~ "than` in the :guilabel:`Feature options`."
#~ msgstr ""

#~ msgid "Smart labeling of vector polygon layers |nix|"
#~ msgstr ""

#~ msgid "**Using data-defined override for labeling**"
#~ msgstr ""

#~ msgid ""
#~ "With the data-defined override functions the settings for the labeling are "
#~ "overwritten by entries in the attribute table. You can activate/deactivate "
#~ "the function with the right-mouse button. Hover over the symbol and you see "
#~ "the information about the data-defined override, including the current "
#~ "definition field. We now describe an example how to use the data-defined "
#~ "override function for the |mActionMoveLabel|:sup:`Move label` function (see "
#~ "figure_labels_4_ )."
#~ msgstr ""

#~ msgid ""
#~ "Double-klick the layer to open the Layer Properties. Klick on "
#~ ":guilabel:`Labels` and :guilabel:`Placement`. Select |radiobuttonon| "
#~ ":guilabel:`Offset from centroid`."
#~ msgstr ""

#~ msgid ""
#~ "Look for the :guilabel:`Data defined` entries. Klick the |mIconDataDefine| "
#~ "-Icon to define the field type for the :guilabel:`Coordinate`. Choose "
#~ "'xlabel' for X and 'ylabel' for Y. The Icons are now highlighted in yellow."
#~ msgstr ""

#~ msgid ""
#~ "Go to the Label toolbar and klick the |mActionMoveLabel| Icon. Now you can "
#~ "shift the label manually to another position (see figure_labels_5_ ). The "
#~ "new position of the label is saved in the 'xlabel' and 'ylabel' columns of "
#~ "the attribute table."
#~ msgstr ""

#~ msgid "Labeling of vector polygon layers with data-defined override |nix|"
#~ msgstr ""

#~ msgid "Move labels |nix|"
#~ msgstr ""

#~ msgid "Fields Menu"
#~ msgstr ""

#~ msgid ""
#~ "|attributes| Within the :guilabel:`Fields` menu the field attributes of the "
#~ "selected dataset can be manipulated. The buttons |mActionNewAttribute| "
#~ ":sup:`New Column` and |mActionDeleteAttribute| :sup:`Delete Column` can be "
#~ "used, when the dataset is |mActionToggleEditing| :sup:`Editing mode`."
#~ msgstr ""

#~ msgid "**Edit Widget**"
#~ msgstr ""

#~ msgid "\\"
#~ msgstr ""

#~ msgid "Dialog to select an edit widget for an attribute column |nix|"
#~ msgstr ""

#~ msgid ""
#~ "Within the :guilabel:`Fields` menu you also find an **edit widget** column. "
#~ "This column can be used to define values or a range of values that are "
#~ "allowed to be added to the specific attribute table column. If you click on "
#~ "the **[edit widget]** button, a dialog opens, where you can define different"
#~ " widgets. These widgets are:"
#~ msgstr ""

#~ msgid ""
#~ "**Line edit**: an edit field which allows to enter simple text (or restrict "
#~ "to numbers for numeric attributes)."
#~ msgstr ""

#~ msgid ""
#~ "**Range**: Allows to set numeric values from a specific range. The edit "
#~ "widget can be either a slider or a spin box."
#~ msgstr ""

#~ msgid ""
#~ "**Unique values**: The user can select one of the values already used in the"
#~ " attribute table. If editable is activated, a line edit is shown with "
#~ "autocompletion support, otherwise a combo box is used."
#~ msgstr ""

#~ msgid ""
#~ "**File name**: Simplifies the selection by adding a file chooser dialog."
#~ msgstr ""

#~ msgid ""
#~ "**Value map**: a combo box with predefined items. The value is stored in the"
#~ " attribute, the description is shown in the combo box. You can define values"
#~ " manually or load them from a layer or a CSV file."
#~ msgstr ""

#~ msgid ""
#~ "**Enumeration**: Opens a combo box with values that can be used within the "
#~ "columns type. This is currently only supported by the postgres provider."
#~ msgstr ""

#~ msgid ""
#~ "**Immutable**: The immutable attribute column is read-only. The user is not "
#~ "able to modify the content."
#~ msgstr ""

#~ msgid ""
#~ "**Hidden**: A hidden attribute column is invisible. The user is not able to "
#~ "see its content."
#~ msgstr ""

#~ msgid ""
#~ "**Checkbox**: Displays a checkbox and you can define what attribute is added"
#~ " to the column when the checkbox is activated or not."
#~ msgstr ""

#~ msgid ""
#~ "**Text edit**: This opens a text edit field that allows multiple lines to be"
#~ " used."
#~ msgstr ""

#~ msgid ""
#~ "**Calendar**: Opens a calendar widget to enter a date. Column type must be "
#~ "text."
#~ msgstr ""

#~ msgid ""
#~ "**Value Relation**: Offers values from a related table in a combobox. You "
#~ "can select layer, key column and value column."
#~ msgstr ""

#~ msgid ""
#~ "**Webview**: Field contains an URL. The width and height of the field is "
#~ "variable."
#~ msgstr ""

#~ msgid ""
#~ "**Color**: A field which allows to enter color codes. During data entry the "
#~ "color is visible through a color bar included in the field."
#~ msgstr ""

#~ msgid ""
#~ "Other options in the dialog are 'Autogenerate' and 'Provide ui-file'. "
#~ "'Autogenerate' just creates Editors for all fields and tabulates them. The "
#~ "'Provide ui-file' option allows you to use complex dialogs made with the Qt-"
#~ "Designer. Using an UI-file allows a large freedom in creating a dialog. For "
#~ "detailed information see http://nathanw.net/2011/09/05/qgis-tips-custom-"
#~ "feature-forms-with-python-logic/ ."
#~ msgstr ""

#~ msgid "Reference in Python Init Function like so: MyForms.open"
#~ msgstr ""

#~ msgid "Resulting built in form in a data entry session"
#~ msgstr ""

#~ msgid "General Menu"
#~ msgstr ""

#~ msgid ""
#~ "|general| Use this menu to make general settings for the vector layer. There"
#~ " are several options available:"
#~ msgstr ""

#~ msgid "Change the display name of the layer in :guilabel:`displayed as`"
#~ msgstr ""

#~ msgid "Define the :guilabel:`Layer source` of the vector layer"
#~ msgstr ""

#~ msgid ""
#~ "Define the :guilabel:`Data source encoding` to define provider specific "
#~ "option and to be able to read the file"
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Specify` the Coordinate Reference System. Here you can view or "
#~ "change the projection of the specific vector layer."
#~ msgstr ""

#~ msgid "Create a :guilabel:`Spatial Index` (only for OGR supported formats)"
#~ msgstr ""

#~ msgid "|checkbox| :guilabel:`Scale dependent visibility`"
#~ msgstr ""

#~ msgid ""
#~ "You can set the :guilabel:`Maximum (inclusive)` and :guilabel:`Minimum "
#~ "(exclusive)` scale. The scale can also be set by the **[Current]** buttons"
#~ msgstr ""

#~ msgid "Feature subset"
#~ msgstr ""

#~ msgid ""
#~ "With the **[Query Builder]** button you can create a subset of the features "
#~ "in the layer that will be visualized (also refer to section "
#~ ":ref:`sec_selection_query`)."
#~ msgstr ""

#~ msgid "General menu in vector layers properties dialog |nix|"
#~ msgstr ""

#~ msgid "Metadata Menu"
#~ msgstr ""

#~ msgid ""
#~ "|metadata| The :guilabel:`Metadata` menu consists of a "
#~ ":guilabel:`Description`, :guilabel:`Attribution`, :guilabel:`MetadataURL` "
#~ "and :guilabel:`Properties` section."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Properties` section you get general information about the "
#~ "layer, including specifics about the type and location, number of features, "
#~ "feature type, and the editing capabilities in the :guilabel:`Properties` "
#~ "section. The :guilabel:`Extents` table provides you with layer extent "
#~ "information, and the :guilabel:`Layer Spatial Reference System` information,"
#~ " providing information about the CRS of the layer. This is a quick way to "
#~ "get information about the layer."
#~ msgstr ""

#~ msgid "Actions Menu"
#~ msgstr ""

#~ msgid ""
#~ "|action| |qg| provides the ability to perform an action based on the "
#~ "attributes of a feature. This can be used to perform any number of actions, "
#~ "for example, running a program with arguments built from the attributes of a"
#~ " feature or passing parameters to a web reporting tool."
#~ msgstr ""

#~ msgid "Overview action dialog with some sample actions |nix|"
#~ msgstr ""

#~ msgid ""
#~ "Actions are useful when you frequently want to run an external application "
#~ "or view a web page based on one or more values in your vector layer. They "
#~ "are devided into 6 types and can be used like this:"
#~ msgstr ""

#~ msgid "Generic, Mac, Windows and Unix actions start an external process,"
#~ msgstr ""

#~ msgid "Python actions execute a python expression,"
#~ msgstr ""

#~ msgid "Generic and Python actions are visible everywhere,"
#~ msgstr ""

#~ msgid ""
#~ "Mac, Windows and Unix actions are visible only on the respective platform "
#~ "(i.e. you can define three 'Edit' actions to open an editor and the users "
#~ "can only see and execute the one 'Edit' action for their platform to run the"
#~ " editor)."
#~ msgstr ""

#~ msgid ""
#~ "There are several examples included in the dialog. You can load them "
#~ "clicking on **[Add default actions]**. An example is performing a search "
#~ "based on an attribute value. This concept is used in the following "
#~ "discussion."
#~ msgstr ""

#~ msgid "**Defining Actions**"
#~ msgstr ""

#~ msgid ""
#~ "Attribute actions are defined from the vector :guilabel:`Layer Properties` "
#~ "dialog. To :index:`define an action`, open the vector :guilabel:`Layer "
#~ "Properties` dialog and click on the :guilabel:`Actions` menu. Go to the "
#~ ":guilabel:`Action properties`. Select 'Generic' as type and provide a "
#~ "descriptive name for the action. The action itself must contain the name of "
#~ "the application that will be executed when the action is invoked. You can "
#~ "add one or more attribute field values as arguments to the application. When"
#~ " the action is invoked any set of characters that start with a ``%`` "
#~ "followed by the name of a field will be replaced by the value of that field."
#~ " The special characters :index:`%%` will be replaced by the value of the "
#~ "field that was selected from the identify results or attribute table (see "
#~ "using_actions_ below). Double quote marks can be used to group text into a "
#~ "single argument to the program, script or command. Double quotes will be "
#~ "ignored if preceded by a backslash."
#~ msgstr ""

#~ msgid ""
#~ "If you have field names that are substrings of other field names (e.g., "
#~ "``col1`` and ``col10``) you should indicate so, by surrounding the field "
#~ "name (and the \\% character) with square brackets (e.g., ``[%col10]``). This"
#~ " will prevent the ``%col10`` field name being mistaken for the ``%col1`` "
#~ "field name with a ``0`` on the end. The brackets will be removed by |qg| "
#~ "when it substitutes in the value of the field. If you want the substituted "
#~ "field to be surrounded by square brackets, use a second set like this: "
#~ "``[[%col10]]``."
#~ msgstr ""

#~ msgid ""
#~ "Using the :guilabel:`Identify Features` tool you can open "
#~ ":guilabel:`Identify Results` dialog. It includes a *(Derived)* item that "
#~ "contains information relevant to the layer type. The values in this item can"
#~ " be accessed in a similar way to the other fields by using preceeding the "
#~ "derived field name by ``(Derived).``. For example, a point layer has an "
#~ "``X`` and ``Y`` field and the value of these can be used in the action with "
#~ "``%(Derived).X`` and ``%(Derived).Y``. The derived attributes are only "
#~ "available from the :guilabel:`Identify Results` dialog box, not the "
#~ ":guilabel:`Attribute Table` dialog box."
#~ msgstr ""

#~ msgid "Two :index:`example actions` are shown below:"
#~ msgstr ""

#~ msgid ""
#~ "In the first example, the web browser konqueror is invoked and passed a URL "
#~ "to open. The URL performs a Google search on the value of the ``nam`` field "
#~ "from our vector layer. Note that the application or script called by the "
#~ "action must be in the path or you must provide the full path. To be sure, we"
#~ " could rewrite the first example as: ``/opt/kde3/bin/konqueror "
#~ "http://www.google.com/search?q=%nam``. This will ensure that the konqueror "
#~ "application will be executed when the action is invoked."
#~ msgstr ""

#~ msgid ""
#~ "The second example uses the \\%\\% notation which does not rely on a "
#~ "particular field for its value. When the action is invoked, the \\%\\% will "
#~ "be replaced by the value of the selected field in the identify results or "
#~ "attribute table."
#~ msgstr ""

#~ msgid "**Using Actions**"
#~ msgstr ""

#~ msgid ""
#~ "Actions can be invoked from either the :guilabel:`Identify Results` dialog, "
#~ "an :guilabel:`Attribute Table` dialog or from :guilabel:`Run Feature Action`"
#~ " (recall that these dialogs can be opened by clicking |mActionIdentify| "
#~ ":sup:`Identify Features` or |mActionOpenTable| :sup:`Open Attribute Table` "
#~ "or |mAction| :sup:`Run Feature Action`). To invoke an action, right click on"
#~ " the record and choose the action from the popup menu. Actions are listed in"
#~ " the popup menu by the name you assigned when defining the actions. Click on"
#~ " the action you wish to invoke."
#~ msgstr ""

#~ msgid ""
#~ "Here is another example that pulls data out of a vector layer and inserts "
#~ "them into a file using bash and the ``echo`` command (so it will only work "
#~ "|nix| or perhaps |osx|). The layer in question has fields for a species name"
#~ " ``taxon_name``, latitude ``lat`` and longitude ``long``. I would like to be"
#~ " able to make a spatial selection of a localities and export these field "
#~ "values to a text file for the selected record (shown in yellow in the |qg| "
#~ "map area). Here is the action to achieve this:"
#~ msgstr ""

#~ msgid ""
#~ "As an exercise we create an action that does a Google search on the "
#~ "``lakes`` layer. First we need to determine the URL needed to perform a "
#~ "search on a keyword. This is easily done by just going to Google and doing a"
#~ " simple search, then grabbing the URL from the address bar in your browser. "
#~ "From this little effort we see that the format is: "
#~ "http://google.com/search?q=qgis, where ``QGIS`` is the search term. Armed "
#~ "with this information, we can proceed:"
#~ msgstr ""

#~ msgid ""
#~ "Open the :guilabel:`Layer Properties` dialog by double-clicking on the layer"
#~ " in the legend or right-click and choose :guilabel:`Properties` from the "
#~ "popup menu."
#~ msgstr ""

#~ msgid "Click on the :guilabel:`Actions` menu."
#~ msgstr ""

#~ msgid ""
#~ "Following the name of the external application, add the URL used for doing a"
#~ " Google search, up to but not included the search term: "
#~ "``http://google.com/search?q=``"
#~ msgstr ""

#~ msgid ""
#~ "Click on the drop-down box containing the field names for the ``lakes`` "
#~ "layer. It's located just to the left of the **[Insert Field]** button."
#~ msgstr ""

#~ msgid "From the drop-down box select 'NAMES' and click **[Insert Field]**."
#~ msgstr ""

#~ msgid "To finalize the action click the **[Add to action list]** button."
#~ msgstr ""

#~ msgid ""
#~ "This completes the action and it is ready to use. The final text of the "
#~ "action should look like this:"
#~ msgstr ""

#~ msgid "Select feature and choose action |nix|"
#~ msgstr ""

#~ msgid ""
#~ "When we click on the action, it brings up Firefox and navigates to the URL "
#~ "http://www.google.com/search?q=Tustumena. It is also possible to add further"
#~ " attribute fields to the action. Therefore you can add a ``+`` to the end of"
#~ " the action text, select another field and click on **[Insert Field]**. In "
#~ "this example there is just no other field available that would make sense to"
#~ " search for."
#~ msgstr ""

#~ msgid ""
#~ "You can define multiple actions for a layer and each will show up in the "
#~ ":guilabel:`Identify Results` dialog."
#~ msgstr ""

#~ msgid ""
#~ "You can think of all kinds of uses for actions. For example, if you have a "
#~ "point layer containing locations of images or photos along with a file name,"
#~ " you could create an action to launch a viewer to display the image. You "
#~ "could also use actions to launch web-based reports for an attribute field or"
#~ " combination of fields, specifying them in the same way we did in our Google"
#~ " search example."
#~ msgstr ""

#~ msgid ""
#~ "We can also make more complex examples, for instance on how to use "
#~ "**Python** actions."
#~ msgstr ""

#~ msgid ""
#~ "Usually when we create an action to open a file with an external application"
#~ " we can use absolute paths, or eventually relative paths, in the second case"
#~ " the path is relative to the location of the external program executable "
#~ "file. But what about we need to use relative paths, relative to the selected"
#~ " layer (a file based one, like a shapefile or spatialite)? The following "
#~ "code will do the trick:"
#~ msgstr ""

#~ msgid ""
#~ "we have to just remember that the action is one of type *Python* and to "
#~ "change the *command* and *imagerelpath* variables to fit our needs."
#~ msgstr ""

#~ msgid ""
#~ "But what about if the relative path need to be relative to the (saved) "
#~ "project file? The code of the Python action would be:"
#~ msgstr ""

#~ msgid ""
#~ "Another Python actions example if the one that allows us to add new layers "
#~ "to the project. For instance the following examples will add to the project "
#~ "respectively a vector and a raster. The name of files to be added to the "
#~ "project and the name to be given to the layer are data driven (*filename* "
#~ "and *layname* are column names of the table of attributes of the vector "
#~ "where the action was created):"
#~ msgstr ""

#~ msgid "To add a raster (a tif image in this example) it becomes:"
#~ msgstr ""

#~ msgid "Joins Menu"
#~ msgstr ""

#~ msgid ""
#~ "|join| The :guilabel:`Joins` menu allows you to :index:`join` a loaded "
#~ "attribute table to a loaded vector layer. After clicking |mActionSignPlus| "
#~ "the :guilabel:`Add vector join` dialog appears. As key columns you have to "
#~ "define a :index:`join layer` you want to connect with the target vector "
#~ "layer , a join field that corresponds to an attribute column in the target "
#~ "layer and a target field you find in the attribute table of the target "
#~ "vector layer here. As a result, all information of the join layer and the "
#~ "target layer are displayed in the attribute table of the target layer as "
#~ "joined information."
#~ msgstr ""

#~ msgid "Join an attribute table to an existing vector layer |nix|"
#~ msgstr ""

#~ msgid "Additionally the add vector join dialog allows to:"
#~ msgstr ""

#~ msgid "Diagrams Menu"
#~ msgstr ""

#~ msgid ""
#~ "The current core implementation of diagrams provides support for piecharts, "
#~ "text diagrams and histograms."
#~ msgstr ""

#~ msgid ""
#~ "The menu is divided into four tabs now: :guilabel:`Appearance`, "
#~ ":guilabel:`Size`, :guilabel:`Postion` and :guilabel:`Options`."
#~ msgstr ""

#~ msgid ""
#~ "We will demonstrate an example and overlay the alaska boundary layer a text "
#~ "diagram showing some temperature data from a climate vector layer. Both "
#~ "vector layers are part of the |qg| sample dataset (see Section "
#~ ":ref:`label_sampledata`)."
#~ msgstr ""

#~ msgid ""
#~ "First click on the |mActionAddOgrLayer| :sup:`Load Vector` icon, browse to "
#~ "the |qg| sample dataset folder and load the two vector shape layers "
#~ ":file:`alaska.shp` and :file:`climate.shp`."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Appearance` tab we choose a light blue as Background color"
#~ " and in the :guilabel:`Size` tab we set a fixed size to 18 mm."
#~ msgstr ""

#~ msgid "In the :guilabel:`Position` tab Placement could be set to AroundPoint."
#~ msgstr ""

#~ msgid ""
#~ "In the diagram we want to display the values of the three columns "
#~ "``T_F_JAN``, ``T_F_JUL`` and ``T_F_MEAN``. First select ``T_F_JAN`` as "
#~ ":guilabel:`Attributes` and click the |mActionSignPlus| button, then "
#~ "``T_F_JUL`` and finally ``T_F_MEAN``."
#~ msgstr ""

#~ msgid "Now click **[Apply]** to display the diagram in the |qg| main window."
#~ msgstr ""

#~ msgid ""
#~ "You can now adapt the chart size in the :guilabel:`Size` tab. Deactivate the"
#~ " |checkbox| :guilabel:`Fixed size` and set the size of the diagrams on the "
#~ "basis of an Attribute with the **[Find maximum value]** button and the "
#~ ":guilabel:`Size` menu. If diagrams appear too small on the screen you can "
#~ "activate the |checkbox| :guilabel:`Increase size of small diagrams` checkbox"
#~ " and define the Minimum size of the diagrams."
#~ msgstr ""

#~ msgid ""
#~ "Change the Attribute Colors by double clicking on the color values in the "
#~ ":guilabel:`Assigned attributes` field.   Figure_diagrams_2_ gives an "
#~ "impression."
#~ msgstr ""

#~ msgid "Finally click **[Ok]**."
#~ msgstr ""

#~ msgid "Diagram from temperature data overlayed on a map |nix|"
#~ msgstr ""

#~ msgid ""
#~ "Remember that in the :guilabel:`Position` tab a |checkbox| :guilabel:`Data "
#~ "defined position` of the diagrams is possible. Here you can use attributes "
#~ "to define the position of the diagram. Also, a scale dependent visibility "
#~ "that you can find in the :guilabel:`Appearance` tab is possible."
#~ msgstr ""

#~ msgid "Single_Symbol_Renderer"
#~ msgstr ""

#~ msgid "Renderer_Single_Symbol"
#~ msgstr ""

#~ msgid "Categorized_Renderer"
#~ msgstr ""

#~ msgid "Renderer_Categorized"
#~ msgstr ""

#~ msgid "Color_Ramp"
#~ msgstr ""

#~ msgid "Gradient_Color_Ramp"
#~ msgstr ""

#~ msgid "ColorBrewer"
#~ msgstr ""

#~ msgid "Custom_Color_Ramp"
#~ msgstr ""

#~ msgid "Graduated_Renderer"
#~ msgstr ""

#~ msgid "Renderer_Graduated"
#~ msgstr ""

#~ msgid "Natural_Breaks_(Jenks)"
#~ msgstr ""

#~ msgid "Pretty_Breaks"
#~ msgstr ""

#~ msgid "Equal_Interval"
#~ msgstr ""

#~ msgid "Rule-based_Rendering"
#~ msgstr ""

#~ msgid "Rendering_Rule-based"
#~ msgstr ""

#~ msgid "Point_Displacement_Renderer"
#~ msgstr ""

#~ msgid "Renderer_Point_Displacement"
#~ msgstr ""

#~ msgid "Displacement_plugin"
#~ msgstr ""

#~ msgid "Colliding_labels"
#~ msgstr ""

#~ msgid "Attribute_Actions"
#~ msgstr ""

#~ msgid ""
#~ "Subtract: This blend mode simply subtracts pixel values of one layer with "
#~ "tshe other. In case of negative values, black is displayed."
#~ msgstr ""

#~ msgid ""
#~ "You can create a custom color ramp choosing :menuselection:`New color "
#~ "ramp...` from the :guilabel:`Color ramp` dropdown menu. A dialog will prompt"
#~ " for the ramp type: Gradient, Random, ColorBrewer, and cpt-city. The first "
#~ "three have options for number of steps and/or multiple stops in the color "
#~ "ramp. See figure_symbology_3_ for an example of custom color ramp and "
#~ "figure_symbology_3a_ for the cpt-city dialog."
#~ msgstr ""

#~ msgid ""
#~ "The cpt-city option opens a new dialog with hundreds of themes included 'out"
#~ " of the box'."
#~ msgstr ""

#~ msgid "cpt-city dialog with hundreds of color ramps |nix|"
#~ msgstr ""

#~ msgid "Display Menu"
#~ msgstr ""

#~ msgid "HTML code for map tip |nix|"
#~ msgstr ""

#~ msgid "Map tip made with HTML code |nix|"
#~ msgstr ""

#~ msgid "Vector properties dialog with diagram menu |nix|"
#~ msgstr ""

#~ msgid "Metadata menu in vector layers properties dialog |nix|"
#~ msgstr ""

#~ msgid ""
#~ "If you click on the first level in the :guilabel:`Symbol layers` dialog on "
#~ "the left side it's possible to define basic parameters like "
#~ ":guilabel:`Size`, :guilabel:`Transparency`, :guilabel:`Color` and "
#~ ":guilabel:`Rotation`. Here the layers are joined together."
#~ msgstr ""

#~ msgid ""
#~ "In the case of the text diagram and piechart text values of different data "
#~ "columns are displayed one below the other with a circle or a box and "
#~ "dividers. In the :guilabel:`Size` tab diagram size is based on a fixed size "
#~ "or on linear scaling according to a classification attribute. The placement "
#~ "of the diagrams which is done in the :guilabel:`Position` tab interacts with"
#~ " the new labeling, so position conflicts between diagrams and labels are "
#~ "detected and solved. In addition to chart positions can be fixed by the "
#~ "users hand."
#~ msgstr ""

#~ msgid ""
#~ "Since |qg| 2.0 the old symbology is no longer available. In this version the"
#~ " new symbology has been redesigned and revised."
#~ msgstr ""

#~ msgid ""
#~ "The renderer is responsible for drawing a feature together with the correct "
#~ "symbol. There are four types of renderers: single symbol, categorized, "
#~ "graduated and rule-based. There is no continuous color renderer, because it "
#~ "is in fact only a special case of the graduated renderer. The categorized "
#~ "and graduated renderer can be created by specifying a symbol and a color "
#~ "ramp - they will set the colors for symbols appropriately. For point layers "
#~ "there is a point displacement renderer available. For each data type "
#~ "(points, lines and polygons) vector symbol layer types are available. "
#~ "Depending on the chosen renderer, the :guilabel:`Style` menu provides "
#~ "different following sections. On the bottom right of the symbology dialog "
#~ "there is a **[Symbol]** button which gives access to the Style Manager (see "
#~ "Section vector_style_manager_). The Style Manager allows you to edit and "
#~ "remove existing symbols and add new ones."
#~ msgstr ""

#~ msgid ""
#~ "The Single Symbol Renderer is used to render all features of the layer using"
#~ " a single user-defined symbol. The properties, that can be adjusted in the "
#~ ":guilabel:`Style` menu, depend partially on the type of the layer, but all "
#~ "types share the following structure. In the top left part of the menu, there"
#~ " is a preview of the current symbol to be rendered. On the right part of the"
#~ " menu, there is a list of symbols already defined for the current style, "
#~ "prepared to be used via selecting them from the list. The current symbol can"
#~ " be modified using the menu on the right side."
#~ msgstr ""

#~ msgid ""
#~ "Note that once you have set the size in the lower levels the size of the "
#~ "whole symbol can be changed with the :guilabel:`Size` menu in the first "
#~ "level again. The size of the lower levels changes accordingly while the size"
#~ " ratio is maintained. After having done any needed changes, the symbol can "
#~ "be added to the list of current style symbols (using the **[Symbol]** "
#~ "|selectstring| :guilabel:`Save in symbol library`) and then easily be used "
#~ "in the future. Furthermore you can use the **[Save Style]** |selectstring| "
#~ "button to save the symbol as a |qg| layer style file (.qml) or SLD "
#~ "file(.sld). Currently in version 2.0 SLDs can be exported from any type of "
#~ "renderer: single symbol, categorized, graduated or rule-based, but when "
#~ "importing an SLD, either a single symbol or rule-based renderer is created. "
#~ "That means that categorized or graduated styles are converted to rule-based."
#~ " If you want to preserve those renderers, you have to stick to the QML "
#~ "format. On the other hand, it could be very handy sometimes to have this "
#~ "easy way of converting styles to rule-based."
#~ msgstr ""

#~ msgid ""
#~ "With the :guilabel:`Style manager` from the **[Symbol]** |selectstring| menu"
#~ " you can administrate your symbols. You can |mActionSignPlus| :sup:`add "
#~ "item`, |edit|:sup:`edit item`, |mActionSignMinus| :sup:`remove item` and "
#~ "|user| :sup:`share item`. 'Marker' symbols, 'Line' symbols, 'Fill' patterns "
#~ "and 'Color ramps' can be used to create the symbols (see defining_symbols_)."
#~ " The symbols are assigned to 'All Symbols', 'Groups' or 'Smart groups' then."
#~ msgstr ""

#~ msgid ""
#~ "You have the possibility to export vector symbology from |qg| into the "
#~ "Google *.kml, *.dxf and MapInfo*.tab files. Just open the right mouse menu "
#~ "of the layer and click on :menuselection:`Save selection as -->` to define "
#~ "the name of the output file and its format. Use the :guilabel:`Symbology "
#~ "export` menu to save the symbology either as :menuselection:`Feature "
#~ "symbology -->` or as :menuselection:`Symbol layer symbology -->`. If you "
#~ "have used symbol layers it is recommended to use the second setting."
#~ msgstr ""

#~ msgid ""
#~ "The |mActionLabeling| :sup:`Labels` core application provides smart labeling"
#~ " for vector point, line and polygon layers and only requires a few "
#~ "parameters. This new application also supports on-the-fly transformated "
#~ "layers. The core functions of the application have been redesigned. In |qg| "
#~ "2.0. there are now a number of other features which improve the labeling. "
#~ "The following menus have been created for labeling the vector layers:"
#~ msgstr ""

#~ msgid ""
#~ "Start |qg| and load a vector point layer. Activate the layer in the legend "
#~ "and click on the |mActionLabeling| :sup:`Layer Labeling Options` icon in the"
#~ " |qg| toolbar menu."
#~ msgstr ""

#~ msgid ""
#~ "You can define the text style in the :guilabel:`Text` menu (see "
#~ "Figure_labels_1_ ). A new function is the :guilabel:`Type case` option where"
#~ " you can influence the text rendering. You have the possibility to render "
#~ "the text 'All uppercase', 'All lowercase' or 'Capitalize first letter'. "
#~ "Also, a new function in |qg| 2.0 is the use of blend modes (see "
#~ "blend_modes_)."
#~ msgstr ""

#~ msgid ""
#~ "To create a buffer just activate |checkbox| :guilabel:`Draw text buffer` "
#~ "checkbox in the :guilabel:`Buffer` menu. The buffer color is variable. Also,"
#~ " a new function in |qg| 2.0 is the use of blend modes (see blend_modes_)."
#~ msgstr ""

#~ msgid ""
#~ "If the |checkbox| :guilabel:`Color buffer's fill` checkbox is activated, it "
#~ "will interact with partially transparent text and give mixed color "
#~ "transparency results. Turning off the buffer fill fixes that issue (except "
#~ "where the interior aspect of the buffer's stroke intersects with the text's "
#~ "fill) and also allows the user to make outlined text."
#~ msgstr ""

#~ msgid ""
#~ "Use the :guilabel:`Shadow` menu for a user-defined :guilabel:`Drop shadow`. "
#~ "The drawing of the background is very variable. Choose between 'Lowest label"
#~ " component', 'Text', 'Buffer' and 'Background'. The :guilabel:`Offset` angle"
#~ " depends on the orientation of the label. If you choose the |checkbox| "
#~ ":guilabel:`Use global shadow` checkbox then the zero point of the angle is "
#~ "always oriented to the north and doesn't depend on the orientation of the "
#~ "label. Influence the appearance of the shadow with the :guilabel:`Blur "
#~ "radius`. The higher the number, the softer the shadows."
#~ msgstr ""

#~ msgid ""
#~ "The appearance of the drop shadow can also be altered by choosing a blend "
#~ "mode (see blend_modes_)."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Rendering` menu you can define label and feature options. "
#~ "In the :guilabel:`Label options` you find the scale-based visibility setting"
#~ " now. You can prevent |qg| from rendering only selected labels with the "
#~ "|checkbox| :guilabel:`Show all labels for this layer (including colliding "
#~ "labels)` checkbox. In the :guilabel:`Feature options` you can define if "
#~ "every part of a multipart feature is to be labeled. In |qg| 2.0 now it's "
#~ "possible to define if the number of features to be labeled is limited and to"
#~ " |checkbox| :guilabel:`Discourage labels from covering features`."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Placement` menu you find special settings for line layers."
#~ " The label can be placed |radiobuttonon| :guilabel:`Parallel`, "
#~ "|radiobuttonoff| :guilabel:`Curved` or |radiobuttonoff| "
#~ ":guilabel:`Horizontal`. With the |radiobuttonon| :guilabel:`Parallel` and "
#~ "|radiobuttonoff| :guilabel:`Curved` option come the following settings: You "
#~ "can define the position |checkbox| :guilabel:`Above line`, |checkbox| "
#~ ":guilabel:`On line` and |checkbox| :guilabel:`Below line`. It's possible to "
#~ "select several options at once. |qg| will look for the optimal position of "
#~ "the label then. Remember that here you can also use the line orientation for"
#~ " the position of the label. Additionally you can define a :guilabel:`Maximum"
#~ " angle between curved characters` when selecting the |radiobuttonoff| "
#~ ":guilabel:`Curved` option (see Figure_labels_2_ )."
#~ msgstr ""

#~ msgid "Import the lakes.shp from the |qg| sample dataset."
#~ msgstr ""

#~ msgid ""
#~ "**Classification**: Displays a combo box with the values used for "
#~ "classification, if you have chosen 'unique value' as legend type in the "
#~ ":guilabel:`Style` menu of the properties dialog."
#~ msgstr ""

#~ msgid ""
#~ "With the **Attribute editor layout** you can now define builtin forms for "
#~ "data entry jobs (see figure_fields_2_). Choose 'Drag and drop designer' and "
#~ "an attribute column. Use the |mActionSignPlus| Icon to create a category "
#~ "that then will be shown during the digitizing session (see "
#~ "figure_fields_3_). Next step will be to assign the relevant fields to the "
#~ "category with the |mActionArrowRight| Icon. You can create more categories "
#~ "and use the same fields again. When creating a new category |qg| will insert"
#~ " a new tab for the category in the built in form."
#~ msgstr ""

#~ msgid ""
#~ "|qg| dialogs can have a python function that is called when the dialog is "
#~ "opened. Use this function to add extra logic to your dialogs. An example is "
#~ "(in module MyForms.py):"
#~ msgstr ""

#~ msgid ""
#~ "MyForms.py must live on PYTHONPATH, .qgis2/python, or inside the project "
#~ "folder"
#~ msgstr ""

#~ msgid ""
#~ "View or change the projection of the specific vector layer, clicking on "
#~ ":guilabel:`Specify ...`"
#~ msgstr ""

#~ msgid ""
#~ "|mActionMapTips| In |qg| 2.0 there is now an own menu for the map tips. It "
#~ "includes a new feature: Map Tip display text in HTML. While you can still "
#~ "choose a |radiobuttonoff| :guilabel:`Field` to be displayed when hovering "
#~ "over a feature on the map it is now possible to insert HTML code that "
#~ "creates a complex display when hovering over a feature. To activate Map "
#~ "Tips, select the menu option :menuselection:`View --> MapTips`.Figure "
#~ "Display 1 shows an example of HTML code."
#~ msgstr ""

#~ msgid ""
#~ "|qg| currently supports to join non spatial table formats supported by OGR "
#~ "(e.g. CSV, DBF and Excel), delimited text and the PostgreSQL provider (see "
#~ "figure_joins_1_)."
#~ msgstr ""

#~ msgid ""
#~ "|diagram| The :guilabel:`Diagrams` menu allows you to add a graphic overlay "
#~ "to a vector layer (see figure_diagrams_1_)."
#~ msgstr ""

#~ msgid ""
#~ "Click on the :guilabel:`Diagrams` menu, activate "
#~ "|checkbox|:guilabel:`Display diagrams` and from :guilabel:`Diagram type` "
#~ "|selectstring| combobox select 'Text diagram'"
#~ msgstr ""

#~ msgid ""
#~ "Additionally you can add/edit a title for the layer and some abstract "
#~ "information in the :guilabel:`Description`. Also, it's possible to define a "
#~ ":guilabel:`Keyword list` here. These keyword lists can be used in a metadata"
#~ " catalogue. If you want to use a title from an XML metadata file you have to"
#~ " fill in a link in the :guilabel:`DataUrl` field. Use "
#~ ":guilabel:`Attribution` to get Atrribute data from an XML metadata "
#~ "catalogue. In :guilabel:`MetadataUrl` you can define the general path to the"
#~ " XML metadata catalogue. These information will be saved in the |qg| project"
#~ " file for following sessions and will be used for |qg| server."
#~ msgstr ""

#~ msgid "|updatedisclaimer|"
#~ msgstr ""

#~ msgid ""
#~ "Since |qg| 2.0.0 the old symbology is no longer available. In this version "
#~ "the new symbology has been redesigned and revised."
#~ msgstr ""

#~ msgid ""
#~ "The renderer is responsible for drawing a feature together with the correct "
#~ "symbol. There are four types of renderers: single symbol, categorized, "
#~ "graduated and rule-based. There is no continuous color renderer, because it "
#~ "is in fact only a special case of the graduated renderer. The categorized "
#~ "and graduated renderer can be created by specifying a symbol and a color "
#~ "ramp - they will set the colors for symbols appropriately. For point layers "
#~ "there is a point displacement renderer available. For each data type "
#~ "(points, lines and polygons) vector symbol layer types are available (see "
#~ "vector_symbol_types_). Depending on the chosen renderer, the "
#~ ":guilabel:`Style` menu provides different following sections. On the bottom "
#~ "right of the symbology dialog there is a **[Symbol]** button which gives "
#~ "access to the Style Manager (see Section :ref:`vector_style_manager`). The "
#~ "Style Manager allows you to edit and remove existing symbols and add new "
#~ "ones."
#~ msgstr ""

#~ msgid ""
#~ "Note that once you have set the size in the lower levels the size of the "
#~ "whole symbol can be changed with the :guilabel:`Size` menu in the first "
#~ "level again. The size of the lower levels changes accordingly while the size"
#~ " ratio is maintained. After having done any needed changes, the symbol can "
#~ "be added to the list of current style symbols (using the **[Symbol]** "
#~ "|selectstring| :guilabel:`Save in symbol library`) and then easily be used "
#~ "in the future. Furthermore you can use the **[Save Style]** |selectstring| "
#~ "button to save the symbol as a QGIS layer style file (.qml) or SLD "
#~ "file(.sld). Currently in version 2.0.0 SLDs can be exported from any type of"
#~ " renderer: single symbol, categorized, graduated or rule-based, but when "
#~ "importing an SLD, either a single symbol or rule-based renderer is created. "
#~ "That means that categorized or graduated styles are converted to rule-based."
#~ " If you want to preserve those renderers, you have to stick to the QML "
#~ "format. On the other hand, it could be very handy sometimes to have this "
#~ "easy way of converting styles to rule-based."
#~ msgstr ""

#~ msgid ""
#~ "Start QGIS and load a vector point layer. Activate the layer in the legend "
#~ "and click on the |mActionLabeling| :sup:`Layer Labeling Options` icon in the"
#~ " QGIS toolbar menu."
#~ msgstr ""

#~ msgid ""
#~ "You can define the text style in the :guilabel:`Text` menu (see "
#~ "Figure_labels_1_ ). A new function is the :guilabel:`Type case` option where"
#~ " you can influence the text rendering. You have the possibility to render "
#~ "the text 'All uppercase', 'All lowercase' or 'Capitalize first letter'. "
#~ "Also, a new function in QGIS 2.0.0 is the use of blend modes (see "
#~ "blend_modes_)."
#~ msgstr ""

#~ msgid ""
#~ "To create a buffer just activate |checkbox| :guilabel:`Draw text buffer` "
#~ "checkbox in the :guilabel:`Buffer` menu. The buffer color is variable. Also,"
#~ " a new function in QGIS 2.0.0 is the user of blend modes (see blend_modes_)."
#~ " .. FIXME: more information necessary Use the |checkbox| :guilabel:`Color "
#~ "buffer fill` checkbox to ..."
#~ msgstr ""

#~ msgid ""
#~ "Use the :guilabel:`Shadow` menu for a user-defined :guilabel:`Drop shadow`. "
#~ "The drawing of the background is very variable. Choose between 'Lowest label"
#~ " component', 'Text', 'Buffer' and 'Background'. The :guilabel:`Offset` angle"
#~ " depends on the orientation of the label. If you choose the |checkbox| "
#~ ":guilabel:`Use global shadow` checkbox then the zero point of the angle is "
#~ "always oriented to the north and doesn't depend on the orientation of the "
#~ "label. Influence the appearance of the shadow with the :guilabel:`Blur "
#~ "radius`. The higher the number, the softer the shadows. .. FIXME: more "
#~ "information necessary Using the |checkbox| :guilabel:`Blur only alpha "
#~ "pixels` checkbox the shadow will ... The appearance of the drop shadow can "
#~ "also be altered by choosing a blend mode (see blend_modes_)."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Rendering` menu you can define label and feature options. "
#~ "In the :guilabel:`Label options` you find the scale-based visibility setting"
#~ " now. You can prevent QGIS from rendering only selected labels with the "
#~ "|checkbox| :guilabel:`Show all labels for this layer (including colliding "
#~ "labels)` checkbox. In the :guilabel:`Feature options` you can define if "
#~ "every part of a multipart feature is to be labeled. In QGIS 2.0.0 now it's "
#~ "possible to define if the number of features to be labeled is limited and to"
#~ " |checkbox| :guilabel:`Discourage labels from covering features`."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Placement` menu you find special settings for line layers."
#~ " The label can be placed |radiobuttonon| :guilabel:`Parallel`, "
#~ "|radiobuttonoff| :guilabel:`Curved` or |radiobuttonoff| "
#~ ":guilabel:`Horizontal`. With the |radiobuttonon| :guilabel:`Parallel` and "
#~ "|radiobuttonoff| :guilabel:`Curved` option come the following settings: You "
#~ "can define the position |checkbox| :guilabel:`Above line`, |checkbox| "
#~ ":guilabel:`On line` and |checkbox| :guilabel:`Below line`. It's possible to "
#~ "select several options at once. QGIS will look for the optimal position of "
#~ "the label then. Remember that here you can also use the line orientation for"
#~ " the position of the label. .. FIXME: more information necessary "
#~ "Additionally you can define a :guilabel:`Maximum angle between curved "
#~ "characters` when selecting the |radiobuttonoff| :guilabel:`Curved` option "
#~ "(see Figure_labels_2_ )."
#~ msgstr ""

#~ msgid "Import the lakes.shp from the QGIS sample dataset."
#~ msgstr ""

#~ msgid "Labels (deprecated)"
#~ msgstr ""

#~ msgid ""
#~ "Load the Shapefile :file:`alaska.shp` and GML file :file:`lakes.gml` in |qg|"
#~ msgstr ""

#~ msgid "Zoom in a bit to your favorite area with some lake"
#~ msgstr ""

#~ msgid "Make the 'lakes' layer active"
#~ msgstr ""

#~ msgid "Open the :guilabel:`Layer Properties` dialog"
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`Layers (deprecated)` menu click on the :guilabel:`Label "
#~ "Properties` tab."
#~ msgstr ""

#~ msgid ""
#~ "Check the |checkbox| :guilabel:`Display labels` checkbox to enable labeling"
#~ msgstr ""

#~ msgid ""
#~ "Choose the field to label with. We will use :guilabel:`Field containing "
#~ "label` |selectstring| 'NAMES'"
#~ msgstr ""

#~ msgid ""
#~ "Enter a :guilabel:`Default label` for lakes that have no name. The default "
#~ "label will be used each time |qg| encounters a lake with no value in the "
#~ "'NAMES' field."
#~ msgstr ""

#~ msgid ""
#~ "If you have labels extending over several lines, check "
#~ "|checkbox|:guilabel:`Multiline labels?`. |qg| will check for a true line "
#~ "return in your label field and insert the line breaks accordingly. A true "
#~ "line return is a **single** character ``\\n``, (not two separate characters,"
#~ " like a backlash ``\\`` followed by the character ``n``).  To insert line "
#~ "returns in an attribute field configure the edit widget to be text edit (not"
#~ " line edit)."
#~ msgstr ""

#~ msgid "Click **[Apply]**."
#~ msgstr ""

#~ msgid ""
#~ "Now we have labels. How do they look? They are probably too big and poorly "
#~ "placed in relation to the marker symbol for the lakes."
#~ msgstr ""

#~ msgid ""
#~ "Select the :guilabel:`Font size` |selectstring| and use the **[Font]** and "
#~ "**[Color]** buttons to set the font and color. Define if your labels should "
#~ "be rendered in points or in map units. You can also change the placement of "
#~ "the text-label."
#~ msgstr ""

#~ msgid "To change the position of the text relative to the feature:"
#~ msgstr ""

#~ msgid ""
#~ "Beneath the Basic label options change the placement by selecting one of the"
#~ " radio buttons in the :guilabel:`Placement` group. To fix our labels, choose"
#~ " the |radiobuttonon| :guilabel:`Right` radio button."
#~ msgstr ""

#~ msgid "Click **[Apply]** to see your changes without closing the dialog."
#~ msgstr ""

#~ msgid ""
#~ "Things are looking better, but the labels are still too close to the marker."
#~ " To fix this we can use the options on the ``Offset`` entry which is on the "
#~ "bottom of the menu. Here we can add offsets for the X and Y directions. "
#~ "Adding an X offset of 5 will move our labels off the marker and make them "
#~ "more readable. Of course if your marker symbol or font is larger, more of an"
#~ " offset will be required."
#~ msgstr ""

#~ msgid ""
#~ "The last adjustment we'll make is to 'Buffer' the labels. This just means "
#~ "putting a backdrop around them to make them stand out better. To buffer the "
#~ "lakes labels:"
#~ msgstr ""

#~ msgid ""
#~ "Click the |checkbox| :guilabel:`Buffer Labels` checkbox to enable buffering."
#~ msgstr ""

#~ msgid "Choose a size for the buffer using the spin box |selectnumber|."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Buffer size` menu also allows you to select between 'In "
#~ "Points' or 'In Map units'."
#~ msgstr ""

#~ msgid ""
#~ "Choose a color by clicking on **[Color]** and choosing your favorite from "
#~ "the color selector. You can also set some transparency for the buffer if you"
#~ " prefer."
#~ msgstr ""

#~ msgid "Click **[Apply]** to see if you like the changes."
#~ msgstr ""

#~ msgid ""
#~ "As a last define if the labels should be shifted. Use the :guilabel:`Offset`"
#~ " settings and fill in the 'X offset' and the 'Y offset' . Again, it is "
#~ "possible to define the :guilabel:`Offset` 'In points' or in 'In map units'."
#~ msgstr ""

#~ msgid ""
#~ "If you aren't happy with the results, tweak the settings and then test again"
#~ " by clicking **[Apply]**."
#~ msgstr ""

#~ msgid ""
#~ "A buffer of 1 points seems to give a good result. Notice you can also "
#~ "specify the buffer size in map units if that works out better for you."
#~ msgstr ""

#~ msgid ""
#~ "The advanced entries inside the :guilabel:`Advanced tab` allow you control "
#~ "the appearance of the labels using attributes stored in the layer. The "
#~ "entries beginning with 'Data defined' allow you to set all the parameters "
#~ "for the labels using fields in the layer."
#~ msgstr ""

#~ msgid ""
#~ "Note that the :guilabel:`Label Properties` tab provides a 'preview-box' "
#~ "where your selected label is shown."
#~ msgstr ""

#~ msgid ""
#~ "With the **Attribute editor layout** you can now define builtin forms for "
#~ "data entry jobs (see figure_fields_2_). Choose 'Drag and drop designer' and "
#~ "an attribute column. Use the |mActionSignPlus| Icon to create a category "
#~ "that then will be shown during the digitizing session (see "
#~ "figure_fields_3_). Next step will be to assign the relevant fields to the "
#~ "category with the |mActionArrowRight| Icon. You can create more categories "
#~ "and use the same fields again. When creating a new category QGIS will insert"
#~ " a new tab for the category in the built in form."
#~ msgstr ""

#~ msgid ""
#~ "QGIS dialogs can have a python function that is called when the dialog is "
#~ "opened. Use this function to add extra logic to your dialogs. An example is "
#~ "(in module MyForms.py):"
#~ msgstr ""

#~ msgid ""
#~ "MyForms.py must live on PYTHONPATH, .qgis/python, or inside the project "
#~ "folder"
#~ msgstr ""

#~ msgid ""
#~ "Additionally you can add/edit a title for the layer and some abstract "
#~ "information in the :guilabel:`Description`. Also, it's possible to define a "
#~ ":guilabel:`Keyword list` here. These keyword lists can be used in a metadata"
#~ " catalogue. If you want to use a title from an XML metadata file you have to"
#~ " fill in a link in the :guilabel:`DataUrl` field. Use "
#~ ":guilabel:`Attribution` to get Atrribute data from an XML metadata "
#~ "catalogue. In :guilabel:`MetadataUrl` you can define the general path to the"
#~ " XML metadata catalogue. These information will be saved in the QGIS project"
#~ " file for following sessions and will be used for QGIS server."
#~ msgstr ""

#~ msgid ""
#~ "QGIS currently supports to join non spatial table formats supported by OGR "
#~ "(e.g. CSV, DBF and Excel), delimited text and the PostgreSQL provider (see "
#~ "figure_joins_1_)."
#~ msgstr ""

#~ msgid ""
#~ "|diagram| The :guilabel:`Diagrams` tab allows you to add a graphic overlay "
#~ "to a vector layer (see figure_diagrams_1_)."
#~ msgstr ""

#~ msgid ""
#~ "Click on the :guilabel:`Diagrams` menu, activate :guilabel:`Display "
#~ "diagrams` and from :guilabel:`Diagram type` |selectstring| combobox select "
#~ "'Text diagram'"
#~ msgstr ""

#~ msgid ""
#~ "You have the possibility to export vector symbology from QGIS into the "
#~ "Google *.kml, *.dxf and MapInfo*.tab files. Just open the right mouse menu "
#~ "of the layer and click on :menuselection:`Save selection as -->` to define "
#~ "the name of the output file and its format. Use the :guilabel:`Symbology "
#~ "export` menu to save the symbology either as :menuselection:`Feature "
#~ "symbology -->` or as :menuselection:`Symbol layer symbology -->`. If you "
#~ "have used symbol layers it is recommended to use the second setting."
#~ msgstr ""

#~ msgid ""
#~ "The |mActionLabeling| :sup:`Labels` core application provides smart labeling"
#~ " for vector point, line and polygon layers and only requires a few "
#~ "parameters. This new application also supports on-the-fly transformated "
#~ "layers. The core functions of the application have been redesigned. In QGIS "
#~ "2.0.0. there are now a number of other features which improve the labeling. "
#~ "The following menus have been created for labeling the vector layers:"
#~ msgstr ""

#~ msgid ""
#~ "Use of the deprecated labelling engine available in QGIS <= 1.8 is now "
#~ "discouraged, but has not been removed. This is to allow users to migrate "
#~ "existing projects from the old to new labelling engine. The following "
#~ "guidelines for working with the older engine in QGIS 2.0 apply:"
#~ msgstr ""

#~ msgid ""
#~ "Deprecated labelling tab is removed from vector layer properties dialog for "
#~ "new projects or older opened projects that don't use that labelling engine."
#~ msgstr ""

#~ msgid ""
#~ "Deprecated tab remains active for older opened projects, if any layer uses "
#~ "them, and does not go away even if saving the project with no layers having "
#~ "the older labelling engine enabled."
#~ msgstr ""

#~ msgid ""
#~ "**NOTE**: There is a very high likelihood the deprecated labelling engine "
#~ "will be completely removed prior to the next stable release of QGIS. Please "
#~ "migrate older projects."
#~ msgstr ""

#~ msgid ""
#~ "We will illustrate how it works by labeling the lakes shapefile of the QGIS "
#~ "sample dataset:"
#~ msgstr ""

#~ msgid "**Enabled/Disabled deprecated labelling via Python**"
#~ msgstr ""

#~ msgid ""
#~ "The deprecated labelling tab can also be enabled/disabled for the current "
#~ "project, via Python console commands, e.g.:"
#~ msgstr ""

#~ msgid ""
#~ "View or change the projection of the specific vector layer, clicking on "
#~ ":guilabel:`Specify ... `"
#~ msgstr ""

#~ msgid ""
#~ "|mActionMapTips| In |qg| 2.0.0 there is now an own menu for the map tips. It"
#~ " includes a new feature: Map Tip display text in HTML. While you can still "
#~ "choose a |radiobuttonoff| :guilabel:`Field` to be displayed when hovering "
#~ "over a feature on the map it is now possible to insert HTML code that "
#~ "creates a complex display when hovering over a feature. To activate Map "
#~ "Tips, select the menu option :menuselection:`View --> MapTips`.Figure "
#~ "Display 1 shows an example of HTML code."
#~ msgstr ""

#~ msgid ""
#~ "The Single Symbol Renderer is used to render all features of the layer using"
#~ " a single user-defined symbol. The properties, that can be adjusted in the "
#~ ":guilabel:`Style` menu, depend partially on the type of the layer, but all "
#~ "types share the following structure. In the top left part of the tab, there "
#~ "is a preview of the current symbol to be rendered. On the right part of the "
#~ "tab, there is a list of symbols already defined for the current style, "
#~ "prepared to be used via selecting them from the list. The current symbol can"
#~ " be modified using the menu on the right side."
#~ msgstr ""

#~ msgid ""
#~ "With the :guilabel:`Style manager` from the **[Symbol]** |selectstring| menu"
#~ " you can administrate your symbols. You can |mActionSignPlus| :sup:`add "
#~ "item`, |edit|:sup:`edit item`, |mActionSignMinus| :sup:`remove item` and "
#~ "|user| :sup:`share item. 'Marker' symbols, 'Line' symbols, 'Fill' patterns "
#~ "and 'Color ramps' can be used to create the symbols (see defining_symbols_)."
#~ " The symbols are assigned to 'All Symbols', 'Groups' or 'Smart groups' then."
#~ msgstr ""

#~ msgid ""
#~ "The Single Symbol Renderer is used to render all features of the layer using"
#~ " a single user-defined symbol. The properties, that can be adjusted in the "
#~ ":guilabel:`Style` menu, depend partially on the type of the layer, but all "
#~ "types share the following structure. In the top left part of the tab, there "
#~ "is a preview of the current symbol to be rendered. On the right part of the "
#~ "tab, there is a list of symbols already defined for the current style, "
#~ "prepared to be used via selecting them from the list. The current symbol can"
#~ " be modified using the menu on the right side. If you click on the first "
#~ "level in the :guilabel:`Symbol layers` dialog on the left side it's possible"
#~ " to define basic parameters like :guilabel:`Size`, :guilabel:`Transparency`,"
#~ " :guilabel:`Color` and :guilabel:`Rotation`. Here the layers are joined "
#~ "together."
#~ msgstr ""

#~ msgid ""
#~ "In the case of the text diagram and piechart text values ​​of different data"
#~ " columns are displayed one below the other with a circle or a box and "
#~ "dividers. In the :guilabel:`Size` tab diagram size is based on a fixed size "
#~ "or on linear scaling according to a classification attribute. The placement "
#~ "of the diagrams which is done in the :guilabel:`Position` tab interacts with"
#~ " the new labeling, so position conflicts between diagrams and labels are "
#~ "detected and solved. In addition to chart positions can be fixed by the "
#~ "users hand."
#~ msgstr ""

#~ msgid ""
#~ "Subtract: This blend mode simply subtracts pixel values of one layer with "
#~ "the other. In case of negative values, black is displayed."
#~ msgstr ""

#~ msgid ""
#~ "You can create a custom color ramp choosing :menuselection:`New color "
#~ "ramp...` from the :guilabel:`Color ramp` dropdown menu. A dialog will prompt"
#~ " for the ramp type: Gradient, Random, ColorBrewer, then each one has options"
#~ " for number of steps and/or multiple stops in the color ramp. See "
#~ "figure_symbology_3_ for an example of custom color ramp."
#~ msgstr ""

#~ msgid ""
#~ "|labels| |qg| 2.0.0 currently provides a new and a deprecated labeling "
#~ "engine in parallel. The :guilabel:`Layer Properties` still contains the "
#~ ":guilabel:`Labels (deprecated)`. The new labeling is implemented as a core "
#~ "application and will replace the features of the :guilabel:`Labels "
#~ "(deprecated)` menu in one of the next versions."
#~ msgstr ""

#~ msgid ""
#~ "We recommend to switch to the new labeling, described in section "
#~ ":ref:`vector_new_labeling`."
#~ msgstr ""

#~ msgid "New Labeling"
#~ msgstr ""

#~ msgid ""
#~ "The new |mActionLabeling| :sup:`Labels` core application provides smart "
#~ "labeling for vector point, line and polygon layers and only requires a few "
#~ "parameters. This new application will replace the current QGIS labeling, "
#~ "described in section :ref:`vector_labels_tab` and also supports on-the-fly "
#~ "transformated layers. The core functions of the application have been "
#~ "redesigned. In QGIS 2.0.0. there are now a number of other features which "
#~ "improve the labeling. The following menus have been created for labeling the"
#~ " vector layers:"
#~ msgstr ""

#~ msgid ""
#~ "The deprecated labeling in the :guilabel:`Labels` tab allows you to enable "
#~ "labeling features and control a number of options related to fonts, "
#~ "placement, style, alignment and buffering. We will illustrate this by "
#~ "labeling the lakes shapefile of the QGIS sample dataset:"
#~ msgstr ""

#~ msgid ""
#~ "View or change the projection of the specific vector layer, clicking on "
#~ ":guilabel:`Specify CRS`"
#~ msgstr ""

#~ msgid "Metadata tab in vector layers properties dialog |nix|"
#~ msgstr ""

#~ msgid "Vector properties dialog with diagram tab |nix|"
#~ msgstr ""

#~ msgid "New_Labeling"
#~ msgstr ""

#~ msgid "Smart_Labeling"
#~ msgstr ""
