# 
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 2.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-08 13:23+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/docs/developers_guide/codingstandards.rst:9
msgid "QGIS Coding Standards"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:14
msgid "These standards should be followed by all QGIS developers."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:17
msgid "Classes"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:21
#: ../../source/docs/developers_guide/codingstandards.rst:147
msgid "Names"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:23
msgid "Class in QGIS begin with Qgs and are formed using camel case."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:25
#: ../../source/docs/developers_guide/codingstandards.rst:126
#: ../../source/docs/developers_guide/codingstandards.rst:198
msgid "Examples:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:27
msgid "``QgsPoint``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:28
msgid "``QgsMapCanvas``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:29
msgid "``QgsRasterLayer``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:33
msgid "Members"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:36
msgid ""
"Class member names begin with a lower case m and are formed using mixed "
"case."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:39
msgid "``mMapCanvas``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:40
msgid "``mCurrentExtent``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:42
msgid ""
"All class members should be private. Public class members are STRONGLY "
"discouraged. Protected members should be avoided when the member may need to"
" be accessed from Python subclasses, since protected members cannot be used "
"from the Python bindings."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:47
msgid ""
"Mutable static class member names should begin with a lower case s, but "
"constant static class member names should be all caps:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:50
msgid "``sRefCounter``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:51
msgid "``DEFAULT_QUEUE_SIZE``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:55
msgid "Accessor Functions"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:58
msgid ""
"Class member values should be obtained through accesssor functions. The "
"function should be named without a get prefix. Accessor functions for the "
"two private members above would be:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:62
msgid "``mapCanvas()``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:63
msgid "``currentExtent()``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:65
msgid ""
"Ensure that accessors are correctly marked with ``const``. Where "
"appropriate, this may require that cached value type member variables are "
"marked with ``mutable``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:70
msgid "Functions"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:73
msgid ""
"Function names begin with a lowercase letter and are formed using mixed "
"case. The function name should convey something about the purpose of the "
"function."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:76
msgid "``updateMapExtent()``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:77
msgid "``setUserOptions()``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:79
msgid ""
"For consistency with the existing QGIS API and with the Qt API, "
"abbreviations should be avoided. E.g. ``setDestinationSize`` instead of "
"``setDestSize``, ``setMaximumValue`` instead of ``setMaxVal``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:83
msgid ""
"Acronyms should also be camel cased for consistency. E.g. ``setXml`` instead"
" of ``setXML``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:88
msgid "Function Arguments"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:91
msgid ""
"Function arguments should use descriptive names. Do not use single letter "
"argments (e.g. ``setColor( const QColor& color )`` instead of ``setColor( "
"const QColor& c )``)."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:95
msgid ""
"Pay careful attention to when arguments should be passed by reference. "
"Unless argument objects are small and trivially copied (such as QPoint "
"objects), they should be passed by const reference. For consistency with the"
" Qt API, even implicitly shared objects are passed by const reference (e.g. "
"``setTitle( const QString& title )`` instead of ``setTitle( QString title "
")``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:104
msgid "Function Return Values"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:106
msgid ""
"Return small and trivially copied objects as values. Larger objects should "
"be returned by const reference. The one exception to this is implicitly "
"shared objects, which are always returned by value."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:110
msgid "``int maximumValue() const``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:111
msgid "``const LayerSet& layers() const``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:112
msgid "``QString title() const`` (QString is implicitly shared)"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:113
msgid "``QList< QgsMapLayer* > layers() const`` (QList is implicitly shared)"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:118
msgid "Qt Designer"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:121
msgid "Generated Classes"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:123
msgid ""
"QGIS classes that are generated from Qt Designer (ui) files should have a "
"Base suffix. This identifies the class as a generated base class."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:128
msgid "``QgsPluginManagerBase``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:129
msgid "``QgsUserOptionsBase``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:133
msgid "Dialogs"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:135
msgid ""
"All dialogs should implement tooltip help for all toolbar icons and other "
"relevant widgets. Tooltips add greatly to feature discoverability for both "
"new and experienced users."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:139
msgid ""
"Ensure that the tab order for widgets is updated whenever the layout of a "
"dialog changes."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:144
msgid "C++ Files"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:149
msgid ""
"C++ implementation and header files should have a .cpp and .h extension "
"respectively. Filename should be all lowercase and, in the case of classes, "
"match the class name."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:153
msgid ""
"Example: Class ``QgsFeatureAttribute`` source files are "
"``qgsfeatureattribute.cpp`` and ``qgsfeatureattribute.h``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:157
msgid ""
"In case it is not clear from the statement above, for a filename to match a "
"class name it implicitly means that each class should be declared and "
"implemented in its own file. This makes it much easier for newcomers to "
"identify where the code is relating to specific class."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:164
msgid "Standard Header and License"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:166
msgid ""
"Each source file should contain a header section patterned after the "
"following example:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:186
msgid ""
"There is a template for Qt Creator in git. To use it, copy it from "
":file:`doc/qt_creator_license_template` to a local location, adjust the mail"
" address and - if required - the name and configure QtCreator to use it: "
":menuselection:`Tools --> Options --> C++ --> File Naming`."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:193
msgid "Variable Names"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:195
msgid ""
"Local variable names begin with a lower case letter and are formed using "
"mixed case. Do not use prefixes like ``my`` or ``the``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:200
msgid "``mapCanvas``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:201
msgid "``currentExtent``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:205
msgid "Enumerated Types"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:207
msgid ""
"Enumerated types should be named in CamelCase with a leading capital e.g.:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:219
msgid ""
"Do not use generic type names that will conflict with other types. e.g. use "
"``UnkownUnit`` rather than ``Unknown``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:223
msgid "Global Constants & Macros"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:225
msgid ""
"Global constants and macros should be written in upper case underscore "
"separated e.g.:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:233
msgid "Qt Signals and Slots"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:235
msgid ""
"All signal/slot connects should be made using the \"new style\" connects "
"available in Qt5. Futher information on this requirement is available in "
"`QEP #77 <https://github.com/qgis/QGIS-Enhancement-Proposals/issues/77>`_."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:239
msgid ""
"Avoid use of Qt auto connect slots (i.e. those named ``void "
"on_mSpinBox_valueChanged``). Auto connect slots are fragile and prone to "
"breakage without warning if dialogs are refactored."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:245
msgid "Editing"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:247
msgid ""
"Any text editor/IDE can be used to edit QGIS code, providing the following "
"requirements are met."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:251
msgid "Tabs"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:253
msgid ""
"Set your editor to emulate tabs with spaces. Tab spacing should be set to 2 "
"spaces."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:256
msgid "In vim this is done with ``set expandtab ts=2``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:259
msgid "Indentation"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:261
msgid ""
"Source code should be indented to improve readability. There is a ``scripts"
"/prepare-commit.sh`` that looks up the changed files and reindents them "
"using astyle. This should be run before committing. You can also use "
"``scripts/astyle.sh`` to indent individual files."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:266
msgid ""
"As newer versions of astyle indent differently than the version used to do a"
" complete reindentation of the source, the script uses an old astyle "
"version, that we include in our repository (enable WITH_ASTYLE in cmake to "
"include it in the build)."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:272
msgid "Braces"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:274
msgid "Braces should start on the line following the expression:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:290
msgid "API Compatibility"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:292
msgid "There is `API documentation <http://qgis.org/api/>`_ for C++."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:294
msgid ""
"We try to keep the API stable and backwards compatible. Cleanups to the API "
"should be done in a manner similar to the Qt sourcecode e.g."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:330
msgid "Coding Style"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:333
msgid ""
"Here are described some programming hints and tips that will hopefully "
"reduce errors, development time and maintenance."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:338
msgid "Where-ever Possible Generalize Code"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:341
msgid ""
"If you are cut-n-pasting code, or otherwise writing the same thing more than"
" once, consider consolidating the code into a single function."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:344
msgid "This will:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:346
msgid "allow changes to be made in one location instead of in multiple places"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:347
msgid "help prevent code bloat"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:348
msgid ""
"make it more difficult for multiple copies to evolve differences over time, "
"thus making it harder to understand and maintain for others"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:353
msgid "Prefer Having Constants First in Predicates"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:355
msgid "Prefer to put constants first in predicates."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:357
msgid "``0 == value`` instead of ``value == 0``"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:359
msgid ""
"This will help prevent programmers from accidentally using ``=`` when they "
"meant to use ``==``, which can introduce very subtle logic bugs. The "
"compiler will generate an error if you accidentally use ``=`` instead of "
"``==`` for comparisons since constants inherently cannot be assigned values."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:365
msgid "Whitespace Can Be Your Friend"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:367
msgid ""
"Adding spaces between operators, statements, and functions makes it easier "
"for humans to parse code."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:370
msgid "Which is easier to read, this:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:376
msgid "or this:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:382
msgid "``scripts/prepare-commit.sh`` will take care of this."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:386
msgid "Put commands on separate lines"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:388
msgid ""
"When reading code it's easy to miss commands, if they are not at the "
"beginning of the line. When quickly reading through code, it's common to "
"skip lines if they don't look like what you are looking for in the first few"
" characters. It's also common to expect a command after a conditional like "
"``if``."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:393
msgid "Consider:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:401
msgid "It's very easy to miss part of what the flow of control. Instead use"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:413
msgid "Indent access modifiers"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:415
msgid ""
"Access modifiers structure a class into sections of public API, protected "
"API and private API. Access modifiers themselves group the code into this "
"structure. Indent the access modifier and declarations."
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:432
msgid "Book recommendations"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:435
msgid ""
"`Effective Modern C++ <http://shop.oreilly.com/product/0636920033707.do>`_, "
"Scott Meyers"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:436
msgid ""
"`More Effective C++ <http://www.informit.com/store/more-effective-c-plus-"
"plus-35-new-ways-to-improve-your-9780201633719>`_, Scott Meyers"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:437
msgid ""
"`Effective STL <http://www.informit.com/store/effective-stl-50-specific-"
"ways-to-improve-your-use-9780201749625>`_, Scott Meyers"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:438
msgid ""
"`Design Patterns <http://www.amazon.com/Design-Patterns-Elements-Reusable-"
"Object-Oriented/dp/0201633612>`_, GoF"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:440
msgid ""
"You should also really read this article from Qt Quarterly on `designing Qt "
"style (APIs) <https://doc.qt.io/archives/qq/qq13-apis.html>`_"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:445
msgid "Credits for contributions"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:447
msgid ""
"Contributors of new functions are encouraged to let people know about their "
"contribution by:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:449
msgid ""
"adding a note to the changelog for the first version where the code has been"
" incorporated, of the type::"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:455
msgid ""
"writing an article about the new feature on a blog, and add it to the QGIS "
"planet http://plugins.qgis.org/planet/"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:457
msgid "adding their name to:"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:459
msgid "https://github.com/qgis/QGIS/blob/master/doc/CONTRIBUTORS"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:460
msgid "https://github.com/qgis/QGIS/blob/master/doc/AUTHORS"
msgstr ""

#: ../../source/docs/developers_guide/codingstandards.rst:461
msgid "https://github.com/qgis/QGIS/blob/master/doc/contributors.json"
msgstr ""
