# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# 
# Translators:
# Alessandro Fanna <alex@rospus.org>, 2014
# Eugenio <qfasser@gmail.com>, 2015
# matteo ghetta <matteo.ghetta@gmail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-26 14:10\n"
"PO-Revision-Date: 2016-07-18 09:37+0000\n"
"Last-Translator: Richard Duivenvoorde <richard@duif.net>\n"
"Language-Team: Italian (http://www.transifex.com/qgis/qgis-documentation/language/it/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# a1362793eebb429f9e3cfa4ffa34a46a
#: ../../source/docs/user_manual/processing/console.rst:8
msgid "Using processing algorithms from the console"
msgstr "Usare gli algoritmi di Processing dalla console dei comandi"

# 450a9219215447178b0a02dd9f255a58
#: ../../source/docs/user_manual/processing/console.rst:26
msgid ""
"The code that you can execute from the Python console, even if it does not "
"call any specific processing method, can be converted into a new algorithm "
"that you can later call from the toolbox, the graphical modeler or any other"
" component, just like you do with any other algorithm. In fact, some "
"algorithms that you can find in the toolbox are simple scripts."
msgstr "Il codice che puoi eseguire dalla console di python, anche se non richiama un metodo specifico di Processing, può essere convertito in un nuovo algoritmo che potrai richiamare in seguito dagli Strumenti, dal Modellatore grafico o da qualunque altra parte, proprio come ogni altro algoritmo. Alcuni algoritmi che trovi in Strumenti sono in effetti degli script semplici."

# f81eeabbb6424ee0afc7fedf3c6159ae
#: ../../source/docs/user_manual/processing/console.rst:36
msgid "Calling algorithms from the Python console"
msgstr "Richiamare algoritmi dalla console di python"

# 8da1efcdb76c44278f885fedaa3fa94f
#: ../../source/docs/user_manual/processing/console.rst:38
msgid ""
"The first thing you have to do is to import the processing functions with "
"the following line:"
msgstr "La prima cosa da fare è importare le funzioni di Processing con la seguente istruzione:"

# 790008553c664701b7957d56e6e6312b
#: ../../source/docs/user_manual/processing/console.rst:58
msgid "You will see something like this."
msgstr "Il risultato dovrebbe essere."

# 54cf61a685374707813845a74252d135
#: ../../source/docs/user_manual/processing/console.rst:81
msgid ""
"That's a list of all the available algorithms, alphabetically ordered, along"
" with their corresponding command-line names."
msgstr "Questa è l'elenco di tutti gli algoritmi disponibili in ordine alfabetico, con il corrispondente nome da utilizzare nella riga di comando."

# ffe17d1c249d4eb4869175aa9770ca82
#: ../../source/docs/user_manual/processing/console.rst:99
msgid ""
"This result might change depending on the algorithms you have available."
msgstr "Il risultato potrebbe cambiare a seconda degli algoritmi disponibili."

# d8e5878b23ef4b76a7164a1ab73500e0
#: ../../source/docs/user_manual/processing/console.rst:101
msgid ""
"It is easier now to find the algorithm you are looking for and its command-"
"line name, in this case ``saga:slopeaspectcurvature``."
msgstr "Ora è più facile ora trovare sia l'algoritmo che cercavi sia il suo nome da utilizzare nella riga di comando, in questo caso ``saga: slopeaspectcurvature``."

# 4b0b2fdb6f554494815f758129bf70bd
#: ../../source/docs/user_manual/processing/console.rst:127
msgid ""
"Now you have everything you need to run any algorithm. As we have already "
"mentioned, there is only one single command to execute algorithms: "
"``runalg()``. Its syntax is as follows:"
msgstr "Ora hai tutto il necessario per eseguire qualsiasi algoritmo. Come già accennato, c'è solo un unico comando per eseguire algoritmi: `` runalg () ``. La sua sintassi è la seguente:"

# d53e581b54564b6db6dfb95b2799b8d2
#: ../../source/docs/user_manual/processing/console.rst:136
msgid ""
"The list of parameters and outputs to add depends on the algorithm you want "
"to run, and is exactly the list that the ``alghelp()`` method gives you, in "
"the same order as shown."
msgstr "L'elenco dei parametri e degli output da aggiungere dipende dall'algoritmo che vuoi eseguire, ed è esattamente la lista che il comando ``alghelp()`` restituisce, nello stesso ordine, come mostrato."

# f4717d4423f84f4ba804e9604caf2cf8
#: ../../source/docs/user_manual/processing/console.rst:149
msgid ""
"Selection. If an algorithm has a selection parameter, the value of that "
"parameter should be entered using an integer value. To know the available "
"options, you can use the ``algoptions()`` command, as shown in the following"
" example:"
msgstr "Selezione. Se un algoritmo ha un parametro di selezione, dovresti inserire il valore di questo parametro usando un valore intero. Per conoscere le opzioni disponibili puoi usare il comando ``algoptions()`` come mostrato nel seguenti esempio:"

# 200eadd944114022960da57e11aafbf2
#: ../../source/docs/user_manual/processing/console.rst:171
msgid ""
"Table Field from XXX. Use a string with the name of the field to use. This "
"parameter is case-sensitive."
msgstr "Campo di una Tabella da XXX. Inserisci una stringa con il nome del campo da usare. Il parametro è sensibile alle lettere maiuscole."

# 57fb7029ca3442f3bf0450a295806058
#: ../../source/docs/user_manual/processing/console.rst:176
msgid "CRS. Enter the EPSG code number of the desired CRS."
msgstr "SR. Inserisci il codice EPSG del SR desiderato."

# a43f17dd9ddd467d84048132455f6ab1
#: ../../source/docs/user_manual/processing/console.rst:177
msgid ""
"Extent. You must use a string with ``xmin``, ``xmax``, ``ymin`` and ``ymax``"
" values separated by commas (``,``)."
msgstr "Estensione. Usa un stringa con valori ``xmin``, ``xmax``, ``ymin`` e ``ymax`` separati da virgole (``,``)."

# 4c1a0b56041b49bda8834df8666ebc7e
#: ../../source/docs/user_manual/processing/console.rst:180
msgid ""
"Boolean, file, string and numerical parameters do not need any additional "
"explanations."
msgstr "Parametri booleani, di file, di stringa e numerici non hanno bisogno di ulteriori spiegazioni."

# 8478edf297ea4a018f558e84a3cfa73a
#: ../../source/docs/user_manual/processing/console.rst:205
msgid "Additional functions for handling data"
msgstr "Funzioni aggiuntive per la gestione dei dati"

# 00443acdb1984e37b1066169a576d1e9
#: ../../source/docs/user_manual/processing/console.rst:231
msgid "Creating scripts and running them from the toolbox"
msgstr "Creare script ed eseguirli da Strumenti "

# 54448587f51b42eeb0478a1a69ed7ead
#: ../../source/docs/user_manual/processing/console.rst:242
msgid ""
"The name of the algorithm (the one you will see in the toolbox) is created "
"from the filename, removing its extension and replacing low hyphens with "
"blank spaces."
msgstr "Il nome dell'algoritmo (quello che vedrai in Strumenti) viene creato dal nome del file, rimuovendo l'estensione del file e sostituendo i trattini bassi con spazi vuoti."

# 1cf52f535ad349e49c724b6cb9a5dc41
#: ../../source/docs/user_manual/processing/console.rst:264
msgid ""
"The part of the code where this processing takes place is not difficult to "
"understand if you have read the previous sections in this chapter. The first"
" lines, however, need some additional explanation. They provide the "
"information that is needed to turn your code into an algorithm that can be "
"run from any of the GUI components, like the toolbox or the graphical "
"modeler."
msgstr "La parte del codice in cui avviene questo processo non è difficile da capire, una volta lette le sezioni precedenti di questo capitolo. Le prime linee, tuttavia, hanno bisogno di qualche spiegazione aggiuntiva. Queste forniscono a Processing le informazioni di cui ha bisogno per trasformare il codice in un algoritmo che potrai eseguire da uno dei suoi componenti, come gli Strumenti o il modellatore grafico."

# 4321e05596b74b4d8f18e039a7e91e8e
#: ../../source/docs/user_manual/processing/console.rst:289
msgid "``multiple raster``. A set of input raster layers."
msgstr "``multiple raster``. Un insieme di raster in input. "

# 08e43d4da8f24fa7a86df769532e63e3
#: ../../source/docs/user_manual/processing/console.rst:290
msgid "``multiple vector``. A set of input vector layers."
msgstr " ``multiple vector``. Un insieme di vettori in input. "

# a7cf68f9b508432f91649e2fd59cb859
#: ../../source/docs/user_manual/processing/console.rst:291
msgid ""
"``field``. A field in the attributes table of a vector layer. The name of "
"the layer has to be added after the ``field`` tag. For instance, if you have"
" declared a vector input with ``mylayer=vector``, you could use "
"``myfield=field mylayer`` to add a field from that layer as parameter."
msgstr "``field``. Un campo nella tabella degli attributi di un vettore. Il nome del vettore deve essere aggiunto dopo il tag ``field``.  Ad esempio, una volta chiamato il vettore in input con ``mylayer=vector``, puoi usare ``myfield=field mylayer`` per aggiungere come parametro un campo di quel vettore."

# 111226001f1c47fda77b383e034dac3d
#: ../../source/docs/user_manual/processing/console.rst:298
msgid ""
"The parameter name is the name that will be shown to the user when executing"
" the algorithm, and also the variable name to use in the script code. The "
"value entered by the user for that parameter will be assigned to a variable "
"with that name."
msgstr "Il nome del parametro è il nome che ti verrà mostrato durante l'esecuzione dell'algoritmo, ed è anche il nome della variabile da usare nel codice dello script. Il valore che hai inserito per quel parametro sarà assegnato a una variabile con quel nome."

# b3f5083bc8ae4468adb452562346d4e4
#: ../../source/docs/user_manual/processing/console.rst:312
msgid "Outputs are defined in a similar manner, using the following tags:"
msgstr "Gli output sono definiti in maniera simile, usando i seguenti tag:"

# daa7b748dace41a2ab6e542e85760f08
#: ../../source/docs/user_manual/processing/console.rst:314
msgid "``output raster``"
msgstr "``output raster``"

# a85b75243e004b81b1759ebf3664e93c
#: ../../source/docs/user_manual/processing/console.rst:315
msgid "``output vector``"
msgstr "``output vector``"

# 7fb9fb7192214cbab1d7e82a6aa91630
#: ../../source/docs/user_manual/processing/console.rst:316
msgid "``output table``"
msgstr "``output table``"

# dcd7e4ad4a4f4fce882679f13ad46a49
#: ../../source/docs/user_manual/processing/console.rst:317
msgid "``output html``"
msgstr "``output html``"

# eb44ae6858484dac8bc8e484d576c65d
#: ../../source/docs/user_manual/processing/console.rst:318
msgid "``output file``"
msgstr "``output file``"

# 20e0ef154d0e406dacbbcc46d9b80131
#: ../../source/docs/user_manual/processing/console.rst:319
msgid "``output number``"
msgstr "``output number``"

# 6cf38ae1b6294fd384cf09c65bbcff39
#: ../../source/docs/user_manual/processing/console.rst:320
msgid "``output string``"
msgstr "``output string``"

# f5e9ecf5e71e4927a5f541e1bf1daf29
#: ../../source/docs/user_manual/processing/console.rst:347
msgid "the following line will set the value of the output to 5:"
msgstr "la linea seguente imposterà il valore dell'output a 5:"

# cf3972bd96264d57a7f7969597ccbfdd
#: ../../source/docs/user_manual/processing/console.rst:353
msgid ""
"In addition to the tags for parameters and outputs, you can also define the "
"group under which the algorithm will be shown, using the ``group`` tag."
msgstr "Oltre ai tag per i parametri e gli output, è anche possibile definire il gruppo in cui verrà mostrato l'algoritmo, utilizzando il tag ``group``."

# 2e67e747e09a46868ab6618541e61be3
#: ../../source/docs/user_manual/processing/console.rst:367
msgid "Documenting your scripts"
msgstr "Documentare gli script"

# 6ec4cfaa48444d46bdbc7b8fc70f651b
#: ../../source/docs/user_manual/processing/console.rst:383
msgid "Pre- and post-execution script hooks"
msgstr "Script agganciati pre e post esecuzione"

# 73558b845fe7429684f1847c0e96e153
#: ../../source/docs/user_manual/processing/console.rst:385
msgid ""
"Scripts can also be used to set pre- and post-execution hooks that are run "
"before and after an algorithm is run. This can be used to automate tasks "
"that should be performed whenever an algorithm is executed."
msgstr "Gli script possono essere usati come agganci pre e post esecuzione di funzioni prima e dopo che un algoritmo venga eseguito. Li puoi usare per automatizzare dei compiti da espletare all'esecuzione di un algoritmo."

# 98066e72385e452da6f872aeaabf28f7
#: ../../source/docs/user_manual/processing/console.rst:389
msgid ""
"The syntax is identical to the syntax explained above, but an additional "
"global variable named ``alg`` is available, representing the algorithm that "
"has just been (or is about to be) executed."
msgstr "La sintassi è identica alla sintassi spiegato sopra, ma hai a disposizione anche una variabile globale chiamata ``alg`` che rappresenta l'algoritmo che è appena (o che sarà) stato eseguito."

#: ../../source/docs/user_manual/processing/console.rst:207
msgid ""
"Apart from the functions used to call algorithms, importing the "
"``processing`` package will also import some additional functions that make "
"it easier to work with data, particularly vector data. They are just "
"convenience functions that wrap some functionality from the QGIS API, "
"usually with a less complex syntax. These functions should be used when "
"developing new algorithms, as they make it easier to operate with input "
"data."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:5
msgid "|updatedisclaimer|"
msgstr "|updatedisclaimer|"

#: ../../source/docs/user_manual/processing/console.rst:15
msgid ""
"The console allows advanced users to increase their productivity and perform"
" complex operations that cannot be performed using any of the other GUI "
"elements of the processing framework. Models involving several algorithms "
"can be defined using the command-line interface, and additional operations "
"such as loops and conditional sentences can be added to create more flexible"
" and powerful workflows."
msgstr "La console permette ad utenti esperti di aumentare la propria produttività e di eseguire operazioni complesse che non possono essere eseguite utilizzando uno qualsiasi degli altri elementi dell'interfaccia grafica di Processing. I modelli che richiamano diversi algoritmi possono essere definiti utilizzando l'interfaccia della riga di comando, e le operazioni aggiuntive, come i loop e le frasi condizionali possono essere aggiunte per creare flussi di lavoro più flessibili e potenti. "

#: ../../source/docs/user_manual/processing/console.rst:21
msgid ""
"There is not a processing console in QGIS, but all processing commands are "
"available instead from the QGIS built-in Python console. That means that you"
" can incorporate those commands into your console work and connect "
"processing algorithms to all the other features (including methods from the "
"QGIS API) available from there."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:32
msgid ""
"In this section, we will see how to use processing algorithms from the QGIS "
"Python console, and also how to write algorithms using Python."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:45
msgid ""
"Now, there is basically just one (interesting) thing you can do with that "
"from the console: execute an algorithm. That is done using the ``runalg()`` "
"method, which takes the name of the algorithm to execute as its first "
"parameter, and then a variable number of additional parameters depending on "
"the requirements of the algorithm. So the first thing you need to know is "
"the name of the algorithm to execute. That is not the name you see in the "
"toolbox, but rather a unique command–line name. To find the right name for "
"your algorithm, you can use the ``algslist()`` method. Type the following "
"line in your console:"
msgstr "Fondamentalmente, c'è solo una cosa (interessante) che puoi fare dalla console: eseguire un algoritmo. Questo viene fatto usando il comando ``runalg()``, che prende il nome dell'algoritmo da eseguire come primo parametro, e poi un numero variabile di parametri aggiuntivi che dipendono da ciò che è richiesto dall'algoritmo. Quindi la prima cosa che devi sapere è il nome dell'algoritmo da eseguire. Questo non è il nome che è riportato in Strumenti, ma un nome univoco da richiamare nella da riga di comando. Per trovare il nome corretto dell'algoritmo, puoi usare il comando ``algslist()``. Inserisci il seguente comando nella console:"

#: ../../source/docs/user_manual/processing/console.rst:84
msgid ""
"You can use a string as a parameter for this method. Instead of returning "
"the full list of algorithms, it will only display those that include that "
"string. If, for instance, you are looking for an algorithm to calculate "
"slope from a DEM, type ``alglist(\"slope\")`` to get the following result:"
msgstr "Puoi usare una stringa come parametro per questo comando. Invece di restituire l'elenco completo degli algoritmi, verranno visualizzati solo quelli che includono tale stringa. Se, per esempio, stai cercando un algoritmo per calcolare la pendenza da un DEM, inserisci ``alglist (\"slope\")`` per ottenere il seguente risultato:"

#: ../../source/docs/user_manual/processing/console.rst:104
msgid ""
"Once you know the command-line name of the algorithm, the next thing to do "
"is to determine the right syntax to execute it. That means knowing which "
"parameters are needed and the order in which they have to be passed when "
"calling the ``runalg()`` method. There is a method to describe an algorithm "
"in detail, which can be used to get a list of the parameters that an "
"algorithm requires and the outputs that it will generate. To get this "
"information, you can use the ``alghelp(name_of_the_algorithm)`` method. Use "
"the command-line name of the algorithm, not the full descriptive name."
msgstr "Una volta che sai qual è il nome dell'algoritmo da utilizzare nella riga di comando, la prossima cosa da fare è conoscere la giusta sintassi per eseguirlo. Questo significa conoscere quali sono i parametri necessari e l'ordine in cui questi devono essere dichiarati quando si esegue il comando ``runalg ()``. Processing ha un comando per descrivere un algoritmo in dettaglio, che puoi usare per ottenere un elenco dei parametri che un algoritmo richiede e gli output che genererà. Puoi usare il comando  ``alghelp (nome_algoritmo)``. Usa solo il nome dell'algoritmo nella riga di comando, non il nome descrittivo completo."

#: ../../source/docs/user_manual/processing/console.rst:112
msgid ""
"Calling the method with ``saga:slopeaspectcurvature`` as parameter, you get "
"the following description:"
msgstr "Chiamando il metodo ``saga:slopeaspectcurvature`` come parametro, otterrai la seguente descrizione:"

#: ../../source/docs/user_manual/processing/console.rst:140
msgid ""
"Depending on the type of parameter, values are introduced differently. The "
"next list gives a quick review of how to introduce values for each type of "
"input parameter:"
msgstr "A seconda del tipo di parametro, i valori sono inseriti in maniera diversa. Il seguente elenco dà una rapida panoramica di come inserire valori per ogni tipo di parametro in input:"

#: ../../source/docs/user_manual/processing/console.rst:143
msgid ""
"Raster Layer, Vector Layer or Table. Simply use a string with the name that "
"identifies the data object to use (the name it has in the QGIS Table of "
"Contents) or a filename (if the corresponding layer is not opened, it will "
"be opened but not added to the map canvas). If you have an instance of a "
"QGIS object representing the layer, you can also pass it as parameter. If "
"the input is optional and you do not want to use any data object, use "
"``None``."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:166
msgid ""
"In this case, the algorithm has one such parameter, with seven options. "
"Notice that ordering is zero-based."
msgstr "In questo caso, l'algoritmo ha uno di questi parametri con sette opzioni, ordinate partendo da zero."

#: ../../source/docs/user_manual/processing/console.rst:168
msgid ""
"Multiple input. The value is a string with input descriptors separated by "
"semicolons (``;``). As in the case of single layers or tables, each input "
"descriptor can be the data object name, or its file path."
msgstr "Input multipli. Il valore è una stringa con descrittori in input separati da un punto e virgola (``;``). Come nel caso di layer singoli o tabelle, ogni descrittore in input può essere il nome dell'oggetto o il suo percorso."

#: ../../source/docs/user_manual/processing/console.rst:173
msgid ""
"Fixed Table. Type the list of all table values separated by commas (``,``) "
"and enclosed between quotes (``\"``). Values start on the upper row and go "
"from left to right. You can also use a 2-D array of values representing the "
"table."
msgstr "Tabella fissa. Inserisci l'elenco di tutti i valori delle tabelle separati da una virgola (``,``) e racchiusi fra virgolette (``\"``). I valori partono dalla riga in alto e proseguono da sinistra verso destra. Puoi usare un array 2-D per i valori che rappresentano la tabella."

#: ../../source/docs/user_manual/processing/console.rst:183
msgid ""
"Input parameters such as strings, booleans, or numerical values have default"
" values. To use them, specify ``None`` in the corresponding parameter entry."
msgstr "I parametri di input, come stringhe, booleani, o valori numerici hanno valori predefiniti. Per utilizzarli, specifica `` None`` nella corrispondente voce di parametro."

#: ../../source/docs/user_manual/processing/console.rst:186
msgid ""
"For output data objects, type the file path to be used to save it, just as "
"it is done from the toolbox. If you want to save the result to a temporary "
"file, use ``None``. The extension of the file determines the file format. If"
" you enter a file extension not supported by the algorithm, the default file"
" format for that output type will be used, and its corresponding extension "
"appended to the given file path."
msgstr "Per per salvare i dati in output, digita il percorso del file da utilizzare, così come viene fatto in Strumenti. Se vuoi salvare il risultato in un file temporaneo, utilizzare ``None``. L'estensione del file determina il formato del file. Se inserisci un'estensione del file non inclusa tra quelle supportate dall'algoritmo, verrà utilizzato il formato di file predefinito per il tipo di output e sarà aggiunta al percorso del file specificato la sua estensione corrispondente ."

#: ../../source/docs/user_manual/processing/console.rst:193
msgid ""
"Unlike when an algorithm is executed from the toolbox, outputs are not added"
" to the map canvas if you execute that same algorithm from the Python "
"console. If you want to add an output to the map canvas, you have to do it "
"yourself after running the algorithm. To do so, you can use QGIS API "
"commands, or, even easier, use one of the handy methods provided for such "
"tasks."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:199
msgid ""
"The ``runalg`` method returns a dictionary with the output names (the ones "
"shown in the algorithm description) as keys and the file paths of those "
"outputs as values. You can load those layers by passing the corresponding "
"file paths to the ``load()`` method."
msgstr "Il metodo ``runalg`` restituisce un dizionario con i nomi degli output (quelli visti nella descrizione dell'algoritmo) come chiavi e il percorso degli output come valori. Puoi caricare questi layer con il metodo ``load()``."

#: ../../source/docs/user_manual/processing/console.rst:214
msgid ""
"Below is a list of some of these commands. More information can be found in "
"the classes under the ``processing/tools`` package, and also in the example "
"scripts provided with QGIS."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:218
msgid ""
"``getObject(obj)``: Returns a QGIS object (a layer or table) from the passed"
" object, which can be a filename or the name of the object in the QGIS "
"Layers List"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:220
msgid ""
"``values(layer, fields)``: Returns the values in the attributes table of a "
"vector layer, for the passed fields. Fields can be passed as field names or "
"as zero-based field indices. Returns a dict of lists, with the passed field "
"identifiers as keys. It considers the existing selection."
msgstr "``values(layer, fields)``: restituisce i valori nella tabella degli attributi di un vettore dei campi interessati. Puoi eseguire i campi come nome o come indici basati su zero. Restituisce un dict di elenchi, con gli identificatori dei campi come chiavi. Considera la selezione esistente."

#: ../../source/docs/user_manual/processing/console.rst:224
msgid ""
"``features(layer)``: Returns an iterator over the features of a vector "
"layer, considering the existing selection."
msgstr "``features(layer)``: ti restituisce un iteratore sulla geometria di vettore, considerando la selezione esistente."

#: ../../source/docs/user_manual/processing/console.rst:226
msgid ""
"``uniqueValues(layer, field)``: Returns a list of unique values for a given "
"attribute.  Attributes can be passed as a field name or a zero-based field "
"index. It considers the existing selection."
msgstr "``uniqueValues(layer, field)``: restituisce un elenco di valori unici per un dato attributo. Gli attributi possono essere un nome di campo o di un indice  con base zero. Considera la selezione esistente."

#: ../../source/docs/user_manual/processing/console.rst:233
msgid ""
"You can create your own algorithms by writing the corresponding Python code "
"and adding a few extra lines to supply additional information needed to "
"define the semantics of the algorithm. You can find a :guilabel:`Create new "
"script` menu under the :guilabel:`Tools` group in the :guilabel:`Script` "
"algorithms block of the toolbox. Double-click on it to open the script "
"editing dialog. That's where you should type your code. Saving the script "
"from there in the :file:`scripts` folder (the default folder when you open "
"the save file dialog) with :file:`.py` extension will automatically create "
"the corresponding algorithm."
msgstr "Puoi creare i tuoi algoritmi scrivendo il codice python corrispondente e aggiungendo solo poche righe extra che forniscono le informazioni sulla semantica dell'algoritmo. In :guilabel:`Strumenti` puoi trovare il menu :guilabel:`Crea nuovo script` nel gruppo :guilabel:`Script`. Se fai doppio click su questo menu di aprirà una finestra di dialogo dove potrai inserire il codice. Salvando lo script nella cartella :file:`scripts` (cartella predefinita per il salvataggio degli script) con l'estensione :file:`.py` verrà automaticamente creato l'algoritmo corrispondente."

#: ../../source/docs/user_manual/processing/console.rst:245
msgid ""
"Let's have a look at the following code, which calculates the Topographic "
"Wetness Index (TWI) directly from a DEM."
msgstr "Questo di seguito è il codice che calcola l'Indice di Umidità Topografica (Topographic Wetness Index, TWI) direttamente da un DEM."

#: ../../source/docs/user_manual/processing/console.rst:259
msgid ""
"As you can see, the calculation involves three algorithms, all of them "
"coming from SAGA. The last one calculates the TWI, but it needs a slope "
"layer and a flow accumulation layer. We do not have these layers, but since "
"we have the DEM, we can calculate them by calling the corresponding SAGA "
"algorithms."
msgstr "Come puoi vedere, durante il calcolo vengono usati tre algoritmi, tutti di SAGA. L'ultimo calcola il TWI, ma richiede un raster delle pendenze e uno di accumulo dei flussi. Anche se non hai questi layer, li puoi ricavare direttamente dal DEM grazie agli algoritmi di SAGA."

#: ../../source/docs/user_manual/processing/console.rst:270
msgid ""
"These lines start with a double Python comment symbol (``##``) and have the "
"following structure:"
msgstr "Queste righe iniziano con un doppio commento di python (``##``) a hanno la seguente struttura:"

#: ../../source/docs/user_manual/processing/console.rst:277
msgid ""
"Here is a list of all the parameter types that are supported in processing "
"scripts, their syntax and some examples."
msgstr "Ecco un elenco di tutti i tipi di parametri supportati dagli script di Processing, la loro sintassi ed alcuni esempi."

#: ../../source/docs/user_manual/processing/console.rst:280
msgid "``raster``. A raster layer."
msgstr "``raster``. Un raster."

#: ../../source/docs/user_manual/processing/console.rst:281
msgid "``vector``. A vector layer."
msgstr "``vector``. Un vettore."

#: ../../source/docs/user_manual/processing/console.rst:282
msgid "``table``. A table."
msgstr "``table``. Una tabella."

#: ../../source/docs/user_manual/processing/console.rst:283
msgid ""
"``number``. A numerical value. A default value must be provided. For "
"instance, ``depth=number 2.4``."
msgstr "``number``. Un valore numerico Devi fornire un valore predefinito, per esempio, ``depth=number 2.4``."

#: ../../source/docs/user_manual/processing/console.rst:285
msgid ""
"``string``. A text string. As in the case of numerical values, a default "
"value must be added. For instance, ``name=string Victor``."
msgstr "``string``. una stringa. Come per i valori numerici, devi fornire un valore predefinito, per esempio, ``name=string Victor``."

#: ../../source/docs/user_manual/processing/console.rst:287
msgid ""
"``boolean``. A boolean value. Add ``True`` or ``False`` after it to set the "
"default value. For example, ``verbose=boolean True``."
msgstr "``boolean``. un valore booleano. Aggiungi ``True`` o ``False`` dopo per scegliere il valore predefinito. Per esempio, ``verbose=boolean True``."

#: ../../source/docs/user_manual/processing/console.rst:295
msgid "``folder``. A folder."
msgstr "``folder``. Una cartella."

#: ../../source/docs/user_manual/processing/console.rst:296
msgid "``file``. A filename."
msgstr "``file``. Un nome di un file."

#: ../../source/docs/user_manual/processing/console.rst:302
msgid ""
"When showing the name of the parameter to the user, the name will be edited "
"to improve its appearance, replacing low hyphens with spaces. So, for "
"instance, if you want the user to see a parameter named ``A numerical "
"value``, you can use the variable name ``A_numerical_value``."
msgstr "Quando viene mostrato il nome del parametro, il nome verrà modificato per migliorare l'aspetto, sostituendo i trattini con degli spazi. Quindi, per esempio, se vuoi visualizzare il parametro ``A numerical value``, puoi inserire il nome della variabile anche cosi: ``A_numerical_value``."

#: ../../source/docs/user_manual/processing/console.rst:307
msgid ""
"Layers and table values are strings containing the file path of the "
"corresponding object. To turn them into a QGIS object, you can use the "
"``processing.getObjectFromUri()`` function. Multiple inputs also have a "
"string value, which contains the file paths to all selected object, "
"separated by semicolons (``;``)."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:322
msgid ""
"The value assigned to the output variables is always a string with a file "
"path. It will correspond to a temporary file path in case the user has not "
"entered any output filename."
msgstr "Il valore assegnati alle variabili in output è sempre una stringa con il percorso del file. Corrisponderà a un percorso temporaneo nel caso in cui non hai inserito il nome del file."

#: ../../source/docs/user_manual/processing/console.rst:326
msgid ""
"When you declare an output, the algorithm will try to add it to QGIS once it"
" is finished. That is why, although the ``runalg()`` method does not load "
"the layers it produces, the final TWI layer will be loaded (using the case "
"of our previous example), since it is saved to the file entered by the user,"
" which is the value of the corresponding output."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:332
msgid ""
"Do not use the ``load()`` method in your script algorithms, just when "
"working with the console line. If a layer is created as output of an "
"algorithm, it should be declared as such. Otherwise, you will not be able to"
" properly use the algorithm in the modeler, since its syntax (as defined by "
"the tags explained above) will not match what the algorithm really creates."
msgstr "Non usare il comando ``load()`` negli algoritmi degli script, usalo solo quando lavori con la riga di comando. Se un layer viene creato come output di un algoritmo, dovrebbe essere dichiarato come tale. Altrimenti non potrai usare l'algoritmo nel modellatore grafico dal momento che la sua sintassi (come definita dai tag spiegato sopra) non corrisponde a ciò che l'algoritmo in realtà crea."

#: ../../source/docs/user_manual/processing/console.rst:338
msgid ""
"Hidden outputs (numbers and strings) do not have a value. Instead, you have "
"to assign a value to them. To do so, just set the value of a variable with "
"the name you used to declare that output. For instance, if you have used "
"this declaration,"
msgstr "Gli output nascosti (numeri e stringhe) non hanno un valore. Sei tu che devi assegnarli un valore. Per farlo, basta impostare il valore di una variabile con il nome utilizzato per dichiarare quell'output. Per esempio, se hai usato questa dichiarazione,"

#: ../../source/docs/user_manual/processing/console.rst:356
msgid ""
"If your algorithm takes a long time to process, it is a good idea to inform "
"the user. You have a global named ``progress`` available, with two possible "
"methods: ``setText(text)`` and ``setPercentage(percent)`` to modify the "
"progress text and the progress bar."
msgstr "Se l'algoritmo impiega molto tempo per essere eseguito, è una buona idea fornire questa informazione. Hai a disposizione due comandi globali denominati ``progress`` con due metodi disponibili : ``setText(text)`` e ``setPercentage(percent)`` per modificare il testo e la barra di avanzamento."

#: ../../source/docs/user_manual/processing/console.rst:361
msgid ""
"Several examples are provided. Please check them to see real examples of how"
" to create algorithms using the processing framework classes. You can right-"
"click on any script algorithm and select :guilabel:`Edit script` to edit its"
" code or just to see it."
msgstr "Ti abbiamo fornito diversi esempi. Controllali per vedere alcuni esempi reali di come creare algoritmi che utilizzano queste classi di Processing. Puoi fare clic con il tasto destro su un qualsiasi algoritmo e selezionare :guilabel:`Edit script` per modificare il codice o solo per vederlo."

#: ../../source/docs/user_manual/processing/console.rst:369
msgid ""
"As in the case of models, you can create additional documentation for your "
"scripts, to explain what they do and how to use them. In the script editing "
"dialog, you will find an **[Edit script help]** button. Click on it and it "
"will take you to the help editing dialog. Check the section about the "
"graphical modeler to know more about this dialog and how to use it."
msgstr "Come nel caso dei modelli, puoi creare una documentazione aggiuntiva per gli script, per spiegare che cosa fanno e come usarli. Nella finestra di modifica dello script trovi il pulsante **[Edit script help]**. Cliccaci per aprire una finestra di editing dell'help. Controlla il capitolo sul modellatore grafico per sapere di più su questa finestra di dialogo e come usarla."

#: ../../source/docs/user_manual/processing/console.rst:375
msgid ""
"Help files are saved in the same folder as the script itself, adding the "
":file:`.help` extension to the filename. Notice that you can edit your "
"script's help before saving the script for the first time. If you later "
"close the script editing dialog without saving the script (i.e., you discard"
" it), the help content you wrote will be lost. If your script was already "
"saved and is associated to a filename, saving the help content is done "
"automatically."
msgstr "Gli help file vengono salvati nella stessa cartella dello stesso script, aggiungendo l'estensione :file:`.help` al nome del file. Puoi modificare la guida dello script prima di salvarlo per la prima volta. Se in seguito chiudi la finestra di modifica dello script senza salvarlo (cioè lo scarti), perderai il contenuto già scritto della guida. Se hai già salvato lo script e se questo è associato ad un nome di file, il salvataggio è fatto automaticamente."

#: ../../source/docs/user_manual/processing/console.rst:393
msgid ""
"In the :guilabel:`General` group of the processing configuration dialog, you"
" will find two entries named :guilabel:`Pre-execution script file` and "
":guilabel:`Post-execution script file` where the filename of the scripts to "
"be run in each case can be entered."
msgstr "Nel gruppo :guilabel:`General` del menu di configurazione di Processing trovi due voci chiamate :guilabel:`Pre-execution script file` e :guilabel:`Post-execution script file` dove puoi inserire il nome del file dello script che deve essere eseguito."

#~ msgid ""
#~ "The console allows advanced users to increase their productivity and perform"
#~ " complex operations that cannot be performed using any of the other GUI "
#~ "elements of the processing framework GUI. Models involving several "
#~ "algorithms can be defined using the command-line interface, and additional "
#~ "operations such as loops and conditional sentences can be added to create "
#~ "more flexible and powerful workflows."
#~ msgstr ""

#~ msgid ""
#~ "Now, there is basically just one (interesting) thing you can do with that "
#~ "from the console: to execute an algorithm. That is done using the "
#~ "``runalg()`` method, which takes the name of the algorithm to execute as its"
#~ " first parameter, and then a variable number of additional parameter "
#~ "depending on the requirements of the algorithm. So the first thing you need "
#~ "to know is the name of the algorithm to execute. That is not the name you "
#~ "see in the toolbox, but rather a unique command–line name. To find the right"
#~ " name for your algorithm, you can use the ``algslist()`` method. Type the "
#~ "following line in you console:"
#~ msgstr ""

#~ msgid ""
#~ "You can use a string as a parameter for this method. Instead of returning "
#~ "the full list of algorithm, it will only display those that include that "
#~ "string. If, for instance, you are looking for an algorithm to calculate "
#~ "slope from a DEM, type ``alglist(\"slope\")`` to get the following result:"
#~ msgstr ""

#~ msgid ""
#~ "Once you know the command-line name of the algorithm, the next thing to do "
#~ "is to know the right syntax to execute it. That means knowing which "
#~ "parameters are needed and the order in which they have to be passed when "
#~ "calling the ``runalg()`` method. There is a method to describe an algorithm "
#~ "in detail, which can be used to get a list of the parameters that an "
#~ "algorithms require and the outputs that it will generate. To do it, you can "
#~ "use the ``alghelp(name_of_the_algorithm)`` method. Use the command-line name"
#~ " of the algorithm, not the full descriptive name."
#~ msgstr ""

#~ msgid ""
#~ "Calling the method with ``saga:slopeaspectcurvature`` as parameter, you get "
#~ "the following description."
#~ msgstr ""

#~ msgid ""
#~ "Depending on the type of parameter, values are introduced differently. The "
#~ "next one is a quick review of how to introduce values for each type of input"
#~ " parameter:"
#~ msgstr ""

#~ msgid ""
#~ "In this case, the algorithm has one of such such parameters, with 7 options."
#~ " Notice that ordering is zero-based."
#~ msgstr ""

#~ msgid ""
#~ "Multiple input. The value is a string with input descriptors separated by "
#~ "semicolons (``;``). As in the case of single layers or tables, each input "
#~ "descriptor can be the data object name, or its filepath."
#~ msgstr ""

#~ msgid ""
#~ "Fixed Table. Type the list of all table values separated by commas (``,``) "
#~ "and enclosed between quotes (``\"``). Values start on the upper row and go "
#~ "from left to right. You can also use a 2D array of values representing the "
#~ "table."
#~ msgstr ""

#~ msgid ""
#~ "Input parameters such as strings booleans or numerical values have default "
#~ "values. To use them, use ``None`` in the corresponding parameter entry."
#~ msgstr ""

#~ msgid ""
#~ "For output data objects, type the filepath to be used to save it, just as it"
#~ " is done from the toolbox. If you want to save the result to a temporary "
#~ "file, use ``None``. The extension of the file determines the file format. If"
#~ " you enter a file extension not included in the ones supported by the "
#~ "algorithm, the default file format for that output type will be used, and "
#~ "its corresponding extension appended to the given filepath."
#~ msgstr ""

#~ msgid ""
#~ "The ``runalg`` method returns a dictionary with the output names (the ones "
#~ "shown in the algorithm description) as keys and the filepaths of those "
#~ "outputs as values. You can load those layers by passing its filepath to the "
#~ "``load()`` method."
#~ msgstr ""

#~ msgid ""
#~ "``values(layer, fields)``: Returns the values in the attributes table of a "
#~ "vector layer, for the passed fields. Fields can be passed as field names or "
#~ "as zero-based field indices. Returns a dict of lists, with the passed field "
#~ "identifiers as keys. It considers the existing selection"
#~ msgstr ""

#~ msgid ""
#~ "``getfeatures(layer)``: Returns an iterator over the features of a vector "
#~ "layer, considering the existing selection."
#~ msgstr ""

#~ msgid ""
#~ "``uniquelabels(layer, field)``: Returns a list of unique values for a given "
#~ "attribute.  Attribute can be passed as a field name or a zero-based field "
#~ "index. It considers the existing selection"
#~ msgstr ""

#~ msgid ""
#~ "You can create your own algorithms by writing the corresponding Python code "
#~ "and adding a few extra lines to supply additional information needed to "
#~ "define the semantics of the algorithm. You can find a :guilabel:`Create new "
#~ "script` menu under the :guilabel:`Tools` group in the :guilabel:`Script` "
#~ "algorithms block of the toolbox. Double-click on it to open the script "
#~ "edition dialog. That's where you should type your code. Saving the script "
#~ "from there in the :file:`scripts` folder (the default one when you open the "
#~ "save file dialog), with :file:`.py` extension, will automatically create the"
#~ " corresponding algorithm."
#~ msgstr ""

#~ msgid ""
#~ "Let's have the following code, which calculates the Topographic Wetness "
#~ "Index (TWI) directly from a DEM"
#~ msgstr ""

#~ msgid ""
#~ "As you can see, it involves 3 algorithms, all of them coming from SAGA. The "
#~ "last one of them calculates the TWI, but it needs a slope layer and a flow "
#~ "accumulation layer. We do not have these ones, but since we have the DEM, we"
#~ " can calculate them calling the corresponding SAGA algorithms."
#~ msgstr ""

#~ msgid ""
#~ "These lines start with a double Python comment symbol (``##``) and have the "
#~ "following structure"
#~ msgstr ""

#~ msgid ""
#~ "Here is a list of all the parameter types that are supported in processign "
#~ "scripts, their syntax and some examples."
#~ msgstr ""

#~ msgid "``raster``. A raster layer"
#~ msgstr ""

#~ msgid "``vector``. A vector layer"
#~ msgstr ""

#~ msgid "``table``. A table"
#~ msgstr ""

#~ msgid ""
#~ "``number``. A numerical value. A default value must be provided. For "
#~ "instance, ``depth=number 2.4``"
#~ msgstr ""

#~ msgid ""
#~ "``string``. A text string. As in the case of numerical values, a default "
#~ "value must be added. For instance, ``name=string Victor``"
#~ msgstr ""

#~ msgid ""
#~ "``boolean``. A boolean value. Add ``True`` or ``False`` after it to set the "
#~ "default value. For example, ``verbose=boolean True``"
#~ msgstr ""

#~ msgid "``folder``. A folder"
#~ msgstr ""

#~ msgid "``file``. A filename"
#~ msgstr ""

#~ msgid ""
#~ "When showing the name of the parameter to the user, the name will be edited "
#~ "it to improve its appearance, replacing low hyphens with spaces. So, for "
#~ "instance, if you want the user to see a parameter named ``A numerical "
#~ "value``, you can use the variable name ``A_numerical_value``."
#~ msgstr ""

#~ msgid ""
#~ "The value assigned to the output variables is always a string with a "
#~ "filepath. It will correspond to a temporary filepath in case the user has "
#~ "not entered any output filename."
#~ msgstr ""

#~ msgid ""
#~ "Do not use the ``load()`` method in your script algorithms, but just when "
#~ "working with the console line. If a layer is created as output of an "
#~ "algorithm, it should be declared as such. Otherwise, you will not be able to"
#~ " properly use the algorithm in the modeler, since its syntax (as defined by "
#~ "the tags explained above) will not match what the algorithm really creates."
#~ msgstr ""

#~ msgid ""
#~ "Hidden outputs (numbers and strings) do not have a value. Instead, it is you"
#~ " who has to assign a value to them. To do so, just set the value of a "
#~ "variable with the name you used to declare that output. For instance, if you"
#~ " have used this declaration,"
#~ msgstr ""

#~ msgid ""
#~ "If you algorithm takes a long time to process, it is a good idea to inform "
#~ "the user. You have a global named ``progress`` available, with two available"
#~ " methods: ``setText(text)`` and ``setPercentage(percent)`` to modify the "
#~ "progress text and the progress bar."
#~ msgstr ""

#~ msgid ""
#~ "Several examples are provided. Please, check them to see real examples of "
#~ "how to create algorithms using the processing framework classes. You can "
#~ "right-click on any script algorithm and select :guilabel:`Edit script` to "
#~ "edit its code or just to see it."
#~ msgstr ""

#~ msgid ""
#~ "As in the case of models, you can create additional documentation for your "
#~ "script, to explain what they do and how to use them. In the script editing "
#~ "dialog you will find a **[Edit script help]** button. Click on it and it "
#~ "will take you to the help editing dialog. Check the chapter about the "
#~ "graphical modeler to know more about this dialog and how to use it."
#~ msgstr ""

#~ msgid ""
#~ "Help files are saved in the same folder as the script itself, adding the "
#~ ":file:`.help` extension to the filename. Notice that you can edit your "
#~ "script's help before saving it for the first time. If you later close the "
#~ "script editing dialog without saving the script (i.e. you discard it), the "
#~ "help content you wrote will be lost. If your script was already saved and is"
#~ " associated to a filename, saving is done automatically."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`General` group of the processing config dialog you will "
#~ "find two entries named :guilabel:`Pre-execution script file` and :guilabel"
#~ ":`Post-execution script file` where the filename of the scripts to be run in"
#~ " each case can be entered."
#~ msgstr ""

#~ msgid ""
#~ "There is not a proccesing console in |qg|, but all processing commands are "
#~ "available instead from the |qg| built-in Python console. That means that you"
#~ " can incorporate those command to your console work and connect processing "
#~ "algorithms to all the other features (including methods from the |qg| API) "
#~ "available from there."
#~ msgstr ""

#~ msgid ""
#~ "In this chapter we will see how to use processing algorithms from the |qg| "
#~ "Python console, and also how to write your own algorithms using Python."
#~ msgstr ""

#~ msgid ""
#~ "Raster Layer, Vector Layer or Table. Simply use a string with the name that "
#~ "identifies the data object to use (the name it has in the |qg| Table of "
#~ "Contents) or a filename (if the corresponding layer is not opened, it will "
#~ "be opened, but not added to the map canvas). If you have an instance of a "
#~ "|qg| object representing the layer, you can also pass it as parameter. If "
#~ "the input is optional and you do not want to use any data object, use "
#~ "``None``."
#~ msgstr ""

#~ msgid ""
#~ "Unlike when an algorithm is executed from the toolbox, outputs are not added"
#~ " to the map canvas if you execute that same algorithm from the Python "
#~ "Console. If you want to add an output to it, you have to do it yourself "
#~ "after running the algorithm. To do so, you can use |qg| API commands, or, "
#~ "even easier, use one of the handy methods provided for such task."
#~ msgstr ""

#~ msgid ""
#~ "Apart from the functions used to call algorithms, importing the "
#~ "``processing`` package will also import some additional functions that make "
#~ "it easier to work with data, particularly vector data. They are just "
#~ "convenience functions that wrap some functionality from the |qg| API, "
#~ "usually with a less complex syntax. These functions should be used when "
#~ "developing new algorithms, as they make it easier to operate with input "
#~ "data."
#~ msgstr ""

#~ msgid ""
#~ "Below is a list of some of this commands. More information can be found in "
#~ "the classes under the ``processing/tools`` package, and aso in the example "
#~ "scripts provided with |qg|."
#~ msgstr ""

#~ msgid ""
#~ "``getobject(obj)``: Returns a |qg| object (a layer or table) from the passed"
#~ " object, which can be a filename or the name of the object in the |qg| Table"
#~ " of Contents."
#~ msgstr ""

#~ msgid ""
#~ "Layers and tables values are strings containing the filepath of the "
#~ "corresponding object. To turn them into a |qg| object, you can use the "
#~ "``processing.getObjectFromUri()`` function. Multiple inputs also have a "
#~ "string value, which contains the filepaths to all selected object, separated"
#~ " by semicolons (``;``)."
#~ msgstr ""

#~ msgid ""
#~ "When you declare an output, the algorithm will try to add it to |qg| once it"
#~ " is finished. That is the reason why, although the ``runalg()`` method does "
#~ "not load the layers it produces, the final TWI layer will be loaded, since "
#~ "it is saved to the file entered by the user, which is the value of the "
#~ "corresponding output."
#~ msgstr ""

#~ msgid ""
#~ "There is not a proccesing console in QGIS, but all processing commands are "
#~ "available instead from the QGIS built-in Python console. That means that you"
#~ " can incorporate those command to your console work and connect processing "
#~ "algorithms to all the other features (including methods from the QGIS API) "
#~ "available from there."
#~ msgstr ""

#~ msgid ""
#~ "In this chapter we will see how to use processing algorithms from the QGIS "
#~ "Python console, and also how to write your own algorithms using Python."
#~ msgstr ""

#~ msgid ""
#~ "Raster Layer, Vector Layer or Table. Simply use a string with the name that "
#~ "identifies the data object to use (the name it has in the QGIS Table of "
#~ "Contents) or a filename (if the corresponding layer is not opened, it will "
#~ "be opened, but not added to the map canvas). If you have an instance of a "
#~ "QGIS object representing the layer, you can also pass it as parameter. If "
#~ "the input is optional and you do not want to use any data object, use "
#~ "``None``."
#~ msgstr ""

#~ msgid ""
#~ "Unlike when an algorithm is executed from the toolbox, outputs are not added"
#~ " to the map canvas if you execute that same algorithm from the Python "
#~ "Console. If you want to add an output to it, you have to do it yourself "
#~ "after running the algorithm. To do so, you can use QGIS API commands, or, "
#~ "even easier, use one of the handy methods provided for such task."
#~ msgstr ""

#~ msgid ""
#~ "Below is a list of some of this commands. More information can be found in "
#~ "the classes under the ``processing/tools`` package, and aso in the example "
#~ "scripts provided with QGIS."
#~ msgstr ""

#~ msgid ""
#~ "``getobject(obj)``: Returns a QGIS object (a layer or table) from the passed"
#~ " object, which can be a filename or the name of the object in the QGIS Table"
#~ " of Contents."
#~ msgstr ""

#~ msgid ""
#~ "Layers and tables values are strings containing the filepath of the "
#~ "corresponding object. To turn them into a QGIS object, you can use the "
#~ "``processing.getObjectFromUri()`` function. Multiple inputs also have a "
#~ "string value, which contains the filepaths to all selected object, separated"
#~ " by semicolons (``;``)."
#~ msgstr ""

#~ msgid ""
#~ "When you declare an output, the algorithm will try to add it to QGIS once it"
#~ " is finished. That is the reason why, although the ``runalg()`` method does "
#~ "not load the layers it produces, the final TWI layer will be loaded, since "
#~ "it is saved to the file entered by the user, which is the value of the "
#~ "corresponding output."
#~ msgstr ""
