# 
# Translators:
# BJ Jang <jangbi882@gmail.com>, 2015
# Kwon.Yongchan <ruvyn@naver.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-05 22:35\n"
"PO-Revision-Date: 2016-07-18 09:38+0000\n"
"Last-Translator: Richard Duivenvoorde <richard@duif.net>\n"
"Language-Team: Korean (http://www.transifex.com/qgis/qgis-documentation/language/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:7
msgid "IDE settings for writing and debugging plugins"
msgstr "플러그인 작성 및 디버그 작업을 위한 IDE 설정"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:18
msgid "A note on configuring your IDE on Windows"
msgstr "윈도우 환경의 IDE 설정에 대한 지침"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:75
msgid "Debugging using Eclipse and PyDev"
msgstr "Eclipse 및 PyDev를 이용한 디버깅"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:78
msgid "Installation"
msgstr "설치하기"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:80
msgid "To use Eclipse, make sure you have installed the following"
msgstr "Eclipse를 사용하려면 다음 항목들을 설치했는지 확인하십시오."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:87
msgid "Preparing QGIS"
msgstr "QGIS 준비하기"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:96
msgid ""
"Search for *Plugin reloader* and install it as well. This will let you "
"reload a plugin instead of having to close and restart QGIS to have the "
"plugin reloaded."
msgstr "*Plugin reloader* 도 검색해서 설치하십시오. 이 플러그인은 QGIS를 종료하고 다시 실행할 필요 없이 플러그인을 다시 불러올 수 있도록 해줍니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:101
msgid "Setting up Eclipse"
msgstr "Eclipse 설정하기"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:110
msgid "Eclipse project"
msgstr "Eclipse 프로젝트"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:123
msgid "Configuring the debugger"
msgstr "디버거 설정하기"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:144
msgid "Breakpoint"
msgstr "중단점(breakpoint)"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:146
msgid ""
"A very interesting thing you can make use of now is the debug console. Make "
"sure that the execution is currently stopped at a break point, before you "
"proceed."
msgstr "이제 굉장히 흥미로운 디버그 콘솔을 활용할 수 있게 됐습니다. 다음으로 진행하기 전에 플러그인 실행이 중단점에서 멈춰 있는지 확인하세요."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:162
#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:193
msgid "PyDev Debug Console"
msgstr "PyDev 디버그 콘솔"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:164
msgid ""
"You have now an interactive console which let's you test any commands from "
"within the current context. You can manipulate variables or make API calls "
"or whatever you like."
msgstr "이제 현재 컨텍스트 안에서 어떤 명령어라도 테스트해볼 수 있는 상호작용 콘솔을 사용할 수 있게 됐습니다. 변수를 조정하거나 API 호출을 만들어보거나 무엇이든 할 수 있습니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:174
msgid "Making eclipse understand the API"
msgstr "Eclipse에게 API를 이해시키기"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:176
msgid ""
"A very handy feature is to have Eclipse actually know about the QGIS API. "
"This enables it to check your code for typos. But not only this, it also "
"enables Eclipse to help you with autocompletion from the imports to API "
"calls."
msgstr "Eclipse가 실제로 QGIS API에 대해 알도록 하는 매우 유용한 기능이 있습니다. 이 기능을 활성화하면 여러분의 코드에 오타가 있는지 확인해볼 수 있습니다. 뿐만 아니라, Eclipse의 도움을 받아 임포트에서 API 호출에 걸쳐 자동완성 기능을 활성화할 수도 있습니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:180
msgid ""
"To do this, Eclipse parses the QGIS library files and gets all the "
"information out there. The only thing you have to do is to tell Eclipse "
"where to find the libraries."
msgstr "이를 위해 Eclipse는 QGIS 라이브러리 파일을 파싱해서 필요한 모든 정보를 얻어옵니다. 여러분이 직접 해야 할 작업은 Eclipse에게 어디서 라이브러리 파일들을 찾을 수 있는지 알려주는 것뿐입니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:186
msgid ""
"You will see your configured python interpreter in the upper part of the "
"window (at the moment python2.7 for QGIS) and some tabs in the lower part. "
"The interesting tabs for us are *Libraries* and *Forced Builtins*."
msgstr "창의 상단에서 여러분이 설정한 파이썬 인터프리터(현재 QGIS 용 파이썬 2.7 버전)를, 하단에서 탭 몇 개를 볼 수 있습니다. 우리가 주목해야 할 탭은 :guilabel:`Libraries` 와 :guilabel:`Forced Builtins` 입니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:210
msgid "Click *OK* and you're done."
msgstr ":guilabel:`OK` 를 클릭하면 끝입니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:217
msgid ""
"For another possible setting of Eclipse to work with QGIS Python plugins, "
"check `this link <http://linfiniti.com/2011/12/remote-debugging-qgis-python-"
"plugins-with-pydev>`_"
msgstr "Eclipse를 QGIS 플러그인과 같이 동작하게 하는 다른 설정 방법도 있습니다. `이 링크 <http://linfiniti.com/2011/12/remote-debugging-qgis-python-plugins-with-pydev>`_ 를 확인해보세요."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:221
msgid "Debugging using PDB"
msgstr "PDB를 이용한 디버깅"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:236
msgid "Then run QGIS from the command line."
msgstr "그 다음 명령어를 통해 QGIS를 실행하십시오."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:246
msgid ""
"And when the application hits your breakpoint you can type in the console!"
msgstr "그러면 응용 프로그램이 여러분이 지정한 중단점에서 멈췄을 때 콘솔에 입력할 수 있습니다!"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:248
#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:253
msgid "plugins"
msgstr "플러그인"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:248
msgid "testing"
msgstr "테스트"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:253
msgid "releasing"
msgstr "배포"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:13
msgid ""
"Although each programmer has his preferred IDE/Text editor, here are some "
"recommendations for setting up popular IDE's for writing and debugging QGIS "
"Python plugins."
msgstr "각각의 프로그래머가 선호하는 통합개발환경(Integrated Development Environment, IDE) 또는 텍스트 편집기는 저마다 다르긴 하지만, QGIS 파이썬 플러그인 작성 및 디버그 작업을 위해 인기 있는 IDE를 설정하는 방법을 몇 가지 추천해보겠습니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:20
msgid ""
"On Linux there is no additional configuration needed to develop plugins. But"
" on Windows you need to make sure you that you have the same environment "
"settings and use the same libraries and interpreter as QGIS. The fastest way"
" to do this, is to modify the startup batch file of QGIS."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:25
msgid ""
"If you used the OSGeo4W Installer, you can find this under the ``bin`` "
"folder of your OSGeo4W install. Look for something like "
":file:`C:\\\\OSGeo4W\\\\bin\\\\qgis-unstable.bat`."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:29
msgid ""
"For using `Pyscripter IDE <http://code.google.com/p/pyscripter>`_, here's "
"what you have to do:"
msgstr "`Pyscripter IDE <https://github.com/pyscripter/pyscripter>`_ 를 사용하려면, 다음과 같은 작업을 해야 합니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:32
msgid ""
"Make a copy of :file:`qgis-unstable.bat` and rename it ``pyscripter.bat``."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:33
msgid ""
"Open it in an editor. And remove the last line, the one that starts QGIS."
msgstr "편집기에서 해당 파일을 연 다음, QGIS를 시작 시키는 마지막 줄을 삭제하십시오."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:34
msgid ""
"Add a line that points to your Pyscripter executable and add the commandline"
" argument that sets the version of Python to be used (2.7 in the case of "
"QGIS >= 2.0)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:37
msgid ""
"Also add the argument that points to the folder where Pyscripter can find "
"the Python dll used by QGIS, you can find this under the bin folder of your "
"OSGeoW install"
msgstr "또 Pyscripter가 QGIS에서 사용하는 Python dll 파일을 찾을 수 있는 폴더를 가리키는 인자를 추가하십시오. 이 파일은 OSGeo4W 설치 경로의 ``bin`` 폴더에 있습니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:51
msgid ""
"Now when you double click this batch file it will start Pyscripter, with the"
" correct path."
msgstr "이제 이 배치 파일을 더블클릭하면 정확한 경로와 함께 Pyscripter를 실행할 것입니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:54
msgid ""
"More popular than Pyscripter, Eclipse is a common choice among developers. "
"In the following sections, we will be explaining how to configure it for "
"developing and testing plugins. To prepare your environment for using "
"Eclipse in Windows, you should also create a batch file and use it to start "
"Eclipse."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:59
msgid "To create that batch file, follow these steps:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:61
msgid ""
"Locate the folder where :file:`qgis_core.dll` resides in. Normally this is "
":file:`C:\\\\OSGeo4W\\\\apps\\\\qgis\\\\bin`, but if you compiled your own "
"QGIS application this is in your build folder in "
":file:`output/bin/RelWithDebInfo`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:64
msgid "Locate your :file:`eclipse.exe` executable."
msgstr ":file:`eclipse.exe` 실행 파일의 위치를 찾으십시오."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:65
msgid ""
"Create the following script and use this to start eclipse when developing "
"QGIS plugins."
msgstr "다음과 같은 스크립트를 생성한 다음 QGIS 플러그인 개발 시 이 배치 파일을 써서 Eclipse를 실행하십시오."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:82
msgid "`Eclipse <https://eclipse.org>`_"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:83
msgid ""
"`Aptana Eclipse Plugin "
"<http://www.aptana.com/products/studio3/success_plugin.html>`_ or `PyDev "
"<http://www.pydev.org>`_"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:84
msgid "QGIS 2.x"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:89
msgid ""
"There is some preparation to be done on QGIS itself. Two plugins are of "
"interest: **Remote Debug** and **Plugin reloader**."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:92
msgid "Go to :menuselection:`Plugins --> Manage and Install plugins...`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:93
msgid ""
"Search for *Remote Debug* ( at the moment it's still experimental, so enable"
" experimental plugins under the :guilabel:`Options` tab in case it does not "
"show up). Install it."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:103
msgid ""
"In Eclipse, create a new project. You can select *General Project* and link "
"your real sources later on, so it does not really matter where you place "
"this project."
msgstr "Eclipse에서 새 프로젝트를 생성하십시오. *General Project* 를 선택한 다음 나중에 여러분의 실제 리소스를 링크할 수 있기 때문에 이 프로젝트를 어디에 저장하든 크게 상관없습니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:112
msgid ""
"Now right-click your new project and choose :menuselection:`New --> Folder`."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:114
msgid ""
"Click **[Advanced]** and choose :guilabel:`Link to alternate location "
"(Linked Folder)`. In case you already have sources you want to debug, choose"
" these. In case you don't, create a folder as it was already explained."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:118
msgid ""
"Now in the view :guilabel:`Project Explorer`, your source tree pops up and "
"you can start working with the code. You already have syntax highlighting "
"and all the other powerful IDE tools available."
msgstr "이제 :guilabel:`Project Explorer` 뷰에 소스 트리가 표출되어 코드 작업을 시작할 수 있습니다. 이미 구문 강조가 되어 있으며 다른 모든 강력한 IDE 도구도 사용할 수 있습니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:125
msgid ""
"To get the debugger working, switch to the Debug perspective in Eclipse "
"(:menuselection:`Window --> Open Perspective --> Other --> Debug`)."
msgstr "디버거를 실행시키려면 Eclipse를 디버그 퍼스펙티브로 전환하십시오. (:menuselection:`Window --> Open Perspective --> Other --> Debug` 메뉴)"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:128
msgid ""
"Now start the PyDev debug server by choosing :menuselection:`PyDev --> Start"
" Debug Server`."
msgstr "이제 메뉴에서 :menuselection:`PyDev --> Start Debug Server` 를 선택해서 PyDev 디버그 서버를 실행합니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:131
msgid ""
"Eclipse is now waiting for a connection from QGIS to its debug server and "
"when QGIS connects to the debug server it will allow it to control the "
"python scripts. That's exactly what we installed the *Remote Debug* plugin "
"for. So start QGIS in case you did not already and click the bug symbol."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:136
msgid ""
"Now you can set a breakpoint and as soon as the code hits it, execution will"
" stop and you can inspect the current state of your plugin. (The breakpoint "
"is the green dot in the image below, set one by double clicking in the white"
" space left to the line you want the breakpoint to be set)."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:150
msgid ""
"Open the Console view (:menuselection:`Window --> Show view`). It will show "
"the :guilabel:`Debug Server` console which is not very interesting. But "
"there is a button **[Open Console]** which lets you change to a more "
"interesting PyDev Debug Console. Click the arrow next to the **[Open "
"Console]** button and choose *PyDev Console*. A window opens up to ask you "
"which console you want to start. Choose *PyDev Debug Console*. In case its "
"greyed out and tells you to Start the debugger and select the valid frame, "
"make sure that you've got the remote debugger attached and are currently on "
"a breakpoint."
msgstr "콘솔 뷰(:menuselection:`Window --> Show view` 메뉴)를 여십시오. 그러면 :guilabel:`Debug Server` 콘솔이 나타나는데 그렇게 흥미로운 녀석은 아닙니다. 다만 여기에 있는 **[Open Console]** 버튼을 통해 훨씬 흥미로운 PyDev 디버그 콘솔로 변경할 수 있습니다. **[Open Console]** 옆에 있는 화살표를 클릭한 다음 *PyDev Console* 을 선택하십시오. 어떤 콘솔을 실행할지 묻는 창이 뜰 겁니다. *PyDev Debug Console* 을 선택하세요. 해당 항목이 회색으로 꺼져 있고 \"Start the debugger and select the valid frame\" 이라는 메시지를 표출할 경우, *Remote Debugger* 를 제대로 설치/실행했는지 그리고 플러그인이 현재 중단점에서 멈춰 있는지 확인하십시오."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:168
msgid ""
"A little bit annoying is, that every time you enter a command, the console "
"switches back to the Debug Server. To stop this behavior, you can click the "
"*Pin Console* button when on the Debug Server page and it should remember "
"this decision at least for the current debug session."
msgstr "약간 짜증나는 점이라면 명령어를 입력할 때마다 콘솔이 디버그 서버로 전환된다는 점입니다. 이런 동작을 멈추려면 디버그 서버 페이지에서 :guilabel:`Pin Console` 버튼을 클릭해서 적어도 현재 디버그 세션 동안은 이 결정을 기억하도록 하면 됩니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:184
msgid ""
"Click :menuselection:`Window --> Preferences --> PyDev --> Interpreter --> "
"Python`."
msgstr "메뉴에서 :menuselection:`Window --> Preferences --> PyDev --> Interpreter --> Python` 을 클릭하십시오."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:195
msgid ""
"First open the Libraries tab. Add a New Folder and choose the python folder "
"of your QGIS installation. If you do not know where this folder is (it's not"
" the plugins folder) open QGIS, start a python console and simply enter "
"``qgis`` and press Enter. It will show you which QGIS module it uses and its"
" path. Strip the trailing ``/qgis/__init__.pyc`` from this path and you've "
"got the path you are looking for."
msgstr "먼저 라이브러리 탭을 여십시오. :guilabel:`New Folder` 버튼을 클릭한 다음 QGIS 설치 경로의 파이썬 폴더를 선택해서 추가하십시오. 이 폴더가 어디에 있는지 모른다면 (플러그인 폴더는 아닙니다) QGIS로 돌아가 파이썬 콘솔을 실행 후, ``qgis`` 라고만 입력한 후 엔터를 치십시오. 어떤 QGIS 모듈이 사용되는 지가 그 경로와 함께 표시될 것입니다. 경로의 마지막 부분에서 ``/qgis/__init__.pyc`` 스트링을 제거하면 여러분이 찾고 있는 경로가 됩니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:202
msgid ""
"You should also add your plugins folder here (on Linux it is "
":file:`~/.qgis2/python/plugins`)."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:205
msgid ""
"Next jump to the *Forced Builtins* tab, click on *New...* and enter "
"``qgis``. This will make Eclipse parse the QGIS API. You probably also want "
"Eclipse to know about the PyQt4 API. Therefore also add PyQt4 as forced "
"builtin. That should probably already be present in your libraries tab."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:213
msgid ""
"Every time the QGIS API changes (e.g. if you're compiling QGIS master and "
"the SIP file changed), you should go back to this page and simply click "
"*Apply*. This will let Eclipse parse all the libraries again."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:223
msgid ""
"If you do not use an IDE such as Eclipse, you can debug using PDB, following"
" these steps."
msgstr "Eclipse 같은 IDE를 사용하지 않을 경우, 다음과 같은 과정을 거쳐 PDB를 이용해 디버그할 수 있습니다."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:226
msgid "First add this code in the spot where you would like to debug"
msgstr "먼저 디버그하고자 하는 부분에 다음 코드를 추가하십시오."

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:238
msgid "On Linux do::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:242
msgid "On Mac OS X do::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:251
msgid "**TODO:**"
msgstr "**TODO:**"

#: ../../source/docs/pyqgis_developer_cookbook/ide_debugging.rst:251
msgid "Add testing information"
msgstr "테스트 작업 정보 추가"

#~ msgid ""
#~ "Although each programmer has his prefered IDE/Text editor, here are some "
#~ "recommendations for setting up popular IDE's for writing and debugging QGIS "
#~ "Python plugins."
#~ msgstr ""

#~ msgid ""
#~ "On Linux there is no additional configuration needed to develop plug-ins. "
#~ "But on Windows you need to make sure you that you have the same environment "
#~ "settings and use the same libraries and interpreter as QGIS. The fastest way"
#~ " to do this, is to modify the startup batch file of QGIS."
#~ msgstr ""

#~ msgid ""
#~ "If you used the OSGeo4W Installer, you can find this under the bin folder of"
#~ " your OSGoeW install. Look for something like :file:`C:\\\\OSGeo4W\\\\bin"
#~ "\\\\qgis-unstable.bat`."
#~ msgstr ""

#~ msgid ""
#~ "For using `Pyscripter IDE <http://code.google.com/p/pyscripter>`_, here's "
#~ "what ou have to do:"
#~ msgstr ""

#~ msgid "Make a copy of qgis-unstable.bat and rename it pyscripter.bat."
#~ msgstr ""

#~ msgid ""
#~ "Open it in an editor. And remove the last line, the one that starts qgis."
#~ msgstr ""

#~ msgid ""
#~ "Add a line that points to the your pyscripter executable and add the "
#~ "commandline argument that sets the version of python to be used (2.7 in the "
#~ "case of QGIs 2.0)"
#~ msgstr ""

#~ msgid ""
#~ "Also add the argument that points to the folder where pyscripter can find "
#~ "the python dll used by qgis, you can find this under the bin folder of your "
#~ "OSGeoW install::"
#~ msgstr ""

#~ msgid ""
#~ "Now when you double click this batch file it will start pyscripter, with the"
#~ " correct path."
#~ msgstr ""

#~ msgid ""
#~ "More popular that Pyscripter, Eclipse is a common choice among developers. "
#~ "In the following sections, we will be explaining how to configure it for "
#~ "depelopping and testing plugins. To prepare your environment for using "
#~ "Eclipse in windows, you should also create a batch file and use it to start "
#~ "Eclipse."
#~ msgstr ""

#~ msgid "To create that batch file, follow these steps."
#~ msgstr ""

#~ msgid ""
#~ "Locate the folder where ``qgis_core.dll`` resides in. Normally this is "
#~ "``C:\\OSGeo4W\\apps\\qgis\\bin`` , but if you compiled your own qgis "
#~ "application this is in your build folder in ``output/bin/RelWithDebInfo``"
#~ msgstr ""

#~ msgid "Locate your eclipse.exe executable."
#~ msgstr ""

#~ msgid ""
#~ "Create the following script and use this to start eclipse when developping "
#~ "QGIS plugins."
#~ msgstr ""

#~ msgid "Eclipse"
#~ msgstr ""

#~ msgid "Aptana Eclipse Plugin or PyDev"
#~ msgstr ""

#~ msgid "QGIS 2.0"
#~ msgstr ""

#~ msgid ""
#~ "There is some preparation to be done on QGIS itself. Two plugins are of "
#~ "interest: *Remote Debug* and *Plugin reloader*."
#~ msgstr ""

#~ msgid "Go to *Plugins/Fetch python plugins*"
#~ msgstr ""

#~ msgid ""
#~ "Search for Remote Debug ( at the moment it's still experimental, so enable "
#~ "experimental plugins under the Options tab in case it does not show up ). "
#~ "Install it."
#~ msgstr ""

#~ msgid ""
#~ "In Eclipse, create a new project. You can select *General Project* and link "
#~ "your real sources later on, so it does not really mather where you place "
#~ "this project."
#~ msgstr ""

#~ msgid "Now right click your new project and choose *New => Folder*."
#~ msgstr ""

#~ msgid ""
#~ "Click *Advanced* and choose *Link to alternate location (Linked Folder)*. In"
#~ " case you already have sources you want to debug, choose these, in case you "
#~ "don't, create a folder as it was already explained"
#~ msgstr ""

#~ msgid ""
#~ "Now in the view *Project Explorer*, your source tree pops up and you can "
#~ "start working with the code. You already have syntax highlighting and all "
#~ "the other powerful IDE tools available."
#~ msgstr ""

#~ msgid ""
#~ "To get the debugger working, switch to the Debug perspective in eclipse "
#~ "(*Window=>Open Perspective=>Other=>Debug*)."
#~ msgstr ""

#~ msgid ""
#~ "Now start the PyDev debug server by choosing *PyDev=>Start Debug Server*."
#~ msgstr ""

#~ msgid ""
#~ "Eclipse is now waiting for a connection from QGIS to its debug server and "
#~ "when QGIS connects to the debug server it will allow it to control the "
#~ "python scripts. That's exactly what we installed the Remote Debug plugin "
#~ "for. So start QGIS in case you did not already and click the bug symbol ."
#~ msgstr ""

#~ msgid ""
#~ "Now you can set a breakpoint and as soon as the code hits it, execution will"
#~ " stop and you can inspect the current state of your plugin. (The breakpoint "
#~ "is the green dot in the image below, set one by double clicking in the white"
#~ " space left to the line you want the breakpoint to be set)"
#~ msgstr ""

#~ msgid ""
#~ "Open the Console view (*Window => Show view*). It will show the Debug Server"
#~ " console which is not very interesting. But there is a button *Open Console*"
#~ " which lets you change to a more interesting PyDev Debug Console. Click the "
#~ "arrow next to the Open Console button and choose *PyDev Console*. A window "
#~ "opens up to ask you which console you want to start. Choose *PyDev Debug "
#~ "Console*. In case its greyed out and tells you to Start the debugger and "
#~ "select the valid frame, make sure that you've got the remote debugger "
#~ "attached and are currently on a breakpoint."
#~ msgstr ""

#~ msgid ""
#~ "A little bit annoying is, that everytime you enter a command, the console "
#~ "switches back to the Debug Server. To stop this behavior, you can click the "
#~ "*Pin Console* button when on the Debug Server page and it should remember "
#~ "this decision at least for the current debug session."
#~ msgstr ""

#~ msgid "Click *Window=>Preferences=>PyDev=>Interpreter - Python*."
#~ msgstr ""

#~ msgid ""
#~ "First open the Libraries tab. Add a New Folder and choose the python folder "
#~ "of your QGIS installation. If you do not know where this folder is (it's not"
#~ " the plugins folder) open QGIS, start a python console and simply enter "
#~ "``qgis`` and press enter. It will show you which qgis module it uses and its"
#~ " path. Strip the trailing ``/qgis/__init__.pyc`` from this path and you've "
#~ "got the path you are looking for."
#~ msgstr ""

#~ msgid ""
#~ "You should also add your plugins folder here (on linux its "
#~ "~/.qgis/python/plugins )."
#~ msgstr ""

#~ msgid ""
#~ "Next jump to the *Forced Builtins* tab, click on *New...* and enter "
#~ "``qgis``. This will make eclipse parse the QGIS API. You probably also want "
#~ "eclipse to know about the PyQt4 API. Therefore also add PyQt4 as forced "
#~ "builtin. That should probably already be present in your libraries tab"
#~ msgstr ""

#~ msgid ""
#~ "Note: everytime the QGIS API changes (e.g. if you're compiling QGIS master "
#~ "and the sip file changed), you should go back to this page and simply click "
#~ "*Apply*. This will let Eclipse parse all the libraries again."
#~ msgstr ""

#~ msgid ""
#~ "If you do not use an IDE such as Eclipse, you can debug using PDB, following"
#~ " this steps."
#~ msgstr ""

#~ msgid "First add this code in the spot where you would like to debug::"
#~ msgstr ""

#~ msgid "On Linux do:"
#~ msgstr ""

#~ msgid ":command:`$ ./Qgis`"
#~ msgstr ""

#~ msgid "On Mac OS X do:"
#~ msgstr ""

#~ msgid ":command:`$ /Applications/Qgis.app/Contents/MacOS/Qgis`"
#~ msgstr ""
